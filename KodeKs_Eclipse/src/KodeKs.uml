<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20110701" xmlns:xmi="http://www.omg.org/spec/XMI/20110701" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:UMLLabProfile="http:///schemas/UMLLabProfile/NS/0" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/4.0.0/UML" xsi:schemaLocation="http:///schemas/UMLLabProfile/NS/0 pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile">
  <uml:Model xmi:id="_zRuUgFOqEeSKJZkEFL8Tcg" name="KodeKs">
    <eAnnotations xmi:id="_zesZgFOqEeSKJZkEFL8Tcg" source="http://ns.yatta.de/umllab">
      <contents xmi:type="ecore:EAnnotation" xmi:id="_zesZgVOqEeSKJZkEFL8Tcg" source="codegen">
        <details xmi:id="_zesZglOqEeSKJZkEFL8Tcg" key="codegenDirectory" value="/KodeKsgesamt/src"/>
        <details xmi:id="_0bFwUFOqEeSKJZkEFL8Tcg" key="AssociatedSourceCode" value="/KodeKsgesamt/src/About.java;169344238/1;/KodeKsgesamt/src/AnalysePanel.java;2997668169/1;/KodeKsgesamt/src/GUI.java;726183177/1;/KodeKsgesamt/src/GameOverPopup.java;680123391/1;/KodeKsgesamt/src/HowToPlayFrame.java;1843495139/1;/KodeKsgesamt/src/KodeKsBoard.java;3251967487/1;/KodeKsgesamt/src/StatusPanel.java;1004507958/1;/KodeKsgesamt/src/KodeKsMenuBar.java;3543674921/1;/KodeKsgesamt/src/KodeKsToolBar.java;2923931324/1;/KodeKsgesamt/src/LayoutChooser.java;1190944114/1;/KodeKsgesamt/src/LoadGame.java;150888345/1;/KodeKsgesamt/src/Location.java;2991079987/1;/KodeKsgesamt/src/NewGameDialog.java;3966672704/1;/KodeKsgesamt/src/PopupWindow.java;1483928572/1;/KodeKsgesamt/src/QuitDialog.java;3770177540/1;/KodeKsgesamt/src/ResignDialog.java;1162374272/1;/KodeKsgesamt/src/RunKodeKs.java;2238772368/1;/KodeKsgesamt/src/SaveGame.java;3519784618/1;/KodeKsgesamt/src/KodeKsData.java;3432411616/1;"/>
      </contents>
    </eAnnotations>
    <elementImport xmi:id="_0CqpQFOqEeSKJZkEFL8Tcg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </elementImport>
    <elementImport xmi:id="_0CqpQVOqEeSKJZkEFL8Tcg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
    </elementImport>
    <elementImport xmi:id="_0CqpQlOqEeSKJZkEFL8Tcg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
    </elementImport>
    <elementImport xmi:id="_0CqpQ1OqEeSKJZkEFL8Tcg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
    </elementImport>
    <elementImport xmi:id="_0CqpRFOqEeSKJZkEFL8Tcg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
    </elementImport>
    <elementImport xmi:id="_0CqpRVOqEeSKJZkEFL8Tcg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </elementImport>
    <elementImport xmi:id="_0CqpRlOqEeSKJZkEFL8Tcg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
    </elementImport>
    <elementImport xmi:id="_0CqpR1OqEeSKJZkEFL8Tcg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
    </elementImport>
    <elementImport xmi:id="_0CqpSFOqEeSKJZkEFL8Tcg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </elementImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_0B7CYFOqEeSKJZkEFL8Tcg" name="java">
      <packagedElement xmi:type="uml:Package" xmi:id="_0B7CYVOqEeSKJZkEFL8Tcg" name="awt">
        <packagedElement xmi:type="uml:Package" xmi:id="_0B7CYlOqEeSKJZkEFL8Tcg" name="event">
          <packagedElement xmi:type="uml:Class" xmi:id="_0NHlwFOqEeSKJZkEFL8Tcg" name="ActionEvent"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_0NIz4VOqEeSKJZkEFL8Tcg" name="ActionListener"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_0NKCAFOqEeSKJZkEFL8Tcg" name="WindowEvent"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_0Nn8EFOqEeSKJZkEFL8Tcg" name="MouseEvent"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_0NpxQFOqEeSKJZkEFL8Tcg" name="MouseListener"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_0NUaEFOqEeSKJZkEFL8Tcg" name="Color"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_0NVoMVOqEeSKJZkEFL8Tcg" name="Dimension"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_0NW2UFOqEeSKJZkEFL8Tcg" name="GridLayout"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_0NkRsFOqEeSKJZkEFL8Tcg" name="BorderLayout"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_0Nmt8FOqEeSKJZkEFL8Tcg" name="Toolkit"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_0OISYVOqEeSKJZkEFL8Tcg" name="Font"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_0OKHkVOqEeSKJZkEFL8Tcg" name="GridBagLayout"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_0OLVsFOqEeSKJZkEFL8Tcg" name="GridBagConstraints"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_0OL8wVOqEeSKJZkEFL8Tcg" name="Insets"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_0OPAEFOqEeSKJZkEFL8Tcg" name="Graphics"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_0PIX8FOqEeSKJZkEFL8Tcg" name="Button"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_0PJmEFOqEeSKJZkEFL8Tcg" name="FlowLayout"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_0PK0MVOqEeSKJZkEFL8Tcg" name="Label"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_0PMCUVOqEeSKJZkEFL8Tcg" name="Panel"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_0PeWMFOqEeSKJZkEFL8Tcg" name="EventQueue"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_0RnrUlOqEeSKJZkEFL8Tcg" name="Point"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_0B7CZVOqEeSKJZkEFL8Tcg" name="util">
        <packagedElement xmi:type="uml:Class" xmi:id="_0NZSkFOqEeSKJZkEFL8Tcg" name="ArrayList"/>
        <packagedElement xmi:type="uml:DataType" xmi:id="_0QPyQVOqEeSKJZkEFL8Tcg" name="Date"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_0B7CZlOqEeSKJZkEFL8Tcg" name="io">
        <packagedElement xmi:type="uml:Interface" xmi:id="_0NbHwFOqEeSKJZkEFL8Tcg" name="Serializable"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_0ChfUFOqEeSKJZkEFL8Tcg" name="beans">
        <packagedElement xmi:type="uml:Interface" xmi:id="_0O0O4FOqEeSKJZkEFL8Tcg" name="PropertyChangeListener"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_0C-LQFOqEeSKJZkEFL8Tcg" name="text">
        <packagedElement xmi:type="uml:Class" xmi:id="_0QN9EFOqEeSKJZkEFL8Tcg" name="DateFormat"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_0QPLMVOqEeSKJZkEFL8Tcg" name="SimpleDateFormat"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_0QuTYVOqEeSKJZkEFL8Tcg" name="lang">
        <packagedElement xmi:type="uml:Class" xmi:id="_0QuTYlOqEeSKJZkEFL8Tcg" name="Exception"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_0Rd6T1OqEeSKJZkEFL8Tcg" name="Object"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_0B7CY1OqEeSKJZkEFL8Tcg" name="javax">
      <packagedElement xmi:type="uml:Package" xmi:id="_0B7CZFOqEeSKJZkEFL8Tcg" name="swing">
        <packagedElement xmi:type="uml:Package" xmi:id="_0CN9UFOqEeSKJZkEFL8Tcg" name="border">
          <packagedElement xmi:type="uml:Class" xmi:id="_0OEA8FOqEeSKJZkEFL8Tcg" name="EmptyBorder"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_0OSDYFOqEeSKJZkEFL8Tcg" name="MatteBorder"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_0NXdYVOqEeSKJZkEFL8Tcg" name="JScrollPane"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_0N96UFOqEeSKJZkEFL8Tcg" name="JFrame"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_0OCLwFOqEeSKJZkEFL8Tcg" name="JPanel"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_0OFPEFOqEeSKJZkEFL8Tcg" name="JButton"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_0OGdMFOqEeSKJZkEFL8Tcg" name="JLabel"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_0OHrUFOqEeSKJZkEFL8Tcg" name="SwingConstants"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_0OJggVOqEeSKJZkEFL8Tcg" name="JTextPane"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_0OPnIVOqEeSKJZkEFL8Tcg" name="BoxLayout"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_0OQ1QFOqEeSKJZkEFL8Tcg" name="ImageIcon"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_0OmMcFOqEeSKJZkEFL8Tcg" name="JCheckBoxMenuItem"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_0OoBoFOqEeSKJZkEFL8Tcg" name="JMenu"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_0OpPwFOqEeSKJZkEFL8Tcg" name="JMenuBar"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_0OrsAFOqEeSKJZkEFL8Tcg" name="JMenuItem"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_0OthMFOqEeSKJZkEFL8Tcg" name="JSeparator"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_0O2EEFOqEeSKJZkEFL8Tcg" name="AbstractAction"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_0O3SMVOqEeSKJZkEFL8Tcg" name="Action"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_0O4gUVOqEeSKJZkEFL8Tcg" name="ButtonGroup"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_0O5HYVOqEeSKJZkEFL8Tcg" name="JRadioButtonMenuItem"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_0O6VgVOqEeSKJZkEFL8Tcg" name="SwingUtilities"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_0O7joFOqEeSKJZkEFL8Tcg" name="UIManager"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_0O8xwFOqEeSKJZkEFL8Tcg" name="UnsupportedLookAndFeelException"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_0PBqQFOqEeSKJZkEFL8Tcg" name="JFileChooser"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_0PNQcFOqEeSKJZkEFL8Tcg" name="JTextField"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_0PZdsFOqEeSKJZkEFL8Tcg" name="JDialog"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_0QRAYFOqEeSKJZkEFL8Tcg" name="JOptionPane"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_0Q3dWlOqEeSKJZkEFL8Tcg" name="JToolBar"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_0C-LQVOqEeSKJZkEFL8Tcg" name="sound">
        <packagedElement xmi:type="uml:Package" xmi:id="_0C-LQlOqEeSKJZkEFL8Tcg" name="sampled">
          <packagedElement xmi:type="uml:Class" xmi:id="_0QS1kFOqEeSKJZkEFL8Tcg" name="AudioFormat"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_0QUDsFOqEeSKJZkEFL8Tcg" name="AudioInputStream"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_0QUqwVOqEeSKJZkEFL8Tcg" name="AudioSystem"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_0QWf8FOqEeSKJZkEFL8Tcg" name="Clip"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_0QXHAVOqEeSKJZkEFL8Tcg" name="DataLine"/>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_0CqpSVOqEeSKJZkEFL8Tcg" name="KodeKsData">
      <packagedElement xmi:type="uml:Class" xmi:id="_0PFUoFOqEeSKJZkEFL8Tcg" name="KodeKsMove"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_0EwT8FOqEeSKJZkEFL8Tcg" clientDependency="_0QuTYFOqEeSKJZkEFL8Tcg" name="About">
      <ownedComment xmi:id="_0TsvGlOqEeSKJZkEFL8Tcg">
        <body>Dialog shows informations about the authors and the version of the implementation of KodeKs&#xD;
&#xD;
@author K. Vogel &amp; B. Suhr</body>
      </ownedComment>
      <generalization xmi:id="_0QuTaFOqEeSKJZkEFL8Tcg" general="_0PZdsFOqEeSKJZkEFL8Tcg"/>
      <ownedAttribute xmi:id="_0SDwIFOqEeSKJZkEFL8Tcg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_0SDwIVOqEeSKJZkEFL8Tcg" value="1L"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_0SDwIlOqEeSKJZkEFL8Tcg" name="panel1" visibility="package" type="_0OCLwFOqEeSKJZkEFL8Tcg" association="_0UcVwFOqEeSKJZkEFL8Tcg">
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_0SDwI1OqEeSKJZkEFL8Tcg" value="new JPanel()"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_0SDwJVOqEeSKJZkEFL8Tcg" name="panel2" visibility="package" type="_0OCLwFOqEeSKJZkEFL8Tcg" association="_0UcVw1OqEeSKJZkEFL8Tcg">
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_0SDwJlOqEeSKJZkEFL8Tcg" value="new JPanel()"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_0SDwKFOqEeSKJZkEFL8Tcg" name="insetsPanel1" visibility="package" type="_0OCLwFOqEeSKJZkEFL8Tcg" association="_0UcVxlOqEeSKJZkEFL8Tcg">
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_0SDwKVOqEeSKJZkEFL8Tcg" value="new JPanel()"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_0SDwK1OqEeSKJZkEFL8Tcg" name="insetsPanel2" visibility="package" type="_0OCLwFOqEeSKJZkEFL8Tcg" association="_0UcVyVOqEeSKJZkEFL8Tcg">
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_0SDwLFOqEeSKJZkEFL8Tcg" value="new JPanel()"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_0SDwLlOqEeSKJZkEFL8Tcg" name="insetsPanel3" visibility="package" type="_0OCLwFOqEeSKJZkEFL8Tcg" association="_0UmGwVOqEeSKJZkEFL8Tcg">
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_0SDwL1OqEeSKJZkEFL8Tcg" value="new JPanel()"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_0SDwMVOqEeSKJZkEFL8Tcg" name="close" visibility="package" type="_0OFPEFOqEeSKJZkEFL8Tcg" association="_0UmGxFOqEeSKJZkEFL8Tcg">
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_0SDwMlOqEeSKJZkEFL8Tcg" value="new JButton()"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_0SDwNFOqEeSKJZkEFL8Tcg" name="imageLabel" visibility="package" type="_0OGdMFOqEeSKJZkEFL8Tcg" association="_0UmGx1OqEeSKJZkEFL8Tcg">
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_0SDwNVOqEeSKJZkEFL8Tcg" value="new JLabel()"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_0SDwN1OqEeSKJZkEFL8Tcg" name="appNameTextfield" visibility="package" type="_0OGdMFOqEeSKJZkEFL8Tcg" association="_0UmGylOqEeSKJZkEFL8Tcg">
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_0SDwOFOqEeSKJZkEFL8Tcg" value="new JLabel()"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_0SDwOlOqEeSKJZkEFL8Tcg" name="versionTextfield" visibility="package" type="_0OGdMFOqEeSKJZkEFL8Tcg" association="_0UmGzVOqEeSKJZkEFL8Tcg">
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_0SNhIFOqEeSKJZkEFL8Tcg" value="new JLabel()"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_0SNhIlOqEeSKJZkEFL8Tcg" name="copyrightTextfield" visibility="package" type="_0OGdMFOqEeSKJZkEFL8Tcg" association="_0UmG0FOqEeSKJZkEFL8Tcg">
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_0SNhI1OqEeSKJZkEFL8Tcg" value="new JLabel()"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_0SNhJVOqEeSKJZkEFL8Tcg" name="authorTextfield" visibility="package" type="_0OGdMFOqEeSKJZkEFL8Tcg" association="_0Uv3wVOqEeSKJZkEFL8Tcg">
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_0SNhJlOqEeSKJZkEFL8Tcg" value="new JLabel()"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_0SNhKFOqEeSKJZkEFL8Tcg" name="borderLayout1" visibility="package" type="_0NkRsFOqEeSKJZkEFL8Tcg" association="_0Uv3xFOqEeSKJZkEFL8Tcg">
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_0SNhKVOqEeSKJZkEFL8Tcg" value="new BorderLayout()"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_0SNhK1OqEeSKJZkEFL8Tcg" name="borderLayout2" visibility="package" type="_0NkRsFOqEeSKJZkEFL8Tcg" association="_0Uv3x1OqEeSKJZkEFL8Tcg">
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_0SNhLFOqEeSKJZkEFL8Tcg" value="new BorderLayout()"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_0SNhLlOqEeSKJZkEFL8Tcg" name="flowLayout1" visibility="package" type="_0PJmEFOqEeSKJZkEFL8Tcg" association="_0Uv3ylOqEeSKJZkEFL8Tcg">
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_0SNhL1OqEeSKJZkEFL8Tcg" value="new FlowLayout()"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_0SNhMVOqEeSKJZkEFL8Tcg" name="about" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_0SNhMlOqEeSKJZkEFL8Tcg" value="&quot;About KodeKs&quot;"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_0SNhNFOqEeSKJZkEFL8Tcg" name="product" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_0SNhNVOqEeSKJZkEFL8Tcg" value="&quot;KodeKs&quot;"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_0SNhN1OqEeSKJZkEFL8Tcg" name="version" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_0SNhOFOqEeSKJZkEFL8Tcg" value="&quot;Version 1.0&quot;"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_0SNhOlOqEeSKJZkEFL8Tcg" name="copyright" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_0SNhO1OqEeSKJZkEFL8Tcg" value="&quot;Copyright (c) 2014 by&quot;"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_0SXSIFOqEeSKJZkEFL8Tcg" name="comments" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_0SXSIVOqEeSKJZkEFL8Tcg" value="&quot;Knud Vogel &amp; Benjamin Suhr&quot;"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_0SXSI1OqEeSKJZkEFL8Tcg" name="gridBagLayout1" visibility="package" type="_0OKHkVOqEeSKJZkEFL8Tcg" association="_0Uv3zVOqEeSKJZkEFL8Tcg">
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_0SXSJFOqEeSKJZkEFL8Tcg" value="new GridBagLayout()"/>
      </ownedAttribute>
      <interfaceRealization xmi:id="_0QuTYFOqEeSKJZkEFL8Tcg" client="_0EwT8FOqEeSKJZkEFL8Tcg" supplier="_0NIz4VOqEeSKJZkEFL8Tcg" contract="_0NIz4VOqEeSKJZkEFL8Tcg"/>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0TZz8FOqEeSKJZkEFL8Tcg" name="About" specification="_0EwT8VOqEeSKJZkEFL8Tcg">
        <ownedParameter xmi:id="_0TZz8VOqEeSKJZkEFL8Tcg" type="_0EwT8FOqEeSKJZkEFL8Tcg" direction="return"/>
        <language>java</language>
        <body>super();&#xD;
		enableEvents(AWTEvent.WINDOW_EVENT_MASK);&#xD;
		try {&#xD;
			initialize();&#xD;
		} catch (Exception e) {&#xD;
			e.printStackTrace();&#xD;
		}&#xD;
		pack();&#xD;
		setVisible(true);&#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0TZz8lOqEeSKJZkEFL8Tcg" name="initialize" specification="_0EwT9VOqEeSKJZkEFL8Tcg">
        <language>java</language>
        <body>this.setTitle(&quot;About KodeKs&quot;);&#xD;
		this.setBounds(325, 360, 200, 200);&#xD;
		setResizable(false);&#xD;
		panel1.setLayout(borderLayout1);&#xD;
		panel2.setLayout(borderLayout2);&#xD;
		insetsPanel1.setLayout(flowLayout1);&#xD;
		insetsPanel2.setLayout(flowLayout1);&#xD;
		insetsPanel2.setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10));&#xD;
		insetsPanel2.setMinimumSize(new Dimension(60, 47));&#xD;
		insetsPanel2.setPreferredSize(new Dimension(60, 47));&#xD;
		appNameTextfield.setText(product);&#xD;
		versionTextfield.setText(version);&#xD;
		copyrightTextfield.setText(copyright);&#xD;
		authorTextfield.setText(comments);&#xD;
		insetsPanel3.setLayout(gridBagLayout1);&#xD;
		insetsPanel3.setBorder(BorderFactory.createEmptyBorder(10, 60, 10, 10));&#xD;
		insetsPanel3.setMinimumSize(new Dimension(200, 88));&#xD;
		insetsPanel3.setPreferredSize(new Dimension(200, 88));&#xD;
		close.setText(&quot;close&quot;);&#xD;
		close.addActionListener(this);&#xD;
		panel1.setMinimumSize(new Dimension(200, 125));&#xD;
		this.getContentPane().add(panel1, null);&#xD;
		insetsPanel3.add(appNameTextfield, new GridBagConstraints(0, 0, 1, 1, 0.0, 0.0, GridBagConstraints.WEST, GridBagConstraints.NONE, new Insets(0, 35, 0,&#xD;
				0), 181, 0));&#xD;
		insetsPanel3.add(versionTextfield, new GridBagConstraints(0, 1, 1, 1, 0.0, 0.0, GridBagConstraints.WEST, GridBagConstraints.NONE, new Insets(0, 35, 0,&#xD;
				0), 163, 0));&#xD;
		insetsPanel3.add(copyrightTextfield, new GridBagConstraints(0, 2, 1, 1, 0.0, 0.0, GridBagConstraints.WEST, GridBagConstraints.NONE, new Insets(0, 35,&#xD;
				0, 0), 143, 0));&#xD;
		insetsPanel3.add(authorTextfield, new GridBagConstraints(0, 3, 1, 1, 0.0, 0.0, GridBagConstraints.WEST, GridBagConstraints.NONE,&#xD;
				new Insets(0, 35, 0, 0), 171, 0));&#xD;
		panel2.add(insetsPanel2, BorderLayout.WEST);&#xD;
		insetsPanel2.add(imageLabel, null);&#xD;
		panel2.add(insetsPanel3, BorderLayout.CENTER);&#xD;
		insetsPanel1.add(close, null);&#xD;
		panel1.add(insetsPanel1, BorderLayout.SOUTH);&#xD;
		panel1.add(panel2, BorderLayout.NORTH);&#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0TZz81OqEeSKJZkEFL8Tcg" name="processWindowEvent" specification="_0QuTZFOqEeSKJZkEFL8Tcg">
        <ownedParameter xmi:id="_0TZz9FOqEeSKJZkEFL8Tcg" name="e" type="_0NKCAFOqEeSKJZkEFL8Tcg"/>
        <language>java</language>
        <body>if (e.getID() == WindowEvent.WINDOW_CLOSING) {&#xD;
			cancel();&#xD;
		}&#xD;
		super.processWindowEvent(e);&#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0TZz9VOqEeSKJZkEFL8Tcg" name="cancel" specification="_0EwT9lOqEeSKJZkEFL8Tcg">
        <language>java</language>
        <body>dispose();&#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0TZz9lOqEeSKJZkEFL8Tcg" name="actionPerformed" specification="_0QuTZlOqEeSKJZkEFL8Tcg">
        <ownedParameter xmi:id="_0TZz91OqEeSKJZkEFL8Tcg" name="e" type="_0NHlwFOqEeSKJZkEFL8Tcg"/>
        <language>java</language>
        <body>if (e.getSource() == close) {&#xD;
			cancel();&#xD;
		}&#xD;
	</body>
      </ownedBehavior>
      <ownedOperation xmi:id="_0EwT8VOqEeSKJZkEFL8Tcg" name="About" method="_0TZz8FOqEeSKJZkEFL8Tcg">
        <eAnnotations xmi:id="_0EwT8lOqEeSKJZkEFL8Tcg" source="http://www.eclipse.org/uml2/2.0.0/UML">
          <details xmi:id="_0EwT81OqEeSKJZkEFL8Tcg" key="create"/>
        </eAnnotations>
        <ownedParameter xmi:id="_0EwT9FOqEeSKJZkEFL8Tcg" type="_0EwT8FOqEeSKJZkEFL8Tcg" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_0EwT9VOqEeSKJZkEFL8Tcg" name="initialize" visibility="private" method="_0TZz8lOqEeSKJZkEFL8Tcg" raisedException="_0QuTYlOqEeSKJZkEFL8Tcg"/>
      <ownedOperation xmi:id="_0EwT9lOqEeSKJZkEFL8Tcg" name="cancel" visibility="package" method="_0TZz9VOqEeSKJZkEFL8Tcg"/>
      <ownedOperation xmi:id="_0QuTZFOqEeSKJZkEFL8Tcg" name="processWindowEvent" visibility="protected" method="_0TZz81OqEeSKJZkEFL8Tcg">
        <ownedParameter xmi:id="_0QuTZVOqEeSKJZkEFL8Tcg" name="e" type="_0NKCAFOqEeSKJZkEFL8Tcg"/>
      </ownedOperation>
      <ownedOperation xmi:id="_0QuTZlOqEeSKJZkEFL8Tcg" name="actionPerformed" method="_0TZz9lOqEeSKJZkEFL8Tcg">
        <ownedParameter xmi:id="_0QuTZ1OqEeSKJZkEFL8Tcg" name="e" type="_0NHlwFOqEeSKJZkEFL8Tcg"/>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_0E6E8FOqEeSKJZkEFL8Tcg" clientDependency="_0Q3dUFOqEeSKJZkEFL8Tcg" name="AnalysePanel">
      <ownedComment xmi:id="_0TsvG1OqEeSKJZkEFL8Tcg">
        <body>Table of the moves each player made&#xD;
&#xD;
@author K. Vogel &amp; B. Suhr&#xD;
 *</body>
      </ownedComment>
      <generalization xmi:id="_0Q3dVlOqEeSKJZkEFL8Tcg" general="_0OCLwFOqEeSKJZkEFL8Tcg"/>
      <ownedAttribute xmi:id="_0SXSJlOqEeSKJZkEFL8Tcg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_0SXSJ1OqEeSKJZkEFL8Tcg" value="266407155639L"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_0SXSKFOqEeSKJZkEFL8Tcg" name="analysePanel" visibility="private" isStatic="true" type="_0OCLwFOqEeSKJZkEFL8Tcg" association="_0Uv30FOqEeSKJZkEFL8Tcg"/>
      <ownedAttribute xmi:id="_0SXSKlOqEeSKJZkEFL8Tcg" name="analyse" visibility="private" isStatic="true" type="_0NZSkFOqEeSKJZkEFL8Tcg" association="_0U5BsFOqEeSKJZkEFL8Tcg"/>
      <ownedAttribute xmi:id="_0SXSLVOqEeSKJZkEFL8Tcg" name="analyseLabel" visibility="private" isStatic="true" type="_0OGdMFOqEeSKJZkEFL8Tcg" association="_0U5Bs1OqEeSKJZkEFL8Tcg"/>
      <ownedAttribute xmi:id="_0SXSL1OqEeSKJZkEFL8Tcg" name="player1Name" visibility="protected" isStatic="true" type="_0OGdMFOqEeSKJZkEFL8Tcg" association="_0U5BtlOqEeSKJZkEFL8Tcg"/>
      <ownedAttribute xmi:id="_0SXSMVOqEeSKJZkEFL8Tcg" name="player2Name" visibility="protected" isStatic="true" type="_0OGdMFOqEeSKJZkEFL8Tcg" association="_0U5BuVOqEeSKJZkEFL8Tcg"/>
      <ownedAttribute xmi:id="_0SXSM1OqEeSKJZkEFL8Tcg" name="analyseScroll" visibility="protected" isStatic="true" type="_0NXdYVOqEeSKJZkEFL8Tcg" association="_0U5BvFOqEeSKJZkEFL8Tcg"/>
      <interfaceRealization xmi:id="_0Q3dUFOqEeSKJZkEFL8Tcg" client="_0E6E8FOqEeSKJZkEFL8Tcg" supplier="_0NbHwFOqEeSKJZkEFL8Tcg" contract="_0NbHwFOqEeSKJZkEFL8Tcg"/>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0TZz-FOqEeSKJZkEFL8Tcg" name="AnalysePanel" specification="_0Q3dUVOqEeSKJZkEFL8Tcg">
        <ownedParameter xmi:id="_0TZz-VOqEeSKJZkEFL8Tcg" name="size" type="_0NVoMVOqEeSKJZkEFL8Tcg"/>
        <ownedParameter xmi:id="_0TZz-lOqEeSKJZkEFL8Tcg" type="_0E6E8FOqEeSKJZkEFL8Tcg" direction="return"/>
        <language>java</language>
        <body>analyse = new ArrayList&lt;JLabel>();&#xD;
		analyseLabel = new JLabel();&#xD;
		setPreferredSize(size);&#xD;
		setOpaque(true);&#xD;
		setBackground(new Color(51, 102, 255));&#xD;
&#xD;
		JLabel analyseTitle = new JLabel(&quot;&lt;-- KODEKS -->&quot;, JLabel.CENTER);&#xD;
		add(analyseTitle);&#xD;
		analyseTitle.setPreferredSize(new Dimension(size.width - 5, 38));&#xD;
		analyseTitle.setFont(new Font(&quot;Courier&quot;, analyseTitle.getFont().getStyle(), 20));&#xD;
		analyseTitle.setBorder(BorderFactory.createLineBorder(Color.BLACK));&#xD;
		analyseTitle.setOpaque(true);&#xD;
		analyseTitle.setBackground(new Color(0, 150, 0));&#xD;
&#xD;
		JPanel redblue = new JPanel();&#xD;
		redblue.setLayout(new GridLayout(0, 3, 0, 0));&#xD;
		player1Name = new JLabel(&quot;Player 1&quot;);&#xD;
		JLabel vs = new JLabel(&quot;      vs.&quot;);&#xD;
		player2Name = new JLabel(&quot;Player 2&quot;);&#xD;
&#xD;
		add(redblue);&#xD;
		redblue.add(player1Name);&#xD;
		redblue.add(vs);&#xD;
		redblue.add(player2Name);&#xD;
		redblue.setBackground(new Color(51, 102, 255));&#xD;
		redblue.setPreferredSize(new Dimension(275, 16));&#xD;
&#xD;
		analysePanel = new JPanel();&#xD;
		add(analysePanel);&#xD;
		analysePanel.setLayout(new GridLayout(0, 1, 0, 0));&#xD;
&#xD;
		analyseScroll = new JScrollPane(analysePanel, JScrollPane.VERTICAL_SCROLLBAR_ALWAYS, JScrollPane.HORIZONTAL_SCROLLBAR_NEVER);&#xD;
		add(analyseScroll);&#xD;
		analyseScroll.setPreferredSize(new Dimension(size.width, size.height));&#xD;
&#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0TZz-1OqEeSKJZkEFL8Tcg" name="updateAnalyse" specification="_0NeyIFOqEeSKJZkEFL8Tcg">
        <ownedParameter xmi:id="_0TZz_FOqEeSKJZkEFL8Tcg" name="start" type="_0GPhuFOqEeSKJZkEFL8Tcg"/>
        <ownedParameter xmi:id="_0TZz_VOqEeSKJZkEFL8Tcg" name="end" type="_0GPhuFOqEeSKJZkEFL8Tcg"/>
        <ownedParameter xmi:id="_0TZz_lOqEeSKJZkEFL8Tcg" name="player">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
        <language>java</language>
        <body>unfillAnalyse();&#xD;
		String temp = analyseLabel.getText();&#xD;
		if (player == 1) {&#xD;
			analyseLabel = new JLabel(&quot; &quot;, JLabel.LEFT);&#xD;
			analyseLabel.setOpaque(true);&#xD;
			analyseLabel.setFont(new Font(&quot;Monospaced&quot;, analyseLabel.getFont().getStyle(), analyseLabel.getFont().getSize()));&#xD;
			analyseLabel.setForeground(Color.BLACK);&#xD;
			if (analyse.size() % 2 == 0)&#xD;
				analyseLabel.setBackground(Color.WHITE);&#xD;
			else&#xD;
				analyseLabel.setBackground(Color.LIGHT_GRAY);&#xD;
			analyse.add(analyseLabel);&#xD;
			if (analyse.size() > 99)&#xD;
				analyseLabel.setText(analyse.size() + &quot;.&quot; + start + &quot; &quot; + end + &quot; :          &quot;);&#xD;
			else if (analyse.size() > 9)&#xD;
				analyseLabel.setText(analyse.size() + &quot;. &quot; + start + &quot; &quot; + end + &quot;  :         &quot;);&#xD;
			else&#xD;
				analyseLabel.setText(analyse.size() + &quot;.  &quot; + start + &quot; &quot; + end + &quot;  :         &quot;);&#xD;
		} else {&#xD;
			if (analyse.size() > 99)&#xD;
				analyseLabel.setText(temp.trim() + &quot;  &quot; + start + &quot; &quot; + end + &quot;  &quot;);&#xD;
			else if (analyse.size() > 9)&#xD;
				analyseLabel.setText(temp.trim() + &quot;  &quot; + start + &quot; &quot; + end + &quot;  &quot;);&#xD;
			else&#xD;
				analyseLabel.setText(temp.trim() + &quot;  &quot; + start + &quot; &quot; + end + &quot;  &quot;);&#xD;
		}&#xD;
		fillAnalyse();&#xD;
		redisplayAnalyse();&#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0TZz_1OqEeSKJZkEFL8Tcg" name="redisplayAnalyse" specification="_0FDO4FOqEeSKJZkEFL8Tcg">
        <language>java</language>
        <body>analysePanel.removeAll();&#xD;
		for (JLabel l : analyse)&#xD;
			analysePanel.add(l);&#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0TZ0AFOqEeSKJZkEFL8Tcg" name="fillAnalyse" specification="_0FDO4VOqEeSKJZkEFL8Tcg">
        <language>java</language>
        <body>while (analyse.size() &lt; 60) {&#xD;
			JLabel fillLabel = new JLabel(&quot; &quot;, JLabel.LEFT);&#xD;
			analyse.add(fillLabel);&#xD;
			if (analyse.size() > 9)&#xD;
				fillLabel.setText(analyse.size() + &quot;.                  &quot;);&#xD;
			else&#xD;
				fillLabel.setText(analyse.size() + &quot;.                   &quot;);&#xD;
			fillLabel.setOpaque(true);&#xD;
			fillLabel.setFont(new Font(&quot;Monospaced&quot;, fillLabel.getFont().getStyle(), fillLabel.getFont().getSize()));&#xD;
			fillLabel.setForeground(Color.BLACK);&#xD;
			if ((analyse.size() - 1) % 2 == 0) {&#xD;
				fillLabel.setBackground(Color.WHITE);&#xD;
			} else {&#xD;
				fillLabel.setBackground(Color.LIGHT_GRAY);&#xD;
			}&#xD;
		}&#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0TZ0AVOqEeSKJZkEFL8Tcg" name="unfillAnalyse" specification="_0FDO4lOqEeSKJZkEFL8Tcg">
        <language>java</language>
        <body>for (int x = 0; x &lt; analyse.size(); x++) {&#xD;
			String temp = analyse.get(x).getText().substring(analyse.get(x).getText().indexOf(&quot;.&quot;) + 1).trim();&#xD;
			if (temp.length() == 0) {&#xD;
				analyse.remove(x);&#xD;
				x--;&#xD;
			}&#xD;
		}&#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0TZ0AlOqEeSKJZkEFL8Tcg" name="clearAnalyse" specification="_0FDO41OqEeSKJZkEFL8Tcg">
        <language>java</language>
        <body>analyse = new ArrayList&lt;JLabel>();&#xD;
		fillAnalyse();&#xD;
		redisplayAnalyse();&#xD;
	</body>
      </ownedBehavior>
      <ownedOperation xmi:id="_0FDO4FOqEeSKJZkEFL8Tcg" name="redisplayAnalyse" isStatic="true" method="_0TZz_1OqEeSKJZkEFL8Tcg">
        <ownedComment xmi:id="_0TsvHlOqEeSKJZkEFL8Tcg">
          <body>Method to redisplay the AnalysePanel&#xD;
	 *</body>
        </ownedComment>
      </ownedOperation>
      <ownedOperation xmi:id="_0FDO4VOqEeSKJZkEFL8Tcg" name="fillAnalyse" isStatic="true" method="_0TZ0AFOqEeSKJZkEFL8Tcg">
        <ownedComment xmi:id="_0TsvH1OqEeSKJZkEFL8Tcg">
          <body>Method to fill the AnalysePanel&#xD;
	 *</body>
        </ownedComment>
      </ownedOperation>
      <ownedOperation xmi:id="_0FDO4lOqEeSKJZkEFL8Tcg" name="unfillAnalyse" isStatic="true" method="_0TZ0AVOqEeSKJZkEFL8Tcg">
        <ownedComment xmi:id="_0TsvIFOqEeSKJZkEFL8Tcg">
          <body>Method to empty the AnalysePanel&#xD;
	 *</body>
        </ownedComment>
      </ownedOperation>
      <ownedOperation xmi:id="_0FDO41OqEeSKJZkEFL8Tcg" name="clearAnalyse" method="_0TZ0AlOqEeSKJZkEFL8Tcg">
        <ownedComment xmi:id="_0T2f4FOqEeSKJZkEFL8Tcg">
          <body>Method to clear the AnalysePanel&#xD;
	 *</body>
        </ownedComment>
      </ownedOperation>
      <ownedOperation xmi:id="_0NeyIFOqEeSKJZkEFL8Tcg" name="updateAnalyse" method="_0TZz-1OqEeSKJZkEFL8Tcg">
        <ownedComment xmi:id="_0TsvHVOqEeSKJZkEFL8Tcg">
          <body>Method to update the analysis panel after each turn.&#xD;
	 * &#xD;
	 * @param start&#xD;
	 *            - Location&#xD;
	 * @param end&#xD;
	 *            - Location&#xD;
	 * @param player&#xD;
	 *            - int</body>
        </ownedComment>
        <ownedParameter xmi:id="_0NeyIVOqEeSKJZkEFL8Tcg" name="start" type="_0GPhuFOqEeSKJZkEFL8Tcg"/>
        <ownedParameter xmi:id="_0NfZMFOqEeSKJZkEFL8Tcg" name="end" type="_0GPhuFOqEeSKJZkEFL8Tcg"/>
        <ownedParameter xmi:id="_0NfZMVOqEeSKJZkEFL8Tcg" name="player">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_0Q3dUVOqEeSKJZkEFL8Tcg" name="AnalysePanel" method="_0TZz-FOqEeSKJZkEFL8Tcg">
        <eAnnotations xmi:id="_0Q3dU1OqEeSKJZkEFL8Tcg" source="http://www.eclipse.org/uml2/2.0.0/UML">
          <details xmi:id="_0Q3dVFOqEeSKJZkEFL8Tcg" key="create"/>
        </eAnnotations>
        <ownedComment xmi:id="_0TsvHFOqEeSKJZkEFL8Tcg">
          <body>Constructor of an analyse panel. Here the players can see which moves they made during the game&#xD;
	 * &#xD;
	 * @param size&#xD;
	 *            - Dimension&#xD;
	 *</body>
        </ownedComment>
        <ownedParameter xmi:id="_0Q3dUlOqEeSKJZkEFL8Tcg" name="size" type="_0NVoMVOqEeSKJZkEFL8Tcg"/>
        <ownedParameter xmi:id="_0Q3dVVOqEeSKJZkEFL8Tcg" type="_0E6E8FOqEeSKJZkEFL8Tcg" direction="return"/>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_0FDO5FOqEeSKJZkEFL8Tcg" clientDependency="_0Q3dV1OqEeSKJZkEFL8Tcg _0Q3dWFOqEeSKJZkEFL8Tcg _0Q3dWVOqEeSKJZkEFL8Tcg" name="GUI">
      <ownedComment xmi:id="_0T2f4VOqEeSKJZkEFL8Tcg">
        <body>The mainframe of the GUI contains a menu bar, a tool bar, a panel on which the board is displayed, etc.&#xD;
&#xD;
@author K. Vogel &amp; B. Suhr&#xD;
 *</body>
      </ownedComment>
      <generalization xmi:id="_0RBOZlOqEeSKJZkEFL8Tcg" general="_0N96UFOqEeSKJZkEFL8Tcg"/>
      <ownedAttribute xmi:id="_0SXSNVOqEeSKJZkEFL8Tcg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_0SXSNlOqEeSKJZkEFL8Tcg" value="42"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_0SXSN1OqEeSKJZkEFL8Tcg" name="kodeksGUI" isStatic="true" type="_0N96UFOqEeSKJZkEFL8Tcg" association="_0U5Bv1OqEeSKJZkEFL8Tcg"/>
      <ownedAttribute xmi:id="_0SXSOVOqEeSKJZkEFL8Tcg" name="toolBar" visibility="package" isStatic="true" type="_0Q3dWlOqEeSKJZkEFL8Tcg" association="_0U5BwlOqEeSKJZkEFL8Tcg"/>
      <ownedAttribute xmi:id="_0SXSO1OqEeSKJZkEFL8Tcg" name="gameOver" visibility="private" isStatic="true" type="_0FWw4FOqEeSKJZkEFL8Tcg" association="_0U5BxVOqEeSKJZkEFL8Tcg"/>
      <ownedAttribute xmi:id="_0SXSPVOqEeSKJZkEFL8Tcg" name="quitDlg" visibility="private" type="_0GZSt1OqEeSKJZkEFL8Tcg" association="_0U5ByFOqEeSKJZkEFL8Tcg"/>
      <ownedAttribute xmi:id="_0SgcEVOqEeSKJZkEFL8Tcg" name="board" visibility="package" isStatic="true" type="_0Ff61VOqEeSKJZkEFL8Tcg" association="_0U5By1OqEeSKJZkEFL8Tcg"/>
      <ownedAttribute xmi:id="_0SgcE1OqEeSKJZkEFL8Tcg" name="statusPanel" visibility="package" isStatic="true" type="_0Fy1wFOqEeSKJZkEFL8Tcg" association="_0U5BzlOqEeSKJZkEFL8Tcg"/>
      <ownedAttribute xmi:id="_0SgcFVOqEeSKJZkEFL8Tcg" name="analysePanel" visibility="package" isStatic="true" type="_0E6E8FOqEeSKJZkEFL8Tcg" association="_0U5B0VOqEeSKJZkEFL8Tcg"/>
      <interfaceRealization xmi:id="_0Q3dV1OqEeSKJZkEFL8Tcg" client="_0FDO5FOqEeSKJZkEFL8Tcg" supplier="_0NIz4VOqEeSKJZkEFL8Tcg" contract="_0NIz4VOqEeSKJZkEFL8Tcg"/>
      <interfaceRealization xmi:id="_0Q3dWFOqEeSKJZkEFL8Tcg" client="_0FDO5FOqEeSKJZkEFL8Tcg" supplier="_0NpxQFOqEeSKJZkEFL8Tcg" contract="_0NpxQFOqEeSKJZkEFL8Tcg"/>
      <interfaceRealization xmi:id="_0Q3dWVOqEeSKJZkEFL8Tcg" client="_0FDO5FOqEeSKJZkEFL8Tcg" supplier="_0NbHwFOqEeSKJZkEFL8Tcg" contract="_0NbHwFOqEeSKJZkEFL8Tcg"/>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0TZ0A1OqEeSKJZkEFL8Tcg" name="GUI" specification="_0NtboFOqEeSKJZkEFL8Tcg">
        <ownedParameter xmi:id="_0TZ0BFOqEeSKJZkEFL8Tcg" name="boardState" type="_0GsNqVOqEeSKJZkEFL8Tcg"/>
        <ownedParameter xmi:id="_0TZ0BVOqEeSKJZkEFL8Tcg" type="_0FDO5FOqEeSKJZkEFL8Tcg" direction="return"/>
        <language>java</language>
        <body>super(&quot;KodeKs&quot;);&#xD;
		Dimension screen = Toolkit.getDefaultToolkit().getScreenSize();&#xD;
		Dimension boardSize = new Dimension(824, 768);&#xD;
		Dimension toolBarSize = new Dimension(1024, 24);&#xD;
		Dimension analysePanelSize = new Dimension(275, 760);&#xD;
		Dimension statusPanelSize = new Dimension(755, 110);&#xD;
&#xD;
		// &quot;this&quot; Main Frame***********************************************************&#xD;
		setLayout(new BorderLayout());&#xD;
		setResizable(false);&#xD;
		// ****************************************************************************&#xD;
&#xD;
		/**&#xD;
		 * Initialize the contents of the frame.&#xD;
		 * &#xD;
		 */&#xD;
&#xD;
		// Menubar***************************************************************************&#xD;
		KodeKsMenuBar menuBar = new KodeKsMenuBar(this);&#xD;
		setJMenuBar(menuBar);&#xD;
		// **********************************************************************************&#xD;
&#xD;
		// ToolBar****************************************************************&#xD;
		toolBar = new KodeKsToolBar(this, toolBarSize);&#xD;
		add(toolBar, BorderLayout.NORTH);&#xD;
		// ****************************************************************************&#xD;
&#xD;
		// Game Board******************************************************************&#xD;
		board = new KodeKsBoard(boardState, this, boardSize);&#xD;
		add(board, BorderLayout.CENTER);&#xD;
		// ****************************************************************************&#xD;
&#xD;
		// StatusPanel******************************************************************&#xD;
		statusPanel = new StatusPanel(boardState, this, statusPanelSize);&#xD;
		board.add(statusPanel, BorderLayout.SOUTH);&#xD;
		// ****************************************************************************&#xD;
&#xD;
		// AnalysePanel******************************************************************&#xD;
		analysePanel = new AnalysePanel(analysePanelSize);&#xD;
		add(analysePanel, BorderLayout.EAST);&#xD;
		// ****************************************************************************&#xD;
&#xD;
		setLocation(screen.width / 2 - 512, screen.height / 2 - 512);&#xD;
		repaint();&#xD;
		addMouseListener(this);&#xD;
		setVisible(true);&#xD;
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);&#xD;
		try {&#xD;
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());&#xD;
		} catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException e) {&#xD;
&#xD;
			e.printStackTrace();&#xD;
		}&#xD;
&#xD;
		pack();&#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0TZ0BlOqEeSKJZkEFL8Tcg" name="getKodeKsBoard" specification="_0FM_4FOqEeSKJZkEFL8Tcg">
        <ownedParameter xmi:id="_0TZ0B1OqEeSKJZkEFL8Tcg" type="_0Ff61VOqEeSKJZkEFL8Tcg" direction="return"/>
        <language>java</language>
        <body>return board;&#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0TZ0CFOqEeSKJZkEFL8Tcg" name="getStatusPanel" specification="_0FM_4VOqEeSKJZkEFL8Tcg">
        <ownedParameter xmi:id="_0TZ0CVOqEeSKJZkEFL8Tcg" type="_0Fy1wFOqEeSKJZkEFL8Tcg" direction="return"/>
        <language>java</language>
        <body>return statusPanel;&#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0TZ0ClOqEeSKJZkEFL8Tcg" name="getAnalysePanel" specification="_0FM_4lOqEeSKJZkEFL8Tcg">
        <ownedParameter xmi:id="_0TZ0C1OqEeSKJZkEFL8Tcg" type="_0E6E8FOqEeSKJZkEFL8Tcg" direction="return"/>
        <language>java</language>
        <body>return analysePanel;&#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0TZ0DFOqEeSKJZkEFL8Tcg" name="processLocation" specification="_0Nv34VOqEeSKJZkEFL8Tcg">
        <ownedParameter xmi:id="_0TZ0DVOqEeSKJZkEFL8Tcg" name="loc" type="_0GPhuFOqEeSKJZkEFL8Tcg"/>
        <ownedParameter xmi:id="_0TZ0DlOqEeSKJZkEFL8Tcg" type="_0GPhuFOqEeSKJZkEFL8Tcg" direction="return"/>
        <language>java</language>
        <body>return loc;&#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0TZ0D1OqEeSKJZkEFL8Tcg" name="quitDlg" specification="_0FM_41OqEeSKJZkEFL8Tcg">
        <language>java</language>
        <body>quitDlg = new QuitDialog(this);&#xD;
		setEnabled(false);&#xD;
		quitDlg.setVisible(true);&#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0TZ0EFOqEeSKJZkEFL8Tcg" name="gameOver" specification="_0FM_5FOqEeSKJZkEFL8Tcg">
        <ownedParameter xmi:id="_0TZ0EVOqEeSKJZkEFL8Tcg" name="outcome">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
        <language>java</language>
        <body>if (outcome == 1)&#xD;
			gameOver = new GameOverPopup(RunKodeKs.mainGUI, &quot;Red Win&quot;);&#xD;
		else if (outcome == 2)&#xD;
			gameOver = new GameOverPopup(RunKodeKs.mainGUI, &quot;Blue Win&quot;);&#xD;
		board.gameInProgress = false;&#xD;
		gameOver.setVisible(true);&#xD;
	</body>
      </ownedBehavior>
      <ownedOperation xmi:id="_0FM_4FOqEeSKJZkEFL8Tcg" name="getKodeKsBoard" method="_0TZ0BlOqEeSKJZkEFL8Tcg">
        <ownedParameter xmi:id="_0NvQ0FOqEeSKJZkEFL8Tcg" type="_0Ff61VOqEeSKJZkEFL8Tcg" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_0FM_4VOqEeSKJZkEFL8Tcg" name="getStatusPanel" method="_0TZ0CFOqEeSKJZkEFL8Tcg">
        <ownedParameter xmi:id="_0NvQ0VOqEeSKJZkEFL8Tcg" type="_0Fy1wFOqEeSKJZkEFL8Tcg" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_0FM_4lOqEeSKJZkEFL8Tcg" name="getAnalysePanel" method="_0TZ0ClOqEeSKJZkEFL8Tcg">
        <ownedParameter xmi:id="_0Nv34FOqEeSKJZkEFL8Tcg" type="_0E6E8FOqEeSKJZkEFL8Tcg" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_0FM_41OqEeSKJZkEFL8Tcg" name="quitDlg" method="_0TZ0D1OqEeSKJZkEFL8Tcg"/>
      <ownedOperation xmi:id="_0FM_5FOqEeSKJZkEFL8Tcg" name="gameOver" isStatic="true" method="_0TZ0EFOqEeSKJZkEFL8Tcg">
        <ownedComment xmi:id="_0T2f5FOqEeSKJZkEFL8Tcg">
          <body>&#xD;
	 * @param outcome&#xD;
	 *            - int</body>
        </ownedComment>
        <ownedParameter xmi:id="_0FM_5VOqEeSKJZkEFL8Tcg" name="outcome">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_0NtboFOqEeSKJZkEFL8Tcg" name="GUI" method="_0TZ0A1OqEeSKJZkEFL8Tcg">
        <eAnnotations xmi:id="_0NtbolOqEeSKJZkEFL8Tcg" source="http://www.eclipse.org/uml2/2.0.0/UML">
          <details xmi:id="_0NuCsFOqEeSKJZkEFL8Tcg" key="create"/>
        </eAnnotations>
        <ownedComment xmi:id="_0T2f4lOqEeSKJZkEFL8Tcg">
          <body>Construct a GUI to play KodeKs. It gets its data by the Board_At_Start of KodeKsData. The mainframe of the GUI contains a menu bar, a tool bar, a panel&#xD;
	 * on which the board is displayed, an AnaLysePanel to show the moves made during the game and a StatusPanel which displays messages (e.g. who's turn it&#xD;
	 * is).&#xD;
	 * &#xD;
	 * @param boardState&#xD;
	 *            - KodeKsData</body>
        </ownedComment>
        <ownedParameter xmi:id="_0NtboVOqEeSKJZkEFL8Tcg" name="boardState" type="_0GsNqVOqEeSKJZkEFL8Tcg"/>
        <ownedParameter xmi:id="_0NuCsVOqEeSKJZkEFL8Tcg" type="_0FDO5FOqEeSKJZkEFL8Tcg" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_0Nv34VOqEeSKJZkEFL8Tcg" name="processLocation" method="_0TZ0DFOqEeSKJZkEFL8Tcg">
        <ownedComment xmi:id="_0T2f41OqEeSKJZkEFL8Tcg">
          <body>&#xD;
	 * @param loc&#xD;
	 *            - Location&#xD;
	 * @return</body>
        </ownedComment>
        <ownedParameter xmi:id="_0Nwe8FOqEeSKJZkEFL8Tcg" name="loc" type="_0GPhuFOqEeSKJZkEFL8Tcg"/>
        <ownedParameter xmi:id="_0Nwe8VOqEeSKJZkEFL8Tcg" type="_0GPhuFOqEeSKJZkEFL8Tcg" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_0Q3dXFOqEeSKJZkEFL8Tcg" name="mouseClicked">
        <ownedParameter xmi:id="_0Q3dXVOqEeSKJZkEFL8Tcg" name="arg0" type="_0Nn8EFOqEeSKJZkEFL8Tcg"/>
      </ownedOperation>
      <ownedOperation xmi:id="_0Q3dYVOqEeSKJZkEFL8Tcg" name="mouseEntered">
        <ownedParameter xmi:id="_0Q3dYlOqEeSKJZkEFL8Tcg" name="arg0" type="_0Nn8EFOqEeSKJZkEFL8Tcg"/>
      </ownedOperation>
      <ownedOperation xmi:id="_0RBOUlOqEeSKJZkEFL8Tcg" name="mouseExited">
        <ownedParameter xmi:id="_0RBOU1OqEeSKJZkEFL8Tcg" name="arg0" type="_0Nn8EFOqEeSKJZkEFL8Tcg"/>
      </ownedOperation>
      <ownedOperation xmi:id="_0RBOV1OqEeSKJZkEFL8Tcg" name="mousePressed">
        <ownedParameter xmi:id="_0RBOWFOqEeSKJZkEFL8Tcg" name="arg0" type="_0Nn8EFOqEeSKJZkEFL8Tcg"/>
      </ownedOperation>
      <ownedOperation xmi:id="_0RBOXFOqEeSKJZkEFL8Tcg" name="mouseReleased">
        <ownedParameter xmi:id="_0RBOXVOqEeSKJZkEFL8Tcg" name="arg0" type="_0Nn8EFOqEeSKJZkEFL8Tcg"/>
      </ownedOperation>
      <ownedOperation xmi:id="_0RBOYVOqEeSKJZkEFL8Tcg" name="actionPerformed">
        <ownedParameter xmi:id="_0RBOYlOqEeSKJZkEFL8Tcg" name="arg0" type="_0NHlwFOqEeSKJZkEFL8Tcg"/>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_0FWw4FOqEeSKJZkEFL8Tcg" name="GameOverPopup">
      <ownedComment xmi:id="_0T2f5VOqEeSKJZkEFL8Tcg">
        <body>Popup shows the name of the winner and allows to start a new game&#xD;
&#xD;
@author K. Vogel &amp; B. Suhr&#xD;
 *</body>
      </ownedComment>
      <generalization xmi:id="_0N7eEFOqEeSKJZkEFL8Tcg" general="_0GZStVOqEeSKJZkEFL8Tcg"/>
      <ownedAttribute xmi:id="_0SgcF1OqEeSKJZkEFL8Tcg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_0SgcGFOqEeSKJZkEFL8Tcg" value="1400666790706351389L"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_0SgcGVOqEeSKJZkEFL8Tcg" name="text" visibility="private" type="_0OGdMFOqEeSKJZkEFL8Tcg" association="_0VCysVOqEeSKJZkEFL8Tcg"/>
      <ownedAttribute xmi:id="_0SgcG1OqEeSKJZkEFL8Tcg" name="newGame" visibility="private" type="_0OFPEFOqEeSKJZkEFL8Tcg" association="_0VCytFOqEeSKJZkEFL8Tcg"/>
      <ownedAttribute xmi:id="_0T2f5lOqEeSKJZkEFL8Tcg" name="exit" visibility="private" type="_0OFPEFOqEeSKJZkEFL8Tcg" association="_0Vool1OqEeSKJZkEFL8Tcg"/>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0TZ0ElOqEeSKJZkEFL8Tcg" name="GameOverPopup" specification="_0N5o4FOqEeSKJZkEFL8Tcg">
        <ownedParameter xmi:id="_0TZ0E1OqEeSKJZkEFL8Tcg" name="parent" type="_0FDO5FOqEeSKJZkEFL8Tcg"/>
        <ownedParameter xmi:id="_0TZ0FFOqEeSKJZkEFL8Tcg" name="title">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <ownedParameter xmi:id="_0TZ0FVOqEeSKJZkEFL8Tcg" type="_0FWw4FOqEeSKJZkEFL8Tcg" direction="return"/>
        <language>java</language>
        <body>super(parent, title);&#xD;
&#xD;
		text = new JLabel(&quot;&quot; + title + &quot;!&quot;);&#xD;
		newGame = new JButton(&quot;New Game&quot;);&#xD;
		exit = new JButton(&quot;Exit&quot;);&#xD;
		newGame.addActionListener(new ActionListener() {&#xD;
			public void actionPerformed(ActionEvent e) {&#xD;
				new NewGameDialog();&#xD;
				dispose();&#xD;
			}&#xD;
		});&#xD;
		exit.addActionListener(new ActionListener() {&#xD;
			public void actionPerformed(ActionEvent e) {&#xD;
				RunKodeKs.mainGUI.quitDlg();&#xD;
			}&#xD;
		});&#xD;
		newGame.addActionListener(parent);&#xD;
		exit.addActionListener(parent);&#xD;
&#xD;
		JPanel top = new JPanel();&#xD;
		top.setBackground(new Color(0, 0, 0, 0));&#xD;
		top.add(text);&#xD;
		JPanel bottom = new JPanel();&#xD;
		bottom.setBackground(new Color(0, 0, 0, 0));&#xD;
		bottom.add(newGame);&#xD;
		bottom.add(exit);&#xD;
		add(top);&#xD;
		add(bottom);&#xD;
&#xD;
		pack();&#xD;
		resetLocation();&#xD;
	</body>
      </ownedBehavior>
      <ownedOperation xmi:id="_0N5o4FOqEeSKJZkEFL8Tcg" name="GameOverPopup" method="_0TZ0ElOqEeSKJZkEFL8Tcg">
        <eAnnotations xmi:id="_0N6P8lOqEeSKJZkEFL8Tcg" source="http://www.eclipse.org/uml2/2.0.0/UML">
          <details xmi:id="_0N63AFOqEeSKJZkEFL8Tcg" key="create"/>
        </eAnnotations>
        <ownedComment xmi:id="_0T2f6VOqEeSKJZkEFL8Tcg">
          <body>Constructer of a &quot;game over&quot; popup. When this popup is visible the players can decide if they want to start a new game of KodeKs or if they want to quit.&#xD;
	 * &#xD;
	 * @param parent&#xD;
	 *            - GUI&#xD;
	 * @param title&#xD;
	 *            - String</body>
        </ownedComment>
        <ownedParameter xmi:id="_0N6P8FOqEeSKJZkEFL8Tcg" name="parent" type="_0FDO5FOqEeSKJZkEFL8Tcg"/>
        <ownedParameter xmi:id="_0N6P8VOqEeSKJZkEFL8Tcg" name="title">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <ownedParameter xmi:id="_0N63AVOqEeSKJZkEFL8Tcg" type="_0FWw4FOqEeSKJZkEFL8Tcg" direction="return"/>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_0Ff60FOqEeSKJZkEFL8Tcg" clientDependency="_0RBOZ1OqEeSKJZkEFL8Tcg" name="HowToPlayFrame">
      <ownedComment xmi:id="_0T2f6lOqEeSKJZkEFL8Tcg">
        <body>Frame contains informations about the rules of the game&#xD;
&#xD;
@author K. Vogel &amp; B. Suhr&#xD;
 *</body>
      </ownedComment>
      <generalization xmi:id="_0RK_UFOqEeSKJZkEFL8Tcg" general="_0N96UFOqEeSKJZkEFL8Tcg"/>
      <ownedAttribute xmi:id="_0SgcHlOqEeSKJZkEFL8Tcg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_0SgcH1OqEeSKJZkEFL8Tcg" value="1L"/>
      </ownedAttribute>
      <interfaceRealization xmi:id="_0RBOZ1OqEeSKJZkEFL8Tcg" client="_0Ff60FOqEeSKJZkEFL8Tcg" supplier="_0NIz4VOqEeSKJZkEFL8Tcg" contract="_0NIz4VOqEeSKJZkEFL8Tcg"/>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0TZ0FlOqEeSKJZkEFL8Tcg" name="HowToPlayFrame" specification="_0Ff60VOqEeSKJZkEFL8Tcg">
        <ownedParameter xmi:id="_0TZ0F1OqEeSKJZkEFL8Tcg" type="_0Ff60FOqEeSKJZkEFL8Tcg" direction="return"/>
        <language>java</language>
        <body>final JFrame HowToPlay = new JFrame();&#xD;
		HowToPlay.setDefaultCloseOperation(HIDE_ON_CLOSE);&#xD;
		HowToPlay.setBounds(200, 200, 600, 600);&#xD;
		HowToPlay.setPreferredSize(new Dimension(600, 600));&#xD;
		JPanel contentPane = new JPanel();&#xD;
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));&#xD;
		contentPane.setLayout(new BorderLayout(0, 0));&#xD;
		HowToPlay.setContentPane(contentPane);&#xD;
&#xD;
		JLabel lblHowToPlay = new JLabel(&quot;How to play Kodeks&quot;);&#xD;
		lblHowToPlay.setFont(new Font(&quot;Dialog&quot;, Font.BOLD, 18));&#xD;
		lblHowToPlay.setHorizontalAlignment(SwingConstants.CENTER);&#xD;
		contentPane.add(lblHowToPlay, BorderLayout.NORTH);&#xD;
&#xD;
		JScrollPane textPane = new JScrollPane();&#xD;
		contentPane.add(textPane, BorderLayout.CENTER);&#xD;
&#xD;
		final JTextPane informationsKodeks = new JTextPane();&#xD;
		textPane.setViewportView(informationsKodeks);&#xD;
		informationsKodeks.setEditable(false);&#xD;
		informationsKodeks.setFont(new Font(&quot;Dialog&quot;, Font.PLAIN, 14));&#xD;
		informationsKodeks&#xD;
				.setText(&quot;Welcom to KodeKs!\n&quot;&#xD;
						+ &quot;On the right you can press on the buttons to learn how to move Stones, to get Stones of the opponent player and how to win a game of KodeKs...&quot;);&#xD;
&#xD;
		JPanel buttonPanel = new JPanel();&#xD;
		contentPane.add(buttonPanel, BorderLayout.WEST);&#xD;
		GridBagLayout gbl_panel_1 = new GridBagLayout();&#xD;
		gbl_panel_1.columnWidths = new int[] { 100, 0 };&#xD;
		gbl_panel_1.rowHeights = new int[] { 25, 25, 0, 0, 0, 0, 0, 0, 0 };&#xD;
		gbl_panel_1.columnWeights = new double[] { 0.0, Double.MIN_VALUE };&#xD;
		gbl_panel_1.rowWeights = new double[] { 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, Double.MIN_VALUE };&#xD;
		buttonPanel.setLayout(gbl_panel_1);&#xD;
&#xD;
		/*&#xD;
		 * Construction of the different buttons to get informations how to play KodeKs&#xD;
		 */&#xD;
&#xD;
		// Home-Button&#xD;
		JButton home_Button = new JButton(&quot;Home&quot;);&#xD;
		home_Button.addActionListener(new ActionListener() {&#xD;
			public void actionPerformed(ActionEvent e) {&#xD;
				informationsKodeks&#xD;
						.setText(&quot;Welcom to KodeKs! \n&quot;&#xD;
								+ &quot;On the right you can press on the buttons to learn how to move Stones, to get Stones of the opponent player and how to win agame of KodeKs...&quot;);&#xD;
			}&#xD;
		});&#xD;
		GridBagConstraints gbc_home_Button = new GridBagConstraints();&#xD;
		gbc_home_Button.fill = GridBagConstraints.HORIZONTAL;&#xD;
		gbc_home_Button.insets = new Insets(0, 0, 5, 0);&#xD;
		gbc_home_Button.gridx = 0;&#xD;
		gbc_home_Button.gridy = 1;&#xD;
		buttonPanel.add(home_Button, gbc_home_Button);&#xD;
&#xD;
		// How To Move???&#xD;
		JButton howToMove_Button = new JButton(&quot;Move Stones&quot;);&#xD;
		howToMove_Button.addActionListener(new ActionListener() {&#xD;
			public void actionPerformed(ActionEvent e) {&#xD;
				informationsKodeks&#xD;
						.setText(&quot;Movement Rules \n\n&quot;&#xD;
								+ &quot;Red and Blue move one of their stones in alternate order. Each player has to move a stone in their turn - even if it's harmful.\n&quot;&#xD;
								+ &quot;The range of a stone is determined by the amount of dots beneath the stone itself. If there are 1-3 dots, the stone can only move the amount of fields according to the amount of buttons. A stone with 4 dots have a variable range between 1 and 4.\n&quot;&#xD;
								+ &quot;A player may move a stone into any direction: horizontally, vertically or diagonally onto a free field. It's allowed to leap over existing buttons.\n\n&quot;&#xD;
								+ &quot;Forbidden combination:\nIt's not allowed to have a stone next to 2 other stones.\n\n&quot;&#xD;
								+ &quot;If a player ignores this rule, the other player is allowed to take one of the 3 stones from the board.\n\n&quot;&#xD;
								+ &quot;The goal of a turn is to build up threat on your opponent. But also try to avoid the loss of your own stones.\n&quot;);&#xD;
			}&#xD;
		});&#xD;
		GridBagConstraints gbc_howToMove_Button = new GridBagConstraints();&#xD;
		gbc_howToMove_Button.fill = GridBagConstraints.HORIZONTAL;&#xD;
		gbc_howToMove_Button.insets = new Insets(0, 0, 5, 0);&#xD;
		gbc_howToMove_Button.gridx = 0;&#xD;
		gbc_howToMove_Button.gridy = 2;&#xD;
		buttonPanel.add(howToMove_Button, gbc_howToMove_Button);&#xD;
&#xD;
		// HowTo Take???&#xD;
		JButton howToTake_Button = new JButton(&quot;Take Stones&quot;);&#xD;
		howToTake_Button.addActionListener(new ActionListener() {&#xD;
			public void actionPerformed(ActionEvent e) {&#xD;
				informationsKodeks&#xD;
						.setText(&quot;Strike Stones:\n&quot;&#xD;
								+ &quot;Only two stones directly next to each other (horizontally, vertically or diagonally) represent a binding and are able to destroy a enemy stone.\n&quot;&#xD;
								+ &quot;The range of such a binding is determined by the amount of dots beneath those two stones. Enemy stones within this range are threatened.\n&quot;&#xD;
								+ &quot;Only the nearest opponent stone within the 2 directions may be striked - the ones covered by stones infront of them are 'save' and can't be striked.\n\n&quot;&#xD;
								+ &quot;Attack: \n&quot;&#xD;
								+ &quot;1. Active threat\n&quot;&#xD;
								+ &quot;2. Reaction\n&quot;&#xD;
								+ &quot;3. Strike!\n\n&quot;&#xD;
								+ &quot;A threat occurs if a player builds up a binding, which range threatens an opponent stones.\n&quot;&#xD;
								+ &quot;As a reaction the opponent has the possibility to save one of his threatened stones.\n&quot;&#xD;
								+ &quot;The threat could also occur passive, if a player moves one of his stones into the threat range of an enemies binding. The enemy may strike the stoned moved in his next turn - without a waiting penalty.\n&quot;&#xD;
								+ &quot;The time to strike enemy stones is right before the turn of the attacker (before he moves his stone!). The player may remove every enemy stone which is threatened by one or more bindings.\n&quot;&#xD;
								+ &quot;A player strikes without moving his own stones, but with the power of bindings and their range.\n\n&quot;&#xD;
								+ &quot;After striking the player starts his turn by moving one of his stones. This player can't strike until the next round.&quot;);&#xD;
			}&#xD;
		});&#xD;
		GridBagConstraints gbc_howToTake_Button = new GridBagConstraints();&#xD;
		gbc_howToTake_Button.fill = GridBagConstraints.HORIZONTAL;&#xD;
		gbc_howToTake_Button.insets = new Insets(0, 0, 5, 0);&#xD;
		gbc_howToTake_Button.gridx = 0;&#xD;
		gbc_howToTake_Button.gridy = 3;&#xD;
		buttonPanel.add(howToTake_Button, gbc_howToTake_Button);&#xD;
&#xD;
		// How To Win???&#xD;
		JButton howToWin_Button = new JButton(&quot;How to win&quot;);&#xD;
		howToWin_Button.addActionListener(new ActionListener() {&#xD;
			public void actionPerformed(ActionEvent e) {&#xD;
				informationsKodeks.setText(&quot;The goal of the game is to collect 10 stones from your opponent.\n&quot;);&#xD;
			}&#xD;
		});&#xD;
		GridBagConstraints gbc_howToWin_Button = new GridBagConstraints();&#xD;
		gbc_howToWin_Button.fill = GridBagConstraints.HORIZONTAL;&#xD;
		gbc_howToWin_Button.insets = new Insets(0, 0, 5, 0);&#xD;
		gbc_howToWin_Button.gridx = 0;&#xD;
		gbc_howToWin_Button.gridy = 4;&#xD;
		buttonPanel.add(howToWin_Button, gbc_howToWin_Button);&#xD;
&#xD;
		JButton btnClose = new JButton(&quot;close&quot;);&#xD;
		contentPane.add(btnClose, BorderLayout.SOUTH);&#xD;
		btnClose.addActionListener(new ActionListener() {&#xD;
			public void actionPerformed(ActionEvent e) {&#xD;
				HowToPlay.dispose();&#xD;
			}&#xD;
		});&#xD;
&#xD;
		HowToPlay.pack();&#xD;
		HowToPlay.setVisible(true);&#xD;
	</body>
      </ownedBehavior>
      <ownedOperation xmi:id="_0Ff60VOqEeSKJZkEFL8Tcg" name="HowToPlayFrame" method="_0TZ0FlOqEeSKJZkEFL8Tcg">
        <eAnnotations xmi:id="_0Ff60lOqEeSKJZkEFL8Tcg" source="http://www.eclipse.org/uml2/2.0.0/UML">
          <details xmi:id="_0Ff601OqEeSKJZkEFL8Tcg" key="create"/>
        </eAnnotations>
        <ownedParameter xmi:id="_0Ff61FOqEeSKJZkEFL8Tcg" type="_0Ff60FOqEeSKJZkEFL8Tcg" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_0RBOaFOqEeSKJZkEFL8Tcg" name="actionPerformed">
        <ownedParameter xmi:id="_0RBOaVOqEeSKJZkEFL8Tcg" name="e" type="_0NHlwFOqEeSKJZkEFL8Tcg"/>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_0Ff61VOqEeSKJZkEFL8Tcg" clientDependency="_0RK_UVOqEeSKJZkEFL8Tcg _0RK_UlOqEeSKJZkEFL8Tcg" name="KodeKsBoard">
      <ownedComment xmi:id="_0T2f61OqEeSKJZkEFL8Tcg">
        <body>&#xD;
@author K. Vogel &amp; B. Suhr&#xD;
 *</body>
      </ownedComment>
      <generalization xmi:id="_0OWU0VOqEeSKJZkEFL8Tcg" general="_0GsNqVOqEeSKJZkEFL8Tcg"/>
      <ownedAttribute xmi:id="_0SgcIFOqEeSKJZkEFL8Tcg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_0SgcIVOqEeSKJZkEFL8Tcg" value="12341234L"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_0SgcIlOqEeSKJZkEFL8Tcg" name="boardState" visibility="package" type="_0GsNqVOqEeSKJZkEFL8Tcg" association="_0VCyt1OqEeSKJZkEFL8Tcg"/>
      <ownedAttribute xmi:id="_0SgcJFOqEeSKJZkEFL8Tcg" name="message" visibility="protected" isStatic="true" type="_0OGdMFOqEeSKJZkEFL8Tcg" association="_0VCyulOqEeSKJZkEFL8Tcg"/>
      <ownedAttribute xmi:id="_0SgcJlOqEeSKJZkEFL8Tcg" name="player1_Stones" visibility="protected" type="_0OCLwFOqEeSKJZkEFL8Tcg" association="_0VCyvVOqEeSKJZkEFL8Tcg"/>
      <ownedAttribute xmi:id="_0SgcKFOqEeSKJZkEFL8Tcg" name="player2_Stones" visibility="protected" type="_0OCLwFOqEeSKJZkEFL8Tcg" association="_0VCywFOqEeSKJZkEFL8Tcg"/>
      <ownedAttribute xmi:id="_0SgcKlOqEeSKJZkEFL8Tcg" name="player1Name" visibility="protected" isStatic="true" type="_0OGdMFOqEeSKJZkEFL8Tcg" association="_0VCyw1OqEeSKJZkEFL8Tcg"/>
      <ownedAttribute xmi:id="_0SgcLFOqEeSKJZkEFL8Tcg" name="player2Name" visibility="protected" isStatic="true" type="_0OGdMFOqEeSKJZkEFL8Tcg" association="_0VCyxlOqEeSKJZkEFL8Tcg"/>
      <ownedAttribute xmi:id="_0SgcLlOqEeSKJZkEFL8Tcg" name="numberOfRedStones" visibility="package" isStatic="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_0SgcL1OqEeSKJZkEFL8Tcg" value="0"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_0SqNEVOqEeSKJZkEFL8Tcg" name="numberOfBlueStones" visibility="package" isStatic="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_0SqNElOqEeSKJZkEFL8Tcg" value="0"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_0SqNFFOqEeSKJZkEFL8Tcg" name="board" visibility="protected" isStatic="true" type="_0OCLwFOqEeSKJZkEFL8Tcg" association="_0VCyyVOqEeSKJZkEFL8Tcg"/>
      <ownedAttribute xmi:id="_0SqNFlOqEeSKJZkEFL8Tcg" name="gameInProgress" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_0SqNGFOqEeSKJZkEFL8Tcg" name="currentPlayer" isStatic="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_0SqNGlOqEeSKJZkEFL8Tcg" name="selectedRow" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_0SqNHVOqEeSKJZkEFL8Tcg" name="getThreatenStones" visibility="package" isStatic="true" type="_0G1-oFOqEeSKJZkEFL8Tcg" association="_0VCyzFOqEeSKJZkEFL8Tcg">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0SqNHlOqEeSKJZkEFL8Tcg" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_0SqNIVOqEeSKJZkEFL8Tcg" name="legalMoves" visibility="package" type="_0GsNqlOqEeSKJZkEFL8Tcg" association="_0VCyz1OqEeSKJZkEFL8Tcg">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0SqNIlOqEeSKJZkEFL8Tcg" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_0T2f7FOqEeSKJZkEFL8Tcg" name="selectedCol" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
      </ownedAttribute>
      <interfaceRealization xmi:id="_0RK_UVOqEeSKJZkEFL8Tcg" client="_0Ff61VOqEeSKJZkEFL8Tcg" supplier="_0NIz4VOqEeSKJZkEFL8Tcg" contract="_0NIz4VOqEeSKJZkEFL8Tcg"/>
      <interfaceRealization xmi:id="_0RK_UlOqEeSKJZkEFL8Tcg" client="_0Ff61VOqEeSKJZkEFL8Tcg" supplier="_0NpxQFOqEeSKJZkEFL8Tcg" contract="_0NpxQFOqEeSKJZkEFL8Tcg"/>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0TZ0GFOqEeSKJZkEFL8Tcg" name="KodeKsBoard" specification="_0RK_U1OqEeSKJZkEFL8Tcg">
        <ownedParameter xmi:id="_0TZ0GVOqEeSKJZkEFL8Tcg" name="boardstate" type="_0GsNqVOqEeSKJZkEFL8Tcg"/>
        <ownedParameter xmi:id="_0TZ0GlOqEeSKJZkEFL8Tcg" name="parent" type="_0FDO5FOqEeSKJZkEFL8Tcg"/>
        <ownedParameter xmi:id="_0TZ0G1OqEeSKJZkEFL8Tcg" name="size" type="_0NVoMVOqEeSKJZkEFL8Tcg"/>
        <ownedParameter xmi:id="_0TZ0HFOqEeSKJZkEFL8Tcg" type="_0Ff61VOqEeSKJZkEFL8Tcg" direction="return"/>
        <language>java</language>
        <body>/*&#xD;
		 * creates a panel for the game&#xD;
		 */&#xD;
		board = new JPanel();&#xD;
		setLayout(new BorderLayout());&#xD;
&#xD;
		/*&#xD;
		 * adds the game board to the game panel&#xD;
		 */&#xD;
		boardState = new KodeKsData();&#xD;
		board.add(boardState, BorderLayout.CENTER);&#xD;
		board.setPreferredSize(new Dimension(824, 640));&#xD;
		setBackground(new Color(0, 150, 0));&#xD;
&#xD;
		/*&#xD;
		 * adds a panel for each player on which he collect his taken pieces&#xD;
		 */&#xD;
		player1_Stones = new JPanel();&#xD;
		player1_Stones.setPreferredSize(new Dimension(65, 625));&#xD;
		player1_Stones.setLayout(new BoxLayout(player1_Stones, BoxLayout.Y_AXIS));&#xD;
		player1_Stones.setBorder(new MatteBorder(1, 1, 1, 1, (Color) new Color(0, 0, 0)));&#xD;
		add(player1_Stones, BorderLayout.WEST);&#xD;
&#xD;
		player1Name = new JLabel(&quot;Player 1&quot;);&#xD;
		player1Name.setAlignmentX(CENTER_ALIGNMENT);&#xD;
		player1_Stones.add(player1Name);&#xD;
&#xD;
		player2_Stones = new JPanel();&#xD;
		player2_Stones.setPreferredSize(new Dimension(65, 625));&#xD;
		player2_Stones.setLayout(new BoxLayout(player2_Stones, BoxLayout.Y_AXIS));&#xD;
		player2_Stones.setBorder(new MatteBorder(1, 1, 1, 1, (Color) new Color(0, 0, 0)));&#xD;
		add(player2_Stones, BorderLayout.EAST);&#xD;
&#xD;
		player2Name = new JLabel(&quot;Player 2&quot;);&#xD;
		player2Name.setAlignmentX(CENTER_ALIGNMENT);&#xD;
		player2_Stones.add(player2Name);&#xD;
&#xD;
		addMouseListener(this);&#xD;
		message = new JLabel(&quot;&quot;);&#xD;
		message.setAlignmentX(CENTER_ALIGNMENT);&#xD;
		message.setFont(new Font(&quot;Courier&quot;, Font.BOLD, 32));&#xD;
		message.setForeground(Color.BLACK);&#xD;
		numberOfRedStones = boardState.getNumberOfStones(RED);&#xD;
		numberOfBlueStones = boardState.getNumberOfStones(BLUE);&#xD;
		doNewGame();&#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0TZ0HVOqEeSKJZkEFL8Tcg" name="doNewGame" specification="_0Fpr0FOqEeSKJZkEFL8Tcg">
        <language>java</language>
        <body>boardState.setUpGame(); // Set up the pieces.&#xD;
		player1_Stones.removeAll();&#xD;
		// Player1Name = new JLabel(&quot;Player 1&quot;);&#xD;
		player1Name.setAlignmentX(CENTER_ALIGNMENT);&#xD;
		player1_Stones.add(player1Name);&#xD;
		player2_Stones.removeAll();&#xD;
		// Player2Name = new JLabel(&quot;Player 2&quot;);&#xD;
		player2Name.setAlignmentX(CENTER_ALIGNMENT);&#xD;
		player2_Stones.add(player2Name);&#xD;
		currentPlayer = KodeKsData.RED; // RED moves first.&#xD;
		getThreatenStones = getThreatenStone(KodeKsData.RED); // Get the BLUE&#xD;
																// stones which&#xD;
																// are threaten&#xD;
																// by RED (is&#xD;
																// empty at the&#xD;
																// beginning)&#xD;
		legalMoves = getLegalMoves(KodeKsData.RED); // Get RED's legal moves.&#xD;
		selectedRow = -1; // RED has not yet selected a piece to move.&#xD;
		message.setText(player1Name.getText() + &quot;: Make your move.&quot;);&#xD;
		numberOfRedStones = getNumberOfStones(RED);&#xD;
		numberOfBlueStones = getNumberOfStones(BLUE);&#xD;
		gameInProgress = true;&#xD;
		repaint();&#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0TZ0HlOqEeSKJZkEFL8Tcg" name="doResign" specification="_0Fpr0VOqEeSKJZkEFL8Tcg">
        <language>java</language>
        <body>if (currentPlayer == KodeKsData.RED)&#xD;
			gameOver(&quot;RED resigns.  BLUE wins.&quot;);&#xD;
		else&#xD;
			gameOver(&quot;BLUE resigns.  RED wins.&quot;);&#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0TZ0H1OqEeSKJZkEFL8Tcg" name="gameOver" specification="_0Fpr0lOqEeSKJZkEFL8Tcg">
        <ownedParameter xmi:id="_0TZ0IFOqEeSKJZkEFL8Tcg" name="str">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <language>java</language>
        <body>message.setText(str);&#xD;
		gameInProgress = false;&#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0TZ0IVOqEeSKJZkEFL8Tcg" name="doClickToMove" specification="_0Fpr1FOqEeSKJZkEFL8Tcg">
        <ownedParameter xmi:id="_0TZ0IlOqEeSKJZkEFL8Tcg" name="row">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
        <ownedParameter xmi:id="_0TZ0I1OqEeSKJZkEFL8Tcg" name="col">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
        <language>java</language>
        <body>for (int i = 0; i &lt; legalMoves.length; i++)&#xD;
			if (legalMoves[i].fromRow == row &amp;&amp; legalMoves[i].fromCol == col) {&#xD;
				selectedRow = row;&#xD;
				selectedCol = col;&#xD;
				if (currentPlayer == KodeKsData.RED)&#xD;
					message.setText(player1Name.getText() + &quot;: Make your move.&quot;);&#xD;
				else&#xD;
					message.setText(player2Name.getText() + &quot;: Make your move.&quot;);&#xD;
				repaint();&#xD;
				return;&#xD;
			}&#xD;
&#xD;
		/*&#xD;
		 * If no piece has been selected to be moved, the user must first select a piece. Show an error message and return.&#xD;
		 */&#xD;
&#xD;
		if (selectedRow &lt; 0) {&#xD;
			message.setText(&quot;Click the piece you want to move.&quot;);&#xD;
			return;&#xD;
		}&#xD;
&#xD;
		/*&#xD;
		 * If the user clicked on a square where the selected piece can be legally moved, then make the move and return.&#xD;
		 */&#xD;
&#xD;
		for (int i = 0; i &lt; legalMoves.length; i++)&#xD;
			if (legalMoves[i].fromRow == selectedRow &amp;&amp; legalMoves[i].fromCol == selectedCol &amp;&amp; legalMoves[i].toRow == row &amp;&amp; legalMoves[i].toCol == col) {&#xD;
				doMakeMove(legalMoves[i]);&#xD;
				return;&#xD;
			}&#xD;
&#xD;
		/*&#xD;
		 * If we get to this point, there is a piece selected but the square where the user just clicked is not one where that piece can be legally moved. Show&#xD;
		 * an error message.&#xD;
		 */&#xD;
&#xD;
		message.setText(&quot;Click the square you want to move to.&quot;);&#xD;
&#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0TZ0JFOqEeSKJZkEFL8Tcg" name="doTakeStone" specification="_0RK_WlOqEeSKJZkEFL8Tcg">
        <ownedParameter xmi:id="_0TZ0JVOqEeSKJZkEFL8Tcg" name="take" type="_0G1-oFOqEeSKJZkEFL8Tcg"/>
        <language>java</language>
        <body>boardState.takeStone(take);&#xD;
&#xD;
		/* Make sure the board is redrawn in its new state. */&#xD;
&#xD;
		repaint();&#xD;
&#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0TZ0JlOqEeSKJZkEFL8Tcg" name="doMakeMove" specification="_0RK_XFOqEeSKJZkEFL8Tcg">
        <ownedParameter xmi:id="_0TZ0J1OqEeSKJZkEFL8Tcg" name="move" type="_0GsNqlOqEeSKJZkEFL8Tcg"/>
        <language>java</language>
        <body>boardState.makeMove(move);&#xD;
&#xD;
		/*&#xD;
		 * The current player's turn is ended, so change to the other player. Get that player's ThreatenStones, legal moves and the FoolStoneCombinations of the&#xD;
		 * opponent. If the player has less the 5 stones, then the game ends.&#xD;
		 */&#xD;
		Location start = new Location(move.fromRow, move.fromCol);&#xD;
		Location end = new Location(move.toRow, move.toCol);&#xD;
		GUI.analysePanel.updateAnalyse(start, end, currentPlayer);&#xD;
		if (currentPlayer == KodeKsData.RED) {&#xD;
			currentPlayer = KodeKsData.BLUE;&#xD;
			getThreatenStones = boardState.getThreatenStone(currentPlayer);&#xD;
			legalMoves = boardState.getLegalMoves(currentPlayer);&#xD;
			numberOfBlueStones = boardState.getNumberOfStones(BLUE);&#xD;
			StatusPanel.bStones.setText(&quot;&quot; + numberOfBlueStones);&#xD;
			if (numberOfBlueStones &lt;= 4)&#xD;
				GUI.gameOver(RED);&#xD;
			else&#xD;
				message.setText(player2Name.getText() + &quot;: Make your move.&quot;);&#xD;
		} else {&#xD;
			currentPlayer = KodeKsData.RED;&#xD;
			getThreatenStones = boardState.getThreatenStone(currentPlayer);&#xD;
			legalMoves = boardState.getLegalMoves(currentPlayer);&#xD;
			numberOfRedStones = boardState.getNumberOfStones(RED);&#xD;
			StatusPanel.rStones.setText(&quot;&quot; + numberOfRedStones);&#xD;
			if (numberOfRedStones &lt;= 4)&#xD;
				GUI.gameOver(BLUE);&#xD;
			else&#xD;
				message.setText(player1Name.getText() + &quot;: Make your move.&quot;);&#xD;
		}&#xD;
&#xD;
		/*&#xD;
		 * Set selectedRow = -1 to record that the player has not yet selected a piece to move.&#xD;
		 */&#xD;
&#xD;
		selectedRow = -1;&#xD;
		/* Make sure the board is redrawn in its new state. */&#xD;
&#xD;
		repaint();&#xD;
&#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0Tjk8FOqEeSKJZkEFL8Tcg" name="paintComponent" specification="_0RK_XlOqEeSKJZkEFL8Tcg">
        <ownedParameter xmi:id="_0Tjk8VOqEeSKJZkEFL8Tcg" name="g" type="_0OPAEFOqEeSKJZkEFL8Tcg"/>
        <language>java</language>
        <body>g.setColor(new Color(0, 150, 0));&#xD;
		g.fillRect(65, 0, 1024, 768);&#xD;
		/*&#xD;
		 * Draw the Background of the board&#xD;
		 */&#xD;
		// g.setColor(Color.DARK_GRAY);&#xD;
		// g.fillRect(120, 60, 520, 520);&#xD;
&#xD;
		// load the image of the board&#xD;
		ImageIcon board_game = new ImageIcon(getClass().getClassLoader().getResource(&quot;game_board.png&quot;));&#xD;
		board_game.paintIcon(this, g, 63, 2);&#xD;
&#xD;
		/* Draw the names of each row and col */&#xD;
		int[] charOfCols = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };&#xD;
		for (int col = 0; col &lt; 10; col++) {&#xD;
			g.setColor(new Color(42, 0, 0));&#xD;
			Font coordinates = new Font(&quot;Gothic&quot;, Font.BOLD, 28);&#xD;
			g.setFont(coordinates);&#xD;
			g.drawString(String.valueOf(charOfCols[col]), 145 + col * 50, 57);&#xD;
		}&#xD;
&#xD;
		String[] charOfRows = { &quot;a&quot;, &quot;b&quot;, &quot;c&quot;, &quot;d&quot;, &quot;e&quot;, &quot;f&quot;, &quot;g&quot;, &quot;h&quot;, &quot;i&quot;, &quot;j&quot; };&#xD;
		for (int row = 0; row &lt; 10; row++) {&#xD;
			g.setColor(new Color(42, 0, 0));&#xD;
			Font coordinates = new Font(&quot;Gothic&quot;, Font.BOLD, 28);&#xD;
			g.setFont(coordinates);&#xD;
			g.drawString(charOfRows[row], 95, 105 + row * 50);&#xD;
		}&#xD;
&#xD;
		/* Draw (the squares of the board and) the pieces. */&#xD;
		for (int row = 0; row &lt; 10; row++) {&#xD;
			for (int col = 0; col &lt; 10; col++) {&#xD;
&#xD;
				/*&#xD;
				 * if( row % 2 == col % 2 ) g.setColor(Color.LIGHT_GRAY); else g.setColor(Color.GRAY);&#xD;
				 * &#xD;
				 * g.fillRect(130 + col*50, 70 + row*50, 50, 50);&#xD;
				 */&#xD;
&#xD;
				/* Draw the Pieces on the board */&#xD;
				switch (boardState.pieceAt(row, col)) {&#xD;
				case RED:&#xD;
					ImageIcon red = new ImageIcon(getClass().getClassLoader().getResource(&quot;redStone.png&quot;));&#xD;
					red.paintIcon(this, g, 133 + col * 50, 77 + row * 50);&#xD;
					// g.setColor(Color.RED);&#xD;
					// g.fillOval(132 + col*50, 76 + row*50, 40, 40);&#xD;
					break;&#xD;
				case BLUE:&#xD;
					ImageIcon blue = new ImageIcon(getClass().getClassLoader().getResource(&quot;blueStone.png&quot;));&#xD;
					blue.paintIcon(this, g, 133 + col * 50, 77 + row * 50);&#xD;
					// g.setColor(Color.BLUE);&#xD;
					// g.fillOval(132 + col*50, 76 + row*50, 40, 40);&#xD;
					break;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
&#xD;
		/*&#xD;
		 * If a game is in progress, highlight the legal moves and the possible Pieces to take. Note that legalMoves is never null while a game is in progress.&#xD;
		 */&#xD;
		if (gameInProgress) {&#xD;
			/*&#xD;
			 * First, draw a 2-pixel red border around the pieces that can be taken.&#xD;
			 */&#xD;
			if (getThreatenStones != null) {&#xD;
				g.setColor(Color.red);&#xD;
				for (int i = 0; i &lt; getThreatenStones.length; i++) {&#xD;
					g.drawRect(130 + getThreatenStones[i].threatenCol * 50, 74 + getThreatenStones[i].threatenRow * 50, 45, 45);&#xD;
				}&#xD;
			}&#xD;
&#xD;
			/*&#xD;
			 * Second, draw a 2-pixel cyan border around the pieces that can be moved.&#xD;
			 */&#xD;
			g.setColor(Color.cyan);&#xD;
			for (int i = 0; i &lt; legalMoves.length; i++) {&#xD;
				g.drawRect(130 + legalMoves[i].fromCol * 50, 74 + legalMoves[i].fromRow * 50, 45, 45);&#xD;
			}&#xD;
			/*&#xD;
			 * If a piece is selected for moving (i.e. if selectedRow >= 0), then draw a 2-pixel white border around that piece and draw green borders around&#xD;
			 * each square that that piece can be moved to.&#xD;
			 */&#xD;
			if (selectedRow >= 0) {&#xD;
				g.setColor(Color.white);&#xD;
				g.drawRect(130 + selectedCol * 50, 74 + selectedRow * 50, 45, 45);&#xD;
&#xD;
				g.setColor(Color.green);&#xD;
				for (int i = 0; i &lt; legalMoves.length; i++) {&#xD;
					if (legalMoves[i].fromCol == selectedCol &amp;&amp; legalMoves[i].fromRow == selectedRow) {&#xD;
						g.drawRect(130 + legalMoves[i].toCol * 50, 74 + legalMoves[i].toRow * 50, 45, 45);&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
&#xD;
			/*&#xD;
			 * (Draw the fieldvalues on the board) Load the images of the fieldvalues and set them up like given in KodeKsData&#xD;
			 */&#xD;
			for (int row = 0; row &lt; 10; row++) {&#xD;
				for (int col = 0; col &lt; 10; col++) {&#xD;
					/*&#xD;
					 * g.setColor(Color.BLACK); Font value=new Font(&quot;Gothic&quot;, Font.BOLD, 24); g.setFont(value);&#xD;
					 * g.drawString(String.valueOf(fieldvalue[row][col]), 145 + col*50, 105 + row*50);&#xD;
					 */&#xD;
					if (fieldvalue[row][col] == 1) {&#xD;
						ImageIcon one = new ImageIcon(getClass().getClassLoader().getResource(&quot;1.png&quot;));&#xD;
						one.paintIcon(this, g, 132 + col * 50, 76 + row * 50);&#xD;
					}&#xD;
					if (fieldvalue[row][col] == 2) {&#xD;
						ImageIcon two = new ImageIcon(getClass().getClassLoader().getResource(&quot;2.png&quot;));&#xD;
						two.paintIcon(this, g, 132 + col * 50, 76 + row * 50);&#xD;
					}&#xD;
					if (fieldvalue[row][col] == 3) {&#xD;
						ImageIcon three = new ImageIcon(getClass().getClassLoader().getResource(&quot;3.png&quot;));&#xD;
						three.paintIcon(this, g, 132 + col * 50, 76 + row * 50);&#xD;
					}&#xD;
					if (fieldvalue[row][col] == 4) {&#xD;
						ImageIcon four = new ImageIcon(getClass().getClassLoader().getResource(&quot;4.png&quot;));&#xD;
						four.paintIcon(this, g, 132 + col * 50, 76 + row * 50);&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
&#xD;
			/*&#xD;
			 * lastly, put lasers onto the board where indicated by KodeKsData.laserFields&#xD;
			 */&#xD;
			LaserField[] laserFields = getLaserFields();&#xD;
&#xD;
			ImageIcon laserHorizontal;&#xD;
			ImageIcon laserVertical;&#xD;
			ImageIcon laserDiagonalNW;&#xD;
			ImageIcon laserDiagonalNE;&#xD;
&#xD;
			int laserCol;&#xD;
			int laserRow;&#xD;
&#xD;
			// as long as there are lasers to draw&#xD;
			if (laserFields != null) {&#xD;
				// get blue images if current player is blue&#xD;
				if (currentPlayer == BLUE) {&#xD;
					laserHorizontal = new ImageIcon(getClass().getClassLoader().getResource(&quot;Laser_Animated_blue_hor.gif&quot;));&#xD;
					laserVertical = new ImageIcon(getClass().getClassLoader().getResource(&quot;Laser_Animated_blue_vert.gif&quot;));&#xD;
					laserDiagonalNW = new ImageIcon(getClass().getClassLoader().getResource(&quot;Laser_Animated_blue_diag1.gif&quot;));&#xD;
					laserDiagonalNE = new ImageIcon(getClass().getClassLoader().getResource(&quot;Laser_Animated_blue_diag2.gif&quot;));&#xD;
					// if the player is not blue, it's red's turn - load red images&#xD;
				} else {&#xD;
					laserHorizontal = new ImageIcon(getClass().getClassLoader().getResource(&quot;Laser_Animated_red_hor.gif&quot;));&#xD;
					laserVertical = new ImageIcon(getClass().getClassLoader().getResource(&quot;Laser_Animated_red_vert.gif&quot;));&#xD;
					laserDiagonalNW = new ImageIcon(getClass().getClassLoader().getResource(&quot;Laser_Animated_red_diag1.gif&quot;));&#xD;
					laserDiagonalNE = new ImageIcon(getClass().getClassLoader().getResource(&quot;Laser_Animated_red_diag2.gif&quot;));&#xD;
				}&#xD;
&#xD;
				// for every laserField in the array&#xD;
				for (int i = 0; i &lt; laserFields.length; i++) {&#xD;
&#xD;
					// pull out the coordinates for easier use&#xD;
					laserCol = laserFields[i].column;&#xD;
					laserRow = laserFields[i].row;&#xD;
&#xD;
					// if the laser currently worked on is horizontal&#xD;
					if (laserFields[i].orientation == &quot;horizontal&quot;) {&#xD;
						// then draw the horizontal laser&#xD;
						laserHorizontal.paintIcon(this, g, 123 + laserCol * 50, 67 + laserRow * 50);&#xD;
						// same but for vertical&#xD;
					} else if (laserFields[i].orientation == &quot;vertical&quot;) {&#xD;
						laserVertical.paintIcon(this, g, 123 + laserCol * 50, 67 + laserRow * 50);&#xD;
						// same but for first diagonal&#xD;
					} else if (laserFields[i].orientation == &quot;diagonalNW&quot;) {&#xD;
						laserDiagonalNW.paintIcon(this, g, 123 + laserCol * 50, 67 + laserRow * 50);&#xD;
						// same but for second diagonal&#xD;
					} else if (laserFields[i].orientation == &quot;diagonalNE&quot;) {&#xD;
						laserDiagonalNE.paintIcon(this, g, 123 + laserCol * 50, 67 + laserRow * 50);&#xD;
					}&#xD;
&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0Tjk8lOqEeSKJZkEFL8Tcg" name="mousePressed" specification="_0RK_YFOqEeSKJZkEFL8Tcg">
        <ownedParameter xmi:id="_0Tjk81OqEeSKJZkEFL8Tcg" name="evt" type="_0Nn8EFOqEeSKJZkEFL8Tcg"/>
        <language>java</language>
        <body>if (gameInProgress == false)&#xD;
			message.setText(&quot;Click \&quot;New Game\&quot; to start a new game.&quot;);&#xD;
		else {&#xD;
			int col = (evt.getX() - 130) / 50;&#xD;
			int row = (evt.getY() - 74) / 50;&#xD;
			if (col >= 0 &amp;&amp; col &lt; 10 &amp;&amp; row >= 0 &amp;&amp; row &lt; 10) {&#xD;
				if (getThreatenStones != null) {&#xD;
					for (int i = 0; i &lt; getThreatenStones.length; i++) {&#xD;
						if (getThreatenStones[i].threatenRow == row &amp;&amp; getThreatenStones[i].threatenCol == col)&#xD;
							doTakeStone(getThreatenStones[i]);&#xD;
					}&#xD;
					legalMoves = boardState.getLegalMoves(currentPlayer);&#xD;
				}&#xD;
				doClickToMove(row, col);&#xD;
			}&#xD;
		}&#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0Tjk9FOqEeSKJZkEFL8Tcg" name="updateBoard" specification="_0OVtwFOqEeSKJZkEFL8Tcg">
        <ownedParameter xmi:id="_0Tjk9VOqEeSKJZkEFL8Tcg" name="boardState" type="_0GsNqVOqEeSKJZkEFL8Tcg"/>
        <language>java</language>
        <body>legalMoves = boardState.getLegalMoves(currentPlayer);&#xD;
		getThreatenStones = boardState.getThreatenStone(currentPlayer);&#xD;
		repaint();&#xD;
	</body>
      </ownedBehavior>
      <ownedOperation xmi:id="_0Fpr0FOqEeSKJZkEFL8Tcg" name="doNewGame" method="_0TZ0HVOqEeSKJZkEFL8Tcg"/>
      <ownedOperation xmi:id="_0Fpr0VOqEeSKJZkEFL8Tcg" name="doResign" method="_0TZ0HlOqEeSKJZkEFL8Tcg"/>
      <ownedOperation xmi:id="_0Fpr0lOqEeSKJZkEFL8Tcg" name="gameOver" visibility="package" method="_0TZ0H1OqEeSKJZkEFL8Tcg">
        <ownedParameter xmi:id="_0Fpr01OqEeSKJZkEFL8Tcg" name="str">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_0Fpr1FOqEeSKJZkEFL8Tcg" name="doClickToMove" visibility="package" method="_0TZ0IVOqEeSKJZkEFL8Tcg">
        <ownedParameter xmi:id="_0Fpr1VOqEeSKJZkEFL8Tcg" name="row">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
        <ownedParameter xmi:id="_0Fpr1lOqEeSKJZkEFL8Tcg" name="col">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_0OVtwFOqEeSKJZkEFL8Tcg" name="updateBoard" method="_0Tjk9FOqEeSKJZkEFL8Tcg">
        <ownedParameter xmi:id="_0OWU0FOqEeSKJZkEFL8Tcg" name="boardState" type="_0GsNqVOqEeSKJZkEFL8Tcg"/>
      </ownedOperation>
      <ownedOperation xmi:id="_0RK_U1OqEeSKJZkEFL8Tcg" name="KodeKsBoard" method="_0TZ0GFOqEeSKJZkEFL8Tcg">
        <eAnnotations xmi:id="_0RK_V1OqEeSKJZkEFL8Tcg" source="http://www.eclipse.org/uml2/2.0.0/UML">
          <details xmi:id="_0RK_WFOqEeSKJZkEFL8Tcg" key="create"/>
        </eAnnotations>
        <ownedParameter xmi:id="_0RK_VFOqEeSKJZkEFL8Tcg" name="boardstate" type="_0GsNqVOqEeSKJZkEFL8Tcg"/>
        <ownedParameter xmi:id="_0RK_VVOqEeSKJZkEFL8Tcg" name="parent" type="_0FDO5FOqEeSKJZkEFL8Tcg"/>
        <ownedParameter xmi:id="_0RK_VlOqEeSKJZkEFL8Tcg" name="size" type="_0NVoMVOqEeSKJZkEFL8Tcg"/>
        <ownedParameter xmi:id="_0RK_WVOqEeSKJZkEFL8Tcg" type="_0Ff61VOqEeSKJZkEFL8Tcg" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_0RK_WlOqEeSKJZkEFL8Tcg" name="doTakeStone" visibility="package" method="_0TZ0JFOqEeSKJZkEFL8Tcg">
        <ownedParameter xmi:id="_0RK_W1OqEeSKJZkEFL8Tcg" name="take" type="_0G1-oFOqEeSKJZkEFL8Tcg"/>
      </ownedOperation>
      <ownedOperation xmi:id="_0RK_XFOqEeSKJZkEFL8Tcg" name="doMakeMove" visibility="package" method="_0TZ0JlOqEeSKJZkEFL8Tcg">
        <ownedParameter xmi:id="_0RK_XVOqEeSKJZkEFL8Tcg" name="move" type="_0GsNqlOqEeSKJZkEFL8Tcg"/>
      </ownedOperation>
      <ownedOperation xmi:id="_0RK_XlOqEeSKJZkEFL8Tcg" name="paintComponent" method="_0Tjk8FOqEeSKJZkEFL8Tcg">
        <ownedParameter xmi:id="_0RK_X1OqEeSKJZkEFL8Tcg" name="g" type="_0OPAEFOqEeSKJZkEFL8Tcg"/>
      </ownedOperation>
      <ownedOperation xmi:id="_0RK_YFOqEeSKJZkEFL8Tcg" name="mousePressed" method="_0Tjk8lOqEeSKJZkEFL8Tcg">
        <ownedParameter xmi:id="_0RK_YVOqEeSKJZkEFL8Tcg" name="evt" type="_0Nn8EFOqEeSKJZkEFL8Tcg"/>
      </ownedOperation>
      <ownedOperation xmi:id="_0RK_YlOqEeSKJZkEFL8Tcg" name="mouseReleased">
        <ownedParameter xmi:id="_0RK_Y1OqEeSKJZkEFL8Tcg" name="evt" type="_0Nn8EFOqEeSKJZkEFL8Tcg"/>
      </ownedOperation>
      <ownedOperation xmi:id="_0RK_ZVOqEeSKJZkEFL8Tcg" name="mouseClicked">
        <ownedParameter xmi:id="_0RK_ZlOqEeSKJZkEFL8Tcg" name="evt" type="_0Nn8EFOqEeSKJZkEFL8Tcg"/>
      </ownedOperation>
      <ownedOperation xmi:id="_0RK_aFOqEeSKJZkEFL8Tcg" name="mouseEntered">
        <ownedParameter xmi:id="_0RK_aVOqEeSKJZkEFL8Tcg" name="evt" type="_0Nn8EFOqEeSKJZkEFL8Tcg"/>
      </ownedOperation>
      <ownedOperation xmi:id="_0RUJQVOqEeSKJZkEFL8Tcg" name="mouseExited">
        <ownedParameter xmi:id="_0RUJQlOqEeSKJZkEFL8Tcg" name="evt" type="_0Nn8EFOqEeSKJZkEFL8Tcg"/>
      </ownedOperation>
      <ownedOperation xmi:id="_0RUJRFOqEeSKJZkEFL8Tcg" name="actionPerformed">
        <ownedParameter xmi:id="_0RUJRVOqEeSKJZkEFL8Tcg" name="arg0" type="_0NHlwFOqEeSKJZkEFL8Tcg"/>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_0Fy1wFOqEeSKJZkEFL8Tcg" clientDependency="_0RUJR1OqEeSKJZkEFL8Tcg" name="StatusPanel">
      <ownedComment xmi:id="_0T2f71OqEeSKJZkEFL8Tcg">
        <body>&#xD;
@author K. Vogel &amp; B. Suhr&#xD;
 *</body>
      </ownedComment>
      <generalization xmi:id="_0RUJT1OqEeSKJZkEFL8Tcg" general="_0OCLwFOqEeSKJZkEFL8Tcg"/>
      <ownedAttribute xmi:id="_0SqNJVOqEeSKJZkEFL8Tcg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_0SqNJlOqEeSKJZkEFL8Tcg" value="1L"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_0SqNJ1OqEeSKJZkEFL8Tcg" name="player1Name" visibility="protected" isStatic="true" type="_0OGdMFOqEeSKJZkEFL8Tcg" association="_0VL8oFOqEeSKJZkEFL8Tcg"/>
      <ownedAttribute xmi:id="_0SqNKVOqEeSKJZkEFL8Tcg" name="player2Name" visibility="protected" isStatic="true" type="_0OGdMFOqEeSKJZkEFL8Tcg" association="_0VL8o1OqEeSKJZkEFL8Tcg"/>
      <ownedAttribute xmi:id="_0SqNK1OqEeSKJZkEFL8Tcg" name="rStones" visibility="protected" isStatic="true" type="_0OGdMFOqEeSKJZkEFL8Tcg" association="_0VL8plOqEeSKJZkEFL8Tcg"/>
      <ownedAttribute xmi:id="_0SzXAVOqEeSKJZkEFL8Tcg" name="bStones" visibility="protected" isStatic="true" type="_0OGdMFOqEeSKJZkEFL8Tcg" association="_0VL8qVOqEeSKJZkEFL8Tcg"/>
      <ownedAttribute xmi:id="_0SzXA1OqEeSKJZkEFL8Tcg" name="numberOfRedStones" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_0SzXBFOqEeSKJZkEFL8Tcg" value="14"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_0SzXBlOqEeSKJZkEFL8Tcg" name="numberOfBlueStones" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_0SzXB1OqEeSKJZkEFL8Tcg" value="14"/>
      </ownedAttribute>
      <interfaceRealization xmi:id="_0RUJR1OqEeSKJZkEFL8Tcg" client="_0Fy1wFOqEeSKJZkEFL8Tcg" supplier="_0NbHwFOqEeSKJZkEFL8Tcg" contract="_0NbHwFOqEeSKJZkEFL8Tcg"/>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0Tjk9lOqEeSKJZkEFL8Tcg" name="StatusPanel" specification="_0RUJSFOqEeSKJZkEFL8Tcg">
        <ownedParameter xmi:id="_0Tjk91OqEeSKJZkEFL8Tcg" name="boardstate" type="_0GsNqVOqEeSKJZkEFL8Tcg"/>
        <ownedParameter xmi:id="_0Tjk-FOqEeSKJZkEFL8Tcg" name="parent" type="_0FDO5FOqEeSKJZkEFL8Tcg"/>
        <ownedParameter xmi:id="_0Tjk-VOqEeSKJZkEFL8Tcg" name="size" type="_0NVoMVOqEeSKJZkEFL8Tcg"/>
        <ownedParameter xmi:id="_0Tjk-lOqEeSKJZkEFL8Tcg" type="_0Fy1wFOqEeSKJZkEFL8Tcg" direction="return"/>
        <language>java</language>
        <body>setBorder(new MatteBorder(1, 0, 0, 0, (Color) new Color(0, 0, 0)));&#xD;
&#xD;
		setLayout(new GridLayout(0, 1, 0, 0));&#xD;
		JPanel messagePanel = new JPanel();&#xD;
		add(messagePanel);&#xD;
		messagePanel.add(KodeKsBoard.message);&#xD;
		setPreferredSize(size);&#xD;
&#xD;
		JPanel statPanel = new JPanel();&#xD;
		add(statPanel);&#xD;
		statPanel.setLayout(new GridLayout(0, 2, 0, 0));&#xD;
&#xD;
		JPanel leftstat = new JPanel();&#xD;
		player1Name = new JLabel(&quot;Player 1&quot;);&#xD;
		ImageIcon iconP1 = new ImageIcon(getClass().getClassLoader().getResource(&quot;redStone.png&quot;));&#xD;
		JLabel P1Stat = new JLabel(iconP1, JLabel.LEFT);&#xD;
		leftstat.add(P1Stat);&#xD;
		leftstat.add(player1Name);&#xD;
		JLabel P1StonesLeft = new JLabel(&quot;|  Stones left:&quot;, JLabel.LEFT);&#xD;
		leftstat.add(P1StonesLeft);&#xD;
		rStones = new JLabel(&quot;&quot; + numberOfRedStones);&#xD;
		leftstat.add(rStones);&#xD;
		statPanel.add(leftstat);&#xD;
&#xD;
		JPanel rightstat = new JPanel();&#xD;
		player2Name = new JLabel(&quot;Player 2&quot;);&#xD;
		ImageIcon iconP2 = new ImageIcon(getClass().getClassLoader().getResource(&quot;blueStone.png&quot;));&#xD;
		JLabel P2Stat = new JLabel(iconP2, JLabel.LEFT);&#xD;
		rightstat.add(P2Stat);&#xD;
		rightstat.add(player2Name);&#xD;
		JLabel P2StonesLeft = new JLabel(&quot;|  Stones left:&quot;, JLabel.LEFT);&#xD;
		rightstat.add(P2StonesLeft);&#xD;
		bStones = new JLabel(&quot;&quot; + numberOfRedStones);&#xD;
		rightstat.add(bStones);&#xD;
		statPanel.add(rightstat);&#xD;
&#xD;
	</body>
      </ownedBehavior>
      <ownedOperation xmi:id="_0RUJSFOqEeSKJZkEFL8Tcg" name="StatusPanel" method="_0Tjk9lOqEeSKJZkEFL8Tcg">
        <eAnnotations xmi:id="_0RUJTFOqEeSKJZkEFL8Tcg" source="http://www.eclipse.org/uml2/2.0.0/UML">
          <details xmi:id="_0RUJTVOqEeSKJZkEFL8Tcg" key="create"/>
        </eAnnotations>
        <ownedParameter xmi:id="_0RUJSVOqEeSKJZkEFL8Tcg" name="boardstate" type="_0GsNqVOqEeSKJZkEFL8Tcg"/>
        <ownedParameter xmi:id="_0RUJSlOqEeSKJZkEFL8Tcg" name="parent" type="_0FDO5FOqEeSKJZkEFL8Tcg"/>
        <ownedParameter xmi:id="_0RUJS1OqEeSKJZkEFL8Tcg" name="size" type="_0NVoMVOqEeSKJZkEFL8Tcg"/>
        <ownedParameter xmi:id="_0RUJTlOqEeSKJZkEFL8Tcg" type="_0Fy1wFOqEeSKJZkEFL8Tcg" direction="return"/>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_0F8mwFOqEeSKJZkEFL8Tcg" name="KodeKsMenuBar">
      <ownedComment xmi:id="_0T2f8FOqEeSKJZkEFL8Tcg">
        <body>The menubar of the mainframe&#xD;
&#xD;
@author K. Vogel &amp; B. Suhr&#xD;
 *</body>
      </ownedComment>
      <generalization xmi:id="_0RUJUFOqEeSKJZkEFL8Tcg" general="_0OpPwFOqEeSKJZkEFL8Tcg"/>
      <ownedAttribute xmi:id="_0SzXCVOqEeSKJZkEFL8Tcg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_0SzXClOqEeSKJZkEFL8Tcg" value="42L"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0Tjk-1OqEeSKJZkEFL8Tcg" name="KodeKsMenuBar" specification="_0OvWYFOqEeSKJZkEFL8Tcg">
        <ownedParameter xmi:id="_0Tjk_FOqEeSKJZkEFL8Tcg" name="parent" type="_0FDO5FOqEeSKJZkEFL8Tcg">
          <eAnnotations xmi:id="_0Tjk_VOqEeSKJZkEFL8Tcg" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_0Tjk_lOqEeSKJZkEFL8Tcg" key="final"/>
          </eAnnotations>
        </ownedParameter>
        <ownedParameter xmi:id="_0Tjk_1OqEeSKJZkEFL8Tcg" type="_0F8mwFOqEeSKJZkEFL8Tcg" direction="return"/>
        <language>java</language>
        <body>/*&#xD;
		 * GameMenu&#xD;
		 */&#xD;
		JMenu GameMenu = new JMenu(&quot;Game&quot;);&#xD;
&#xD;
		/*&#xD;
		 * GameMenu-Items&#xD;
		 */&#xD;
&#xD;
		// NEWGAME&#xD;
		JMenuItem GameMenuItem_NGame = new JMenuItem(&quot;New Game&quot;);&#xD;
		GameMenuItem_NGame.addActionListener(new ActionListener() {&#xD;
			public void actionPerformed(ActionEvent e) {&#xD;
				new NewGameDialog();&#xD;
			}&#xD;
		});&#xD;
		GameMenu.add(GameMenuItem_NGame);&#xD;
		JSeparator separator = new JSeparator();&#xD;
		GameMenu.add(separator);&#xD;
&#xD;
		// LOAD&#xD;
		JMenuItem GameMenuItem_Load = new JMenuItem(&quot;Load...&quot;);&#xD;
		GameMenuItem_Load.addActionListener(new ActionListener() {&#xD;
			public void actionPerformed(ActionEvent e) {&#xD;
				new LoadGame();&#xD;
			}&#xD;
&#xD;
		});&#xD;
		GameMenu.add(GameMenuItem_Load);&#xD;
&#xD;
		// SAVE&#xD;
		JMenuItem GameMenuItem_Save = new JMenuItem(&quot;Save...&quot;);&#xD;
		GameMenuItem_Save.addActionListener(new ActionListener() {&#xD;
			public void actionPerformed(ActionEvent e) {&#xD;
				new SaveGame();&#xD;
			}&#xD;
		});&#xD;
		GameMenu.add(GameMenuItem_Save);&#xD;
&#xD;
		JSeparator separator_1 = new JSeparator();&#xD;
		GameMenu.add(separator_1);&#xD;
&#xD;
		// QUIT&#xD;
		JMenuItem GameMenuItem_Quit = new JMenuItem(&quot;Quit&quot;);&#xD;
		GameMenuItem_Quit.setActionCommand(&quot;-11&quot;);&#xD;
		GameMenuItem_Quit.addActionListener(parent);&#xD;
		GameMenu.add(GameMenuItem_Quit);&#xD;
&#xD;
		/*&#xD;
		 * OptionsMenu&#xD;
		 */&#xD;
		JMenu OptionsMenu = new JMenu(&quot;Options&quot;);&#xD;
&#xD;
		// OptionsMenuItem to choose the layout of the Frame and its items&#xD;
&#xD;
		OptionsMenu.add(new LayoutChooser(OptionsMenu));&#xD;
&#xD;
		JSeparator separator_2 = new JSeparator();&#xD;
		OptionsMenu.add(separator_2);&#xD;
&#xD;
		final JCheckBoxMenuItem OptionsMenuItem_ToolBar = new JCheckBoxMenuItem(&quot;Toolbar&quot;);&#xD;
		OptionsMenuItem_ToolBar.setState(true);&#xD;
		OptionsMenuItem_ToolBar.addActionListener(new ActionListener() {&#xD;
			@SuppressWarnings(&quot;static-access&quot;)&#xD;
			public void actionPerformed(ActionEvent e) {&#xD;
				if (OptionsMenuItem_ToolBar.getState() == false)&#xD;
					parent.toolBar.setVisible(false);&#xD;
				else&#xD;
					parent.toolBar.setVisible(true);&#xD;
			}&#xD;
		});&#xD;
		OptionsMenu.add(OptionsMenuItem_ToolBar);&#xD;
&#xD;
		/*&#xD;
		 * HelpMenu -> Informations about the authors and playing rules&#xD;
		 */&#xD;
		JMenu HelpMenu = new JMenu(&quot;Help&quot;);&#xD;
&#xD;
		// HelpMenuItem_HowToPlay&#xD;
		JMenuItem HelpMenuItem_HowToPlay = new JMenuItem(&quot;How to play&quot;);&#xD;
		HelpMenuItem_HowToPlay.addActionListener(new java.awt.event.ActionListener() {&#xD;
			public void actionPerformed(ActionEvent e) {&#xD;
				new HowToPlayFrame();&#xD;
				;&#xD;
			}&#xD;
		});&#xD;
		HelpMenu.add(HelpMenuItem_HowToPlay);&#xD;
&#xD;
		// HelpMenuItem_About&#xD;
		JMenuItem HelpMenuItem_About = new JMenuItem(&quot;About&quot;);&#xD;
		HelpMenuItem_About.addActionListener(new java.awt.event.ActionListener() {&#xD;
			public void actionPerformed(ActionEvent e) {&#xD;
				new About();&#xD;
				;&#xD;
			}&#xD;
		});&#xD;
		HelpMenu.add(HelpMenuItem_About);&#xD;
&#xD;
		add(GameMenu);&#xD;
		add(OptionsMenu);&#xD;
		add(HelpMenu);&#xD;
	</body>
      </ownedBehavior>
      <ownedOperation xmi:id="_0OvWYFOqEeSKJZkEFL8Tcg" name="KodeKsMenuBar" method="_0Tjk-1OqEeSKJZkEFL8Tcg">
        <eAnnotations xmi:id="_0Ov9cVOqEeSKJZkEFL8Tcg" source="http://www.eclipse.org/uml2/2.0.0/UML">
          <details xmi:id="_0Ov9clOqEeSKJZkEFL8Tcg" key="create"/>
        </eAnnotations>
        <ownedParameter xmi:id="_0Ov9cFOqEeSKJZkEFL8Tcg" name="parent" type="_0FDO5FOqEeSKJZkEFL8Tcg">
          <eAnnotations xmi:id="_0OwkgFOqEeSKJZkEFL8Tcg" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_0OxLkFOqEeSKJZkEFL8Tcg" key="final"/>
          </eAnnotations>
        </ownedParameter>
        <ownedParameter xmi:id="_0Ov9c1OqEeSKJZkEFL8Tcg" type="_0F8mwFOqEeSKJZkEFL8Tcg" direction="return"/>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_0F8mwVOqEeSKJZkEFL8Tcg" name="KodeKsToolBar">
      <ownedComment xmi:id="_0T2f8VOqEeSKJZkEFL8Tcg">
        <body>&#xD;
@author K. Vogel &amp; B. Suhr&#xD;
 *</body>
      </ownedComment>
      <generalization xmi:id="_0Rd6QFOqEeSKJZkEFL8Tcg" general="_0Q3dWlOqEeSKJZkEFL8Tcg"/>
      <ownedAttribute xmi:id="_0SzXC1OqEeSKJZkEFL8Tcg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_0SzXDFOqEeSKJZkEFL8Tcg" value="1L"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0TjlAFOqEeSKJZkEFL8Tcg" name="KodeKsToolBar" specification="_0RUJUVOqEeSKJZkEFL8Tcg">
        <ownedParameter xmi:id="_0TjlAVOqEeSKJZkEFL8Tcg" name="listener" type="_0FDO5FOqEeSKJZkEFL8Tcg"/>
        <ownedParameter xmi:id="_0TjlAlOqEeSKJZkEFL8Tcg" name="size" type="_0NVoMVOqEeSKJZkEFL8Tcg"/>
        <ownedParameter xmi:id="_0TjlA1OqEeSKJZkEFL8Tcg" type="_0F8mwVOqEeSKJZkEFL8Tcg" direction="return"/>
        <language>java</language>
        <body>setPreferredSize(size);&#xD;
		setOpaque(true);&#xD;
		setBorder(BorderFactory.createBevelBorder(VERTICAL));&#xD;
&#xD;
		JButton ToolBarItem_NGame = new JButton(&quot;   New Game   &quot;);&#xD;
		ToolBarItem_NGame.setPreferredSize(new Dimension(128, size.height));&#xD;
		ToolBarItem_NGame.setBorder(BorderFactory.createRaisedBevelBorder());&#xD;
		ToolBarItem_NGame.addActionListener(new ActionListener() {&#xD;
			public void actionPerformed(ActionEvent e) {&#xD;
				new NewGameDialog();&#xD;
&#xD;
			}&#xD;
		});&#xD;
&#xD;
		add(ToolBarItem_NGame);&#xD;
&#xD;
		JButton ToolBarItem_Load = new JButton(&quot;   Load   &quot;);&#xD;
		ToolBarItem_Load.setPreferredSize(new Dimension(128, size.height));&#xD;
		ToolBarItem_Load.setBorder(BorderFactory.createRaisedBevelBorder());&#xD;
		ToolBarItem_Load.addActionListener(new ActionListener() {&#xD;
			public void actionPerformed(ActionEvent e) {&#xD;
				new LoadGame();&#xD;
&#xD;
			}&#xD;
		});&#xD;
&#xD;
		JButton ToolBarItem_Save = new JButton(&quot;   Save   &quot;);&#xD;
		ToolBarItem_Save.setPreferredSize(new Dimension(128, size.height));&#xD;
		ToolBarItem_Save.setBorder(BorderFactory.createRaisedBevelBorder());&#xD;
		ToolBarItem_Save.addActionListener(new ActionListener() {&#xD;
			public void actionPerformed(ActionEvent e) {&#xD;
				new SaveGame();&#xD;
&#xD;
			}&#xD;
		});&#xD;
&#xD;
		JButton ToolBarItem_Resign = new JButton(&quot;   Resign   &quot;);&#xD;
		ToolBarItem_Resign.setPreferredSize(new Dimension(128, size.height));&#xD;
		ToolBarItem_Resign.setBorder(BorderFactory.createRaisedBevelBorder());&#xD;
		ToolBarItem_Resign.addActionListener(new ActionListener() {&#xD;
			public void actionPerformed(ActionEvent e) {&#xD;
				new ResignDialog();&#xD;
			}&#xD;
		});&#xD;
&#xD;
		setFloatable(false);&#xD;
		add(ToolBarItem_NGame);&#xD;
		add(ToolBarItem_Load);&#xD;
		add(ToolBarItem_Save);&#xD;
		add(ToolBarItem_Resign);&#xD;
&#xD;
		add(Box.createHorizontalGlue());&#xD;
&#xD;
	</body>
      </ownedBehavior>
      <ownedOperation xmi:id="_0RUJUVOqEeSKJZkEFL8Tcg" name="KodeKsToolBar" method="_0TjlAFOqEeSKJZkEFL8Tcg">
        <eAnnotations xmi:id="_0RUJVFOqEeSKJZkEFL8Tcg" source="http://www.eclipse.org/uml2/2.0.0/UML">
          <details xmi:id="_0RUJVVOqEeSKJZkEFL8Tcg" key="create"/>
        </eAnnotations>
        <ownedParameter xmi:id="_0RUJUlOqEeSKJZkEFL8Tcg" name="listener" type="_0FDO5FOqEeSKJZkEFL8Tcg"/>
        <ownedParameter xmi:id="_0RUJU1OqEeSKJZkEFL8Tcg" name="size" type="_0NVoMVOqEeSKJZkEFL8Tcg"/>
        <ownedParameter xmi:id="_0RUJVlOqEeSKJZkEFL8Tcg" type="_0F8mwVOqEeSKJZkEFL8Tcg" direction="return"/>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_0F8mwlOqEeSKJZkEFL8Tcg" clientDependency="_0Rd6QVOqEeSKJZkEFL8Tcg _0Rd6QlOqEeSKJZkEFL8Tcg" name="LayoutChooser">
      <ownedComment xmi:id="_0T2f8lOqEeSKJZkEFL8Tcg">
        <body>Gives the players the possibility to change the layout of the GUI&#xD;
&#xD;
@author K. Vogel &amp; B. Suhr&#xD;
 *</body>
      </ownedComment>
      <generalization xmi:id="_0RnrTFOqEeSKJZkEFL8Tcg" general="_0O2EEFOqEeSKJZkEFL8Tcg"/>
      <ownedAttribute xmi:id="_0SzXDVOqEeSKJZkEFL8Tcg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_0SzXDlOqEeSKJZkEFL8Tcg" value="1L"/>
      </ownedAttribute>
      <interfaceRealization xmi:id="_0Rd6QVOqEeSKJZkEFL8Tcg" client="_0F8mwlOqEeSKJZkEFL8Tcg" supplier="_0NIz4VOqEeSKJZkEFL8Tcg" contract="_0NIz4VOqEeSKJZkEFL8Tcg"/>
      <interfaceRealization xmi:id="_0Rd6QlOqEeSKJZkEFL8Tcg" client="_0F8mwlOqEeSKJZkEFL8Tcg" supplier="_0O3SMVOqEeSKJZkEFL8Tcg" contract="_0O3SMVOqEeSKJZkEFL8Tcg"/>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0TjlBFOqEeSKJZkEFL8Tcg" name="LayoutChooser" specification="_0Rd6Q1OqEeSKJZkEFL8Tcg">
        <ownedParameter xmi:id="_0TjlBVOqEeSKJZkEFL8Tcg" name="mother" type="_0OoBoFOqEeSKJZkEFL8Tcg"/>
        <ownedParameter xmi:id="_0TjlBlOqEeSKJZkEFL8Tcg" type="_0F8mwlOqEeSKJZkEFL8Tcg" direction="return"/>
        <language>java</language>
        <body>JMenu frameLayout = new JMenu(&quot;Layout&quot;);&#xD;
&#xD;
		JRadioButtonMenuItem frameLayout_System = new JRadioButtonMenuItem(&quot;system&quot;);&#xD;
		frameLayout_System.setActionCommand(&quot;system&quot;);&#xD;
		frameLayout_System.setSelected(true);&#xD;
&#xD;
		JRadioButtonMenuItem frameLayout_Motif = new JRadioButtonMenuItem(&quot;motif&quot;);&#xD;
		frameLayout_Motif.setActionCommand(&quot;motif&quot;);&#xD;
&#xD;
		JRadioButtonMenuItem frameLayout_Metal = new JRadioButtonMenuItem(&quot;metal&quot;);&#xD;
		frameLayout_Metal.setActionCommand(&quot;metal&quot;);&#xD;
&#xD;
		JRadioButtonMenuItem frameLayout_Nimbus = new JRadioButtonMenuItem(&quot;nimbus&quot;);&#xD;
		frameLayout_Nimbus.setActionCommand(&quot;nimbus&quot;);&#xD;
&#xD;
		// Group the radio buttons.&#xD;
		ButtonGroup chooseLayout = new ButtonGroup();&#xD;
		chooseLayout.add(frameLayout_System);&#xD;
		chooseLayout.add(frameLayout_Motif);&#xD;
		chooseLayout.add(frameLayout_Metal);&#xD;
		chooseLayout.add(frameLayout_Nimbus);&#xD;
&#xD;
		// Register a listener for the radio buttons.&#xD;
		frameLayout_System.addActionListener(this);&#xD;
		frameLayout_Motif.addActionListener(this);&#xD;
		frameLayout_Metal.addActionListener(this);&#xD;
		frameLayout_Nimbus.addActionListener(this);&#xD;
&#xD;
		// Add to MenuItem&#xD;
		frameLayout.add(frameLayout_System);&#xD;
		frameLayout.add(frameLayout_Motif);&#xD;
		frameLayout.add(frameLayout_Metal);&#xD;
		frameLayout.add(frameLayout_Nimbus);&#xD;
&#xD;
		mother.add(frameLayout);&#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0TjlB1OqEeSKJZkEFL8Tcg" name="actionPerformed" specification="_0Rd6SFOqEeSKJZkEFL8Tcg">
        <ownedParameter xmi:id="_0TjlCFOqEeSKJZkEFL8Tcg" name="e" type="_0NHlwFOqEeSKJZkEFL8Tcg"/>
        <language>java</language>
        <body>if (e.getActionCommand() == &quot;system&quot;)&#xD;
			try {&#xD;
				UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());&#xD;
			} catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException e1) {&#xD;
				// TODO Auto-generated catch block&#xD;
				e1.printStackTrace();&#xD;
			}&#xD;
		if (e.getActionCommand() == &quot;metal&quot;)&#xD;
			try {&#xD;
				UIManager.setLookAndFeel(&quot;javax.swing.plaf.metal.MetalLookAndFeel&quot;);&#xD;
			} catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException e1) {&#xD;
				// TODO Auto-generated catch block&#xD;
				e1.printStackTrace();&#xD;
			}&#xD;
		if (e.getActionCommand() == &quot;motif&quot;)&#xD;
			try {&#xD;
				UIManager.setLookAndFeel(&quot;com.sun.java.swing.plaf.motif.MotifLookAndFeel&quot;);&#xD;
			} catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException e1) {&#xD;
				// TODO Auto-generated catch block&#xD;
				e1.printStackTrace();&#xD;
			}&#xD;
		if (e.getActionCommand() == &quot;nimbus&quot;)&#xD;
			try {&#xD;
				UIManager.setLookAndFeel(&quot;javax.swing.plaf.nimbus.NimbusLookAndFeel&quot;);&#xD;
			} catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException e1) {&#xD;
				// TODO Auto-generated catch block&#xD;
				e1.printStackTrace();&#xD;
			}&#xD;
&#xD;
		SwingUtilities.updateComponentTreeUI(RunKodeKs.mainGUI);&#xD;
&#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0TjlCVOqEeSKJZkEFL8Tcg" name="getValue" specification="_0GGXwFOqEeSKJZkEFL8Tcg">
        <ownedParameter xmi:id="_0TjlClOqEeSKJZkEFL8Tcg" name="arg0">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <ownedParameter xmi:id="_0TjlC1OqEeSKJZkEFL8Tcg" type="_0Rd6T1OqEeSKJZkEFL8Tcg" direction="return"/>
        <language>java</language>
        <body>return null;&#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0TjlDFOqEeSKJZkEFL8Tcg" name="isEnabled" specification="_0GGXxVOqEeSKJZkEFL8Tcg">
        <ownedParameter xmi:id="_0TjlDVOqEeSKJZkEFL8Tcg" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedParameter>
        <language>java</language>
        <body>return false;&#xD;
	</body>
      </ownedBehavior>
      <ownedOperation xmi:id="_0GGXwFOqEeSKJZkEFL8Tcg" name="getValue" method="_0TjlCVOqEeSKJZkEFL8Tcg">
        <ownedParameter xmi:id="_0GGXwVOqEeSKJZkEFL8Tcg" name="arg0">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <ownedParameter xmi:id="_0RnrQFOqEeSKJZkEFL8Tcg" type="_0Rd6T1OqEeSKJZkEFL8Tcg" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_0GGXxVOqEeSKJZkEFL8Tcg" name="isEnabled" method="_0TjlDFOqEeSKJZkEFL8Tcg">
        <ownedParameter xmi:id="_0GGXxlOqEeSKJZkEFL8Tcg" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_0GGXylOqEeSKJZkEFL8Tcg" name="setEnabled">
        <ownedParameter xmi:id="_0GGXy1OqEeSKJZkEFL8Tcg" name="arg0">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_0Rd6Q1OqEeSKJZkEFL8Tcg" name="LayoutChooser" method="_0TjlBFOqEeSKJZkEFL8Tcg">
        <eAnnotations xmi:id="_0Rd6RVOqEeSKJZkEFL8Tcg" source="http://www.eclipse.org/uml2/2.0.0/UML">
          <details xmi:id="_0Rd6RlOqEeSKJZkEFL8Tcg" key="create"/>
        </eAnnotations>
        <ownedComment xmi:id="_0T2f81OqEeSKJZkEFL8Tcg">
          <body>&#xD;
	 * @param mother&#xD;
	 *            - JMenu</body>
        </ownedComment>
        <ownedParameter xmi:id="_0Rd6RFOqEeSKJZkEFL8Tcg" name="mother" type="_0OoBoFOqEeSKJZkEFL8Tcg"/>
        <ownedParameter xmi:id="_0Rd6R1OqEeSKJZkEFL8Tcg" type="_0F8mwlOqEeSKJZkEFL8Tcg" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_0Rd6SFOqEeSKJZkEFL8Tcg" name="actionPerformed" method="_0TjlB1OqEeSKJZkEFL8Tcg">
        <ownedComment xmi:id="_0T2f9FOqEeSKJZkEFL8Tcg">
          <body>*</body>
        </ownedComment>
        <ownedParameter xmi:id="_0Rd6SVOqEeSKJZkEFL8Tcg" name="e" type="_0NHlwFOqEeSKJZkEFL8Tcg"/>
      </ownedOperation>
      <ownedOperation xmi:id="_0Rd6SlOqEeSKJZkEFL8Tcg" name="addPropertyChangeListener">
        <ownedParameter xmi:id="_0Rd6S1OqEeSKJZkEFL8Tcg" name="arg0" type="_0O0O4FOqEeSKJZkEFL8Tcg"/>
      </ownedOperation>
      <ownedOperation xmi:id="_0RnrQVOqEeSKJZkEFL8Tcg" name="putValue">
        <ownedParameter xmi:id="_0RnrQlOqEeSKJZkEFL8Tcg" name="arg0">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <ownedParameter xmi:id="_0RnrQ1OqEeSKJZkEFL8Tcg" name="arg1" type="_0Rd6T1OqEeSKJZkEFL8Tcg"/>
      </ownedOperation>
      <ownedOperation xmi:id="_0RnrR1OqEeSKJZkEFL8Tcg" name="removePropertyChangeListener">
        <ownedParameter xmi:id="_0RnrSFOqEeSKJZkEFL8Tcg" name="arg0" type="_0O0O4FOqEeSKJZkEFL8Tcg"/>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_0GGXz1OqEeSKJZkEFL8Tcg" name="LoadGame">
      <ownedComment xmi:id="_0T2f9VOqEeSKJZkEFL8Tcg">
        <body>&#xD;
@author K. Vogel B. Suhr&#xD;
 *</body>
      </ownedComment>
      <ownedAttribute xmi:id="_0SzXD1OqEeSKJZkEFL8Tcg" name="currentPlayer" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_0SzXEVOqEeSKJZkEFL8Tcg" name="player1Name" visibility="package" type="_0OGdMFOqEeSKJZkEFL8Tcg" association="_0VL8rFOqEeSKJZkEFL8Tcg"/>
      <ownedAttribute xmi:id="_0SzXE1OqEeSKJZkEFL8Tcg" name="player2Name" visibility="package" type="_0OGdMFOqEeSKJZkEFL8Tcg" association="_0VL8r1OqEeSKJZkEFL8Tcg"/>
      <ownedAttribute xmi:id="_0SzXFVOqEeSKJZkEFL8Tcg" name="stateofdatboard" visibility="package" type="_0GsNqVOqEeSKJZkEFL8Tcg" association="_0VVtoVOqEeSKJZkEFL8Tcg"/>
      <ownedAttribute xmi:id="_0SzXF1OqEeSKJZkEFL8Tcg" name="message" visibility="package" type="_0OGdMFOqEeSKJZkEFL8Tcg" association="_0VVtpFOqEeSKJZkEFL8Tcg"/>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0TjlDlOqEeSKJZkEFL8Tcg" name="LoadGame" specification="_0GPhsFOqEeSKJZkEFL8Tcg">
        <ownedParameter xmi:id="_0TjlD1OqEeSKJZkEFL8Tcg" type="_0GGXz1OqEeSKJZkEFL8Tcg" direction="return"/>
        <language>java</language>
        <body>JFileChooser load = new JFileChooser();&#xD;
		//Show dialog to choose a File to load&#xD;
		load.showOpenDialog(null);&#xD;
		String loadGameTitle = load.getSelectedFile().getName();&#xD;
		&#xD;
&#xD;
		try {&#xD;
&#xD;
			FileInputStream is = new FileInputStream(loadGameTitle);&#xD;
 		ObjectInputStream ois = new ObjectInputStream(is);&#xD;
 		GUI.board.boardState = (KodeKsData)ois.readObject();&#xD;
 		KodeKsBoard.currentPlayer = (int)ois.readObject();&#xD;
 		player1Name = (JLabel)ois.readObject();&#xD;
 		player2Name = (JLabel)ois.readObject();&#xD;
 		stateofdatboard = (KodeKsData)ois.readObject();&#xD;
 		message = (JLabel)ois.readObject();&#xD;
 		&#xD;
 		ois.close();&#xD;
		} catch (Exception e) {&#xD;
			e.printStackTrace();&#xD;
		}&#xD;
		&#xD;
		KodeKsBoard.message.setText(message.getText());&#xD;
		&#xD;
		//apply names to labels&#xD;
		KodeKsBoard.player1Name.setText(player1Name.getText());&#xD;
		KodeKsBoard.player2Name.setText(player2Name.getText());&#xD;
		AnalysePanel.player1Name.setText(player1Name.getText());&#xD;
		AnalysePanel.player2Name.setText(player2Name.getText());&#xD;
		StatusPanel.player1Name.setText(player1Name.getText());&#xD;
		StatusPanel.player2Name.setText(player2Name.getText());&#xD;
		&#xD;
		//update board to properly reflect allowed moves and threatened stones&#xD;
		RunKodeKs.mainGUI.board.updateBoard(stateofdatboard);&#xD;
		&#xD;
		&#xD;
		&#xD;
		&#xD;
	</body>
      </ownedBehavior>
      <ownedOperation xmi:id="_0GPhsFOqEeSKJZkEFL8Tcg" name="LoadGame" method="_0TjlDlOqEeSKJZkEFL8Tcg">
        <eAnnotations xmi:id="_0GPhsVOqEeSKJZkEFL8Tcg" source="http://www.eclipse.org/uml2/2.0.0/UML">
          <details xmi:id="_0GPhslOqEeSKJZkEFL8Tcg" key="create"/>
        </eAnnotations>
        <ownedParameter xmi:id="_0GPhtFOqEeSKJZkEFL8Tcg" type="_0GGXz1OqEeSKJZkEFL8Tcg" direction="return"/>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_0GPhuFOqEeSKJZkEFL8Tcg" clientDependency="_0RnrTVOqEeSKJZkEFL8Tcg" name="Location">
      <ownedComment xmi:id="_0T2f91OqEeSKJZkEFL8Tcg">
        <body>helpclass for the analysepanel to get the location of the stones&#xD;
&#xD;
@author K. Vogel &amp; B. Suhr&#xD;
 *</body>
      </ownedComment>
      <ownedAttribute xmi:id="_0SzXGVOqEeSKJZkEFL8Tcg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_0SzXGlOqEeSKJZkEFL8Tcg" value="5087471276680520399L"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_0SzXG1OqEeSKJZkEFL8Tcg" name="row" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_0SzXHVOqEeSKJZkEFL8Tcg" name="column" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
      </ownedAttribute>
      <interfaceRealization xmi:id="_0RnrTVOqEeSKJZkEFL8Tcg" client="_0GPhuFOqEeSKJZkEFL8Tcg" supplier="_0NbHwFOqEeSKJZkEFL8Tcg" contract="_0NbHwFOqEeSKJZkEFL8Tcg"/>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0TjlEFOqEeSKJZkEFL8Tcg" name="Location" specification="_0GPhuVOqEeSKJZkEFL8Tcg">
        <ownedParameter xmi:id="_0TjlEVOqEeSKJZkEFL8Tcg" type="_0GPhuFOqEeSKJZkEFL8Tcg" direction="return"/>
        <language>java</language>
        <body>row = 0;&#xD;
		column = 0;&#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0TjlElOqEeSKJZkEFL8Tcg" name="Location" specification="_0GPhvVOqEeSKJZkEFL8Tcg">
        <ownedParameter xmi:id="_0TjlE1OqEeSKJZkEFL8Tcg" name="row">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
        <ownedParameter xmi:id="_0TjlFFOqEeSKJZkEFL8Tcg" name="column">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
        <ownedParameter xmi:id="_0TjlFVOqEeSKJZkEFL8Tcg" type="_0GPhuFOqEeSKJZkEFL8Tcg" direction="return"/>
        <language>java</language>
        <body>this.row = row;&#xD;
		this.column = column;&#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0TjlFlOqEeSKJZkEFL8Tcg" name="Location" specification="_0PF7sVOqEeSKJZkEFL8Tcg">
        <ownedParameter xmi:id="_0TjlF1OqEeSKJZkEFL8Tcg" name="move" type="_0PFUoFOqEeSKJZkEFL8Tcg"/>
        <ownedParameter xmi:id="_0TjlGFOqEeSKJZkEFL8Tcg" type="_0GPhuFOqEeSKJZkEFL8Tcg" direction="return"/>
        <language>java</language>
        <body>this.row = move.fromRow;&#xD;
		this.column = move.fromCol;&#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0TjlGVOqEeSKJZkEFL8Tcg" name="getRow" specification="_0GPhw1OqEeSKJZkEFL8Tcg">
        <ownedParameter xmi:id="_0TjlGlOqEeSKJZkEFL8Tcg" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
        <language>java</language>
        <body>return row;&#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0TjlG1OqEeSKJZkEFL8Tcg" name="getCol" specification="_0GPhxVOqEeSKJZkEFL8Tcg">
        <ownedParameter xmi:id="_0TjlHFOqEeSKJZkEFL8Tcg" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
        <language>java</language>
        <body>return column;&#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0TjlHVOqEeSKJZkEFL8Tcg" name="equals" specification="_0PHJ0FOqEeSKJZkEFL8Tcg">
        <ownedParameter xmi:id="_0TjlHlOqEeSKJZkEFL8Tcg" name="loc" type="_0GPhuFOqEeSKJZkEFL8Tcg"/>
        <ownedParameter xmi:id="_0TjlH1OqEeSKJZkEFL8Tcg" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedParameter>
        <language>java</language>
        <body>return loc.getRow() == this.getRow() &amp;&amp; loc.getCol() == this.getCol();&#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0TjlIFOqEeSKJZkEFL8Tcg" name="toString" specification="_0GPhx1OqEeSKJZkEFL8Tcg">
        <ownedParameter xmi:id="_0TjlIVOqEeSKJZkEFL8Tcg" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <language>java</language>
        <body>int col = getCol();&#xD;
		int row = getRow();&#xD;
		int analyseCol;&#xD;
		char analyseRow;&#xD;
		switch (col) {&#xD;
		case 0:&#xD;
			analyseCol = 1;&#xD;
			break;&#xD;
		case 1:&#xD;
			analyseCol = 2;&#xD;
			break;&#xD;
		case 2:&#xD;
			analyseCol = 3;&#xD;
			break;&#xD;
		case 3:&#xD;
			analyseCol = 4;&#xD;
			break;&#xD;
		case 4:&#xD;
			analyseCol = 5;&#xD;
			break;&#xD;
		case 5:&#xD;
			analyseCol = 6;&#xD;
			break;&#xD;
		case 6:&#xD;
			analyseCol = 7;&#xD;
			break;&#xD;
		case 7:&#xD;
			analyseCol = 8;&#xD;
			break;&#xD;
		case 8:&#xD;
			analyseCol = 9;&#xD;
			break;&#xD;
		case 9:&#xD;
			analyseCol = 10;&#xD;
			break;&#xD;
		default:&#xD;
			analyseCol = 0;&#xD;
			break;&#xD;
		}&#xD;
&#xD;
		switch (row) {&#xD;
		case 0:&#xD;
			analyseRow = 'a';&#xD;
			break;&#xD;
		case 1:&#xD;
			analyseRow = 'b';&#xD;
			break;&#xD;
		case 2:&#xD;
			analyseRow = 'c';&#xD;
			break;&#xD;
		case 3:&#xD;
			analyseRow = 'd';&#xD;
			break;&#xD;
		case 4:&#xD;
			analyseRow = 'e';&#xD;
			break;&#xD;
		case 5:&#xD;
			analyseRow = 'f';&#xD;
			break;&#xD;
		case 6:&#xD;
			analyseRow = 'g';&#xD;
			break;&#xD;
		case 7:&#xD;
			analyseRow = 'h';&#xD;
			break;&#xD;
		case 8:&#xD;
			analyseRow = 'i';&#xD;
			break;&#xD;
		case 9:&#xD;
			analyseRow = 'j';&#xD;
			break;&#xD;
		default:&#xD;
			analyseRow = ' ';&#xD;
			break;&#xD;
		}&#xD;
&#xD;
		return &quot;&quot; + analyseCol + &quot;&quot; + analyseRow;&#xD;
	</body>
      </ownedBehavior>
      <ownedOperation xmi:id="_0GPhuVOqEeSKJZkEFL8Tcg" name="Location" method="_0TjlEFOqEeSKJZkEFL8Tcg">
        <eAnnotations xmi:id="_0GPhulOqEeSKJZkEFL8Tcg" source="http://www.eclipse.org/uml2/2.0.0/UML">
          <details xmi:id="_0GPhu1OqEeSKJZkEFL8Tcg" key="create"/>
        </eAnnotations>
        <ownedComment xmi:id="_0T2f-FOqEeSKJZkEFL8Tcg">
          <body>*</body>
        </ownedComment>
        <ownedParameter xmi:id="_0GPhvFOqEeSKJZkEFL8Tcg" type="_0GPhuFOqEeSKJZkEFL8Tcg" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_0GPhvVOqEeSKJZkEFL8Tcg" name="Location" method="_0TjlElOqEeSKJZkEFL8Tcg">
        <eAnnotations xmi:id="_0GPhwFOqEeSKJZkEFL8Tcg" source="http://www.eclipse.org/uml2/2.0.0/UML">
          <details xmi:id="_0GPhwVOqEeSKJZkEFL8Tcg" key="create"/>
        </eAnnotations>
        <ownedComment xmi:id="_0T2f-VOqEeSKJZkEFL8Tcg">
          <body>&#xD;
	 * @param row&#xD;
	 *            - int&#xD;
	 * @param column&#xD;
	 *            - int</body>
        </ownedComment>
        <ownedParameter xmi:id="_0GPhvlOqEeSKJZkEFL8Tcg" name="row">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
        <ownedParameter xmi:id="_0GPhv1OqEeSKJZkEFL8Tcg" name="column">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
        <ownedParameter xmi:id="_0GPhwlOqEeSKJZkEFL8Tcg" type="_0GPhuFOqEeSKJZkEFL8Tcg" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_0GPhw1OqEeSKJZkEFL8Tcg" name="getRow" method="_0TjlGVOqEeSKJZkEFL8Tcg">
        <ownedComment xmi:id="_0T2f-1OqEeSKJZkEFL8Tcg">
          <body>&#xD;
	 * @return row - int</body>
        </ownedComment>
        <ownedParameter xmi:id="_0GPhxFOqEeSKJZkEFL8Tcg" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_0GPhxVOqEeSKJZkEFL8Tcg" name="getCol" method="_0TjlG1OqEeSKJZkEFL8Tcg">
        <ownedComment xmi:id="_0T2f_FOqEeSKJZkEFL8Tcg">
          <body>&#xD;
	 * @return column - int</body>
        </ownedComment>
        <ownedParameter xmi:id="_0GPhxlOqEeSKJZkEFL8Tcg" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_0GPhx1OqEeSKJZkEFL8Tcg" name="toString" method="_0TjlIFOqEeSKJZkEFL8Tcg">
        <ownedComment xmi:id="_0T2f_lOqEeSKJZkEFL8Tcg">
          <body>*</body>
        </ownedComment>
        <ownedParameter xmi:id="_0GPhyFOqEeSKJZkEFL8Tcg" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_0PF7sVOqEeSKJZkEFL8Tcg" name="Location" method="_0TjlFlOqEeSKJZkEFL8Tcg">
        <eAnnotations xmi:id="_0PGiwFOqEeSKJZkEFL8Tcg" source="http://www.eclipse.org/uml2/2.0.0/UML">
          <details xmi:id="_0PGiwVOqEeSKJZkEFL8Tcg" key="create"/>
        </eAnnotations>
        <ownedComment xmi:id="_0T2f-lOqEeSKJZkEFL8Tcg">
          <body>&#xD;
	 * @param move&#xD;
	 *            - KodeKsMove</body>
        </ownedComment>
        <ownedParameter xmi:id="_0PF7slOqEeSKJZkEFL8Tcg" name="move" type="_0PFUoFOqEeSKJZkEFL8Tcg"/>
        <ownedParameter xmi:id="_0PGiwlOqEeSKJZkEFL8Tcg" type="_0GPhuFOqEeSKJZkEFL8Tcg" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_0PHJ0FOqEeSKJZkEFL8Tcg" name="equals" method="_0TjlHVOqEeSKJZkEFL8Tcg">
        <ownedComment xmi:id="_0T2f_VOqEeSKJZkEFL8Tcg">
          <body>&#xD;
	 * @param loc&#xD;
	 *            - Location&#xD;
	 * @return boolean</body>
        </ownedComment>
        <ownedParameter xmi:id="_0PHJ0VOqEeSKJZkEFL8Tcg" name="loc" type="_0GPhuFOqEeSKJZkEFL8Tcg"/>
        <ownedParameter xmi:id="_0PHJ0lOqEeSKJZkEFL8Tcg" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_0GZSsFOqEeSKJZkEFL8Tcg" clientDependency="_0RnrTlOqEeSKJZkEFL8Tcg" name="NewGameDialog">
      <ownedComment xmi:id="_0T2f_1OqEeSKJZkEFL8Tcg">
        <body>Dialog appears if a player resigned or a player had win a game Gives the possibility to start a new game&#xD;
&#xD;
@author K. Vogel &amp; B. Suhr&#xD;
 *</body>
      </ownedComment>
      <ownedAttribute xmi:id="_0SzXH1OqEeSKJZkEFL8Tcg" name="contentNameP1Field" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_0S9IAVOqEeSKJZkEFL8Tcg" name="contentNameP2Field" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
      <interfaceRealization xmi:id="_0RnrTlOqEeSKJZkEFL8Tcg" client="_0GZSsFOqEeSKJZkEFL8Tcg" supplier="_0NIz4VOqEeSKJZkEFL8Tcg" contract="_0NIz4VOqEeSKJZkEFL8Tcg"/>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0TjlIlOqEeSKJZkEFL8Tcg" name="NewGameDialog" specification="_0GZSsVOqEeSKJZkEFL8Tcg">
        <ownedParameter xmi:id="_0TjlI1OqEeSKJZkEFL8Tcg" type="_0GZSsFOqEeSKJZkEFL8Tcg" direction="return"/>
        <language>java</language>
        <body>final JFrame newgame = new JFrame(&quot;New Game&quot;);&#xD;
		// Fenster&#xD;
		newgame.setBackground(Color.lightGray);&#xD;
		newgame.setLayout(new BorderLayout());&#xD;
		newgame.setBounds(325, 360, 300, 400);&#xD;
		// newgame.setResizable(false); //Hinweis im Text beachten&#xD;
&#xD;
		// Message&#xD;
		newgame.add(new Label(&quot;Let's start a new game of KodeKs!&quot;), BorderLayout.NORTH);&#xD;
		// Player IDs&#xD;
		JPanel NGLabel = new JPanel();&#xD;
		newgame.add(NGLabel, BorderLayout.CENTER);&#xD;
		NGLabel.setLayout(new GridLayout(3, 3));&#xD;
		NGLabel.add(new Label(&quot;Player 1:&quot;));&#xD;
		final JTextField nameP1 = new JTextField(&quot;RED&quot;);&#xD;
		NGLabel.add(nameP1);&#xD;
		NGLabel.add(new Label(null));&#xD;
		NGLabel.add(new Label(&quot;Player 2:&quot;));&#xD;
		final JTextField nameP2 = new JTextField(&quot;BLUE&quot;);&#xD;
		NGLabel.add(nameP2);&#xD;
		NGLabel.add(new Label(null));&#xD;
		NGLabel.add(new Label(null));&#xD;
&#xD;
		// Buttons&#xD;
		Panel panel = new Panel();&#xD;
		panel.setLayout(new FlowLayout(FlowLayout.CENTER));&#xD;
		// NewGameButton&#xD;
		Button ngbutton = new Button(&quot;new game&quot;);&#xD;
		ngbutton.addActionListener(new ActionListener() {&#xD;
			public void actionPerformed(ActionEvent e) {&#xD;
&#xD;
				GUI.analysePanel.clearAnalyse();&#xD;
				RunKodeKs.mainGUI.repaint();&#xD;
&#xD;
				KodeKsBoard.player1Name.setText(nameP1.getText());&#xD;
				KodeKsBoard.player2Name.setText(nameP2.getText());&#xD;
				AnalysePanel.player1Name.setText(nameP1.getText());&#xD;
				AnalysePanel.player2Name.setText(nameP2.getText());&#xD;
				StatusPanel.player1Name.setText(nameP1.getText());&#xD;
				StatusPanel.player2Name.setText(nameP2.getText());&#xD;
				StatusPanel.rStones.setText(&quot;14&quot;);&#xD;
				StatusPanel.bStones.setText(&quot;14&quot;);&#xD;
&#xD;
				GUI.board.doNewGame();&#xD;
&#xD;
				newgame.dispose();&#xD;
			}&#xD;
		});&#xD;
		NGLabel.add(ngbutton);&#xD;
&#xD;
		// CancelButton&#xD;
		Button cbutton = new Button(&quot;cancel&quot;);&#xD;
		cbutton.addActionListener(new ActionListener() {&#xD;
			public void actionPerformed(ActionEvent e) {&#xD;
				newgame.dispose();&#xD;
			}&#xD;
		});&#xD;
		NGLabel.add(cbutton);&#xD;
		newgame.pack();&#xD;
		newgame.setVisible(true);&#xD;
	</body>
      </ownedBehavior>
      <ownedOperation xmi:id="_0GZSsVOqEeSKJZkEFL8Tcg" name="NewGameDialog" visibility="package" method="_0TjlIlOqEeSKJZkEFL8Tcg">
        <eAnnotations xmi:id="_0GZSslOqEeSKJZkEFL8Tcg" source="http://www.eclipse.org/uml2/2.0.0/UML">
          <details xmi:id="_0GZSs1OqEeSKJZkEFL8Tcg" key="create"/>
        </eAnnotations>
        <ownedParameter xmi:id="_0GZStFOqEeSKJZkEFL8Tcg" type="_0GZSsFOqEeSKJZkEFL8Tcg" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_0RnrT1OqEeSKJZkEFL8Tcg" name="actionPerformed">
        <ownedParameter xmi:id="_0RnrUFOqEeSKJZkEFL8Tcg" name="arg0" type="_0NHlwFOqEeSKJZkEFL8Tcg"/>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_0GZStVOqEeSKJZkEFL8Tcg" name="PopupWindow">
      <ownedComment xmi:id="_0T2gAFOqEeSKJZkEFL8Tcg">
        <body>&#xD;
@author K. Vogel &amp; B. Suhr&#xD;
 *</body>
      </ownedComment>
      <generalization xmi:id="_0Rw1MFOqEeSKJZkEFL8Tcg" general="_0PZdsFOqEeSKJZkEFL8Tcg"/>
      <ownedAttribute xmi:id="_0S9IA1OqEeSKJZkEFL8Tcg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_0S9IBFOqEeSKJZkEFL8Tcg" value="-6382879648233899539L"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_0S9IBVOqEeSKJZkEFL8Tcg" name="parentLoc" visibility="private" type="_0RnrUlOqEeSKJZkEFL8Tcg" association="_0VfeoVOqEeSKJZkEFL8Tcg"/>
      <ownedAttribute xmi:id="_0S9IB1OqEeSKJZkEFL8Tcg" name="parent" visibility="package" type="_0FDO5FOqEeSKJZkEFL8Tcg" association="_0VfepFOqEeSKJZkEFL8Tcg"/>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0TjlJFOqEeSKJZkEFL8Tcg" name="PopupWindow" specification="_0PQ60FOqEeSKJZkEFL8Tcg">
        <ownedParameter xmi:id="_0TjlJVOqEeSKJZkEFL8Tcg" name="parent" type="_0FDO5FOqEeSKJZkEFL8Tcg"/>
        <ownedParameter xmi:id="_0TjlJlOqEeSKJZkEFL8Tcg" name="title">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <ownedParameter xmi:id="_0TjlJ1OqEeSKJZkEFL8Tcg" type="_0GZStVOqEeSKJZkEFL8Tcg" direction="return"/>
        <language>java</language>
        <body>super(parent, title);&#xD;
		this.parent = parent;&#xD;
		setSize(300, 100);&#xD;
		if (parent.isVisible()) {&#xD;
			parentLoc = parent.getLocationOnScreen();&#xD;
			setLocation((int) parentLoc.getX() + (parent.getWidth() / 2 - getSize().width / 2), (int) parentLoc.getY()&#xD;
					+ (parent.getHeight() / 2 - getSize().height / 2));&#xD;
		}&#xD;
		setResizable(false);&#xD;
		setLayout(new BoxLayout(this.getContentPane(), BoxLayout.PAGE_AXIS));&#xD;
		setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);&#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0TjlKFOqEeSKJZkEFL8Tcg" name="resetLocation" specification="_0GZStlOqEeSKJZkEFL8Tcg">
        <language>java</language>
        <body>if (parent.isVisible())&#xD;
			setLocation((int) parentLoc.getX() + (parent.getWidth() / 2 - getSize().width / 2), (int) parentLoc.getY()&#xD;
					+ (parent.getHeight() / 2 - getSize().height / 2));&#xD;
	</body>
      </ownedBehavior>
      <ownedOperation xmi:id="_0GZStlOqEeSKJZkEFL8Tcg" name="resetLocation" method="_0TjlKFOqEeSKJZkEFL8Tcg">
        <ownedComment xmi:id="_0T2gAlOqEeSKJZkEFL8Tcg">
          <body>*</body>
        </ownedComment>
      </ownedOperation>
      <ownedOperation xmi:id="_0PQ60FOqEeSKJZkEFL8Tcg" name="PopupWindow" method="_0TjlJFOqEeSKJZkEFL8Tcg">
        <eAnnotations xmi:id="_0PRh4FOqEeSKJZkEFL8Tcg" source="http://www.eclipse.org/uml2/2.0.0/UML">
          <details xmi:id="_0PRh4VOqEeSKJZkEFL8Tcg" key="create"/>
        </eAnnotations>
        <ownedComment xmi:id="_0T2gAVOqEeSKJZkEFL8Tcg">
          <body>&#xD;
	 * @param parent&#xD;
	 *            - GUI&#xD;
	 * @param title&#xD;
	 *            - String</body>
        </ownedComment>
        <ownedParameter xmi:id="_0PQ60VOqEeSKJZkEFL8Tcg" name="parent" type="_0FDO5FOqEeSKJZkEFL8Tcg"/>
        <ownedParameter xmi:id="_0PQ60lOqEeSKJZkEFL8Tcg" name="title">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <ownedParameter xmi:id="_0PRh4lOqEeSKJZkEFL8Tcg" type="_0GZStVOqEeSKJZkEFL8Tcg" direction="return"/>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_0GZSt1OqEeSKJZkEFL8Tcg" clientDependency="_0Rw1MVOqEeSKJZkEFL8Tcg" name="QuitDialog">
      <ownedComment xmi:id="_0T2gA1OqEeSKJZkEFL8Tcg">
        <body>&#xD;
@author K. Vogel &amp; B. Suhr&#xD;
 *</body>
      </ownedComment>
      <generalization xmi:id="_0PWaYFOqEeSKJZkEFL8Tcg" general="_0GZStVOqEeSKJZkEFL8Tcg"/>
      <ownedAttribute xmi:id="_0S9ICVOqEeSKJZkEFL8Tcg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_0S9IClOqEeSKJZkEFL8Tcg" value="1L"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_0S9IC1OqEeSKJZkEFL8Tcg" name="text" visibility="private" type="_0OGdMFOqEeSKJZkEFL8Tcg" association="_0Vfep1OqEeSKJZkEFL8Tcg"/>
      <ownedAttribute xmi:id="_0S9IDVOqEeSKJZkEFL8Tcg" name="yes" visibility="private" type="_0OFPEFOqEeSKJZkEFL8Tcg" association="_0VfeqlOqEeSKJZkEFL8Tcg"/>
      <ownedAttribute xmi:id="_0T2gBFOqEeSKJZkEFL8Tcg" name="no" visibility="private" type="_0OFPEFOqEeSKJZkEFL8Tcg" association="_0VoomlOqEeSKJZkEFL8Tcg"/>
      <interfaceRealization xmi:id="_0Rw1MVOqEeSKJZkEFL8Tcg" client="_0GZSt1OqEeSKJZkEFL8Tcg" supplier="_0NIz4VOqEeSKJZkEFL8Tcg" contract="_0NIz4VOqEeSKJZkEFL8Tcg"/>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0TjlKVOqEeSKJZkEFL8Tcg" name="QuitDialog" specification="_0PT-IFOqEeSKJZkEFL8Tcg">
        <ownedParameter xmi:id="_0TjlKlOqEeSKJZkEFL8Tcg" name="parent" type="_0FDO5FOqEeSKJZkEFL8Tcg"/>
        <ownedParameter xmi:id="_0TjlK1OqEeSKJZkEFL8Tcg" type="_0GZSt1OqEeSKJZkEFL8Tcg" direction="return"/>
        <language>java</language>
        <body>super(parent, &quot;Quit?&quot;);&#xD;
&#xD;
		this.parent = parent;&#xD;
&#xD;
		text = new JLabel(&quot;Are you sure you want to exit KodeKs?&quot;);&#xD;
		no = new JButton(&quot;No&quot;);&#xD;
		no.addActionListener(new ActionListener() {&#xD;
			public void actionPerformed(ActionEvent e) {&#xD;
				dispose();&#xD;
			}&#xD;
		});&#xD;
		yes = new JButton(&quot;Yes&quot;);&#xD;
		yes.addActionListener(new ActionListener() {&#xD;
			public void actionPerformed(ActionEvent e) {&#xD;
				RunKodeKs.mainGUI.dispose();&#xD;
				dispose();&#xD;
			}&#xD;
		});&#xD;
&#xD;
		JPanel top = new JPanel();&#xD;
		top.setBackground(new Color(0, 0, 0, 0));&#xD;
		top.add(text);&#xD;
		JPanel bottom = new JPanel();&#xD;
		bottom.setBackground(new Color(0, 0, 0, 0));&#xD;
		bottom.add(no);&#xD;
		bottom.add(yes);&#xD;
		add(top);&#xD;
		add(bottom);&#xD;
&#xD;
		pack();&#xD;
		resetLocation();&#xD;
	</body>
      </ownedBehavior>
      <ownedOperation xmi:id="_0PT-IFOqEeSKJZkEFL8Tcg" name="QuitDialog" method="_0TjlKVOqEeSKJZkEFL8Tcg">
        <eAnnotations xmi:id="_0PVMQFOqEeSKJZkEFL8Tcg" source="http://www.eclipse.org/uml2/2.0.0/UML">
          <details xmi:id="_0PVMQVOqEeSKJZkEFL8Tcg" key="create"/>
        </eAnnotations>
        <ownedComment xmi:id="_0T2gB1OqEeSKJZkEFL8Tcg">
          <body>&#xD;
	 * @param parent&#xD;
	 *            - GUI</body>
        </ownedComment>
        <ownedParameter xmi:id="_0PUlMFOqEeSKJZkEFL8Tcg" name="parent" type="_0FDO5FOqEeSKJZkEFL8Tcg"/>
        <ownedParameter xmi:id="_0PVMQlOqEeSKJZkEFL8Tcg" type="_0GZSt1OqEeSKJZkEFL8Tcg" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_0Rw1MlOqEeSKJZkEFL8Tcg" name="actionPerformed">
        <ownedParameter xmi:id="_0Rw1M1OqEeSKJZkEFL8Tcg" name="e" type="_0NHlwFOqEeSKJZkEFL8Tcg"/>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_0GjDsFOqEeSKJZkEFL8Tcg" clientDependency="_0Rw1N1OqEeSKJZkEFL8Tcg" name="ResignDialog">
      <ownedComment xmi:id="_0T2gCFOqEeSKJZkEFL8Tcg">
        <body>&#xD;
@author K. Vogel &amp; B. Suhr&#xD;
 *</body>
      </ownedComment>
      <ownedAttribute xmi:id="_0S9IEFOqEeSKJZkEFL8Tcg" name="resignDlg" visibility="package" isLeaf="true" type="_0PZdsFOqEeSKJZkEFL8Tcg" isReadOnly="true" association="_0VferVOqEeSKJZkEFL8Tcg">
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_0S9IEVOqEeSKJZkEFL8Tcg" value="new JDialog()"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_0S9IE1OqEeSKJZkEFL8Tcg" name="resignmessage" visibility="package" isStatic="true" type="_0OGdMFOqEeSKJZkEFL8Tcg" association="_0VfesFOqEeSKJZkEFL8Tcg"/>
      <ownedAttribute xmi:id="_0S9IFVOqEeSKJZkEFL8Tcg" name="confirmButton" visibility="package" isStatic="true" type="_0OFPEFOqEeSKJZkEFL8Tcg" association="_0Vfes1OqEeSKJZkEFL8Tcg"/>
      <ownedAttribute xmi:id="_0T2gCVOqEeSKJZkEFL8Tcg" name="cancelButton" visibility="package" type="_0OFPEFOqEeSKJZkEFL8Tcg" association="_0VoonVOqEeSKJZkEFL8Tcg"/>
      <interfaceRealization xmi:id="_0Rw1N1OqEeSKJZkEFL8Tcg" client="_0GjDsFOqEeSKJZkEFL8Tcg" supplier="_0NIz4VOqEeSKJZkEFL8Tcg" contract="_0NIz4VOqEeSKJZkEFL8Tcg"/>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0TjlLFOqEeSKJZkEFL8Tcg" name="ResignDialog" specification="_0GjDsVOqEeSKJZkEFL8Tcg">
        <ownedParameter xmi:id="_0TjlLVOqEeSKJZkEFL8Tcg" type="_0GjDsFOqEeSKJZkEFL8Tcg" direction="return"/>
        <language>java</language>
        <body>// Fenster&#xD;
		resignDlg.setBackground(Color.lightGray);&#xD;
		resignDlg.setLayout(new BorderLayout());&#xD;
		resignDlg.setBounds(325, 360, 200, 200);&#xD;
		resignDlg.setResizable(false);&#xD;
&#xD;
		// Message&#xD;
		resignmessage = new JLabel(&quot;Do you realy want to resign??? \n You will loose the game...&quot;);&#xD;
		resignDlg.add(resignmessage, BorderLayout.CENTER);&#xD;
		// Buttons&#xD;
		JPanel panel = new JPanel();&#xD;
		panel.setLayout(new FlowLayout(FlowLayout.CENTER));&#xD;
		confirmButton = new JButton(&quot;Yes&quot;);&#xD;
		confirmButton.addActionListener(new ActionListener() {&#xD;
			public void actionPerformed(ActionEvent e) {&#xD;
				doResign();&#xD;
			}&#xD;
		});&#xD;
		panel.add(confirmButton);&#xD;
		cancelButton = new JButton(&quot;No&quot;);&#xD;
		cancelButton.addActionListener(new ActionListener() {&#xD;
			public void actionPerformed(ActionEvent e) {&#xD;
				resignDlg.dispose();&#xD;
			}&#xD;
		});&#xD;
		panel.add(cancelButton);&#xD;
		resignDlg.add(panel, BorderLayout.SOUTH);&#xD;
		resignDlg.pack();&#xD;
		resignDlg.setVisible(true);&#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0TjlLlOqEeSKJZkEFL8Tcg" name="doResign" specification="_0GjDtVOqEeSKJZkEFL8Tcg">
        <language>java</language>
        <body>if (KodeKsBoard.currentPlayer == KodeKsBoard.RED)&#xD;
			gameOver(&quot;RED resigns.  BLUE wins.&quot;);&#xD;
		else&#xD;
			gameOver(&quot;BLUE resigns.  RED wins.&quot;);&#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0TjlL1OqEeSKJZkEFL8Tcg" name="gameOver" specification="_0GjDtlOqEeSKJZkEFL8Tcg">
        <ownedParameter xmi:id="_0TjlMFOqEeSKJZkEFL8Tcg" name="str">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <language>java</language>
        <body>GUI.board.gameInProgress = false;&#xD;
		ResignDialog.resignmessage.setText(str);&#xD;
		cancelButton.setText(&quot;close&quot;);&#xD;
		confirmButton.setText(&quot;new game&quot;);&#xD;
		confirmButton.addActionListener(new ActionListener() {&#xD;
			public void actionPerformed(ActionEvent e) {&#xD;
				resignDlg.dispose();&#xD;
				new NewGameDialog();&#xD;
			}&#xD;
		});&#xD;
	</body>
      </ownedBehavior>
      <ownedOperation xmi:id="_0GjDsVOqEeSKJZkEFL8Tcg" name="ResignDialog" visibility="package" method="_0TjlLFOqEeSKJZkEFL8Tcg">
        <eAnnotations xmi:id="_0GjDslOqEeSKJZkEFL8Tcg" source="http://www.eclipse.org/uml2/2.0.0/UML">
          <details xmi:id="_0GjDs1OqEeSKJZkEFL8Tcg" key="create"/>
        </eAnnotations>
        <ownedParameter xmi:id="_0GjDtFOqEeSKJZkEFL8Tcg" type="_0GjDsFOqEeSKJZkEFL8Tcg" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_0GjDtVOqEeSKJZkEFL8Tcg" name="doResign" method="_0TjlLlOqEeSKJZkEFL8Tcg"/>
      <ownedOperation xmi:id="_0GjDtlOqEeSKJZkEFL8Tcg" name="gameOver" visibility="package" method="_0TjlL1OqEeSKJZkEFL8Tcg">
        <ownedParameter xmi:id="_0GjDt1OqEeSKJZkEFL8Tcg" name="str">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_0Rw1OFOqEeSKJZkEFL8Tcg" name="actionPerformed">
        <ownedParameter xmi:id="_0Rw1OVOqEeSKJZkEFL8Tcg" name="e" type="_0NHlwFOqEeSKJZkEFL8Tcg"/>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_0GjDuFOqEeSKJZkEFL8Tcg" clientDependency="_0Rw1PVOqEeSKJZkEFL8Tcg" name="RunKodeKs">
      <ownedComment xmi:id="_0UAQ4lOqEeSKJZkEFL8Tcg">
        <body>&#xD;
@author K. Vogel &amp; B. Suhr&#xD;
 *</body>
      </ownedComment>
      <ownedAttribute xmi:id="_0S9IGFOqEeSKJZkEFL8Tcg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_0S9IGVOqEeSKJZkEFL8Tcg" value="1L"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_0S9IGlOqEeSKJZkEFL8Tcg" name="mainGUI" visibility="package" isStatic="true" type="_0FDO5FOqEeSKJZkEFL8Tcg" association="_0VfetlOqEeSKJZkEFL8Tcg"/>
      <interfaceRealization xmi:id="_0Rw1PVOqEeSKJZkEFL8Tcg" client="_0GjDuFOqEeSKJZkEFL8Tcg" supplier="_0NbHwFOqEeSKJZkEFL8Tcg" contract="_0NbHwFOqEeSKJZkEFL8Tcg"/>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0TjlMVOqEeSKJZkEFL8Tcg" name="main" specification="_0GsNoFOqEeSKJZkEFL8Tcg">
        <ownedParameter xmi:id="_0TjlMlOqEeSKJZkEFL8Tcg" name="args">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0TjlM1OqEeSKJZkEFL8Tcg" value="*"/>
        </ownedParameter>
        <language>java</language>
        <body>EventQueue.invokeLater(new Runnable() {&#xD;
			public void run() {&#xD;
				try {&#xD;
&#xD;
					mainGUI = new GUI(new KodeKsData());&#xD;
					try {&#xD;
						UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());&#xD;
					} catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException e1) {&#xD;
						e1.printStackTrace();&#xD;
					}&#xD;
					SwingUtilities.updateComponentTreeUI(mainGUI);&#xD;
					mainGUI.setVisible(true);&#xD;
&#xD;
				} catch (Exception e) {&#xD;
					e.printStackTrace();&#xD;
				}&#xD;
			}&#xD;
		});&#xD;
&#xD;
	</body>
      </ownedBehavior>
      <ownedOperation xmi:id="_0GsNoFOqEeSKJZkEFL8Tcg" name="main" isStatic="true" method="_0TjlMVOqEeSKJZkEFL8Tcg">
        <ownedParameter xmi:id="_0GsNoVOqEeSKJZkEFL8Tcg" name="args">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0GsNolOqEeSKJZkEFL8Tcg" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_0GsNpFOqEeSKJZkEFL8Tcg" name="SaveGame">
      <ownedComment xmi:id="_0UAQ41OqEeSKJZkEFL8Tcg">
        <body>&#xD;
@author K. Vogel &amp; B. Suhr&#xD;
 *</body>
      </ownedComment>
      <ownedAttribute xmi:id="_0S9IHFOqEeSKJZkEFL8Tcg" name="fixedPlayer1" visibility="package" isStatic="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_0TG5AVOqEeSKJZkEFL8Tcg" name="fixedPlayer2" visibility="package" isStatic="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_0TG5A1OqEeSKJZkEFL8Tcg" name="newValue" visibility="package" isStatic="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0TjlNFOqEeSKJZkEFL8Tcg" name="SaveGame" specification="_0GsNpVOqEeSKJZkEFL8Tcg">
        <ownedParameter xmi:id="_0TjlNVOqEeSKJZkEFL8Tcg" type="_0GsNpFOqEeSKJZkEFL8Tcg" direction="return"/>
        <language>java</language>
        <body>// Sets the Format for the Date we use&#xD;
		DateFormat dateFormat = new SimpleDateFormat(&quot;dd_MM_yyyy'-'HH-mm&quot;);&#xD;
		Date date = new Date();&#xD;
		fixedPlayer1 = new String(KodeKsBoard.player1Name.getText());&#xD;
		fixedPlayer2 = new String(KodeKsBoard.player2Name.getText());&#xD;
		// Create the title of the save-file&#xD;
		String saveGameTitle = fixedPlayer1 + &quot;VS&quot; + fixedPlayer2 + &quot;_&quot; + dateFormat.format(date) + &quot;.kdk&quot;;&#xD;
&#xD;
		/*&#xD;
		 * Saves the the following into a file line-by-line: TokenPositionList() redTokenLeft blueTokenLeft minutes and seconds of current game time Player1Name&#xD;
		 * Player2Name&#xD;
		 */&#xD;
		// BufferedWriter writeObject = null;&#xD;
		try {&#xD;
			File file = new File(saveGameTitle);&#xD;
			ObjectOutputStream oos = new ObjectOutputStream(new FileOutputStream(file));&#xD;
			oos.writeObject(GUI.board.boardState);&#xD;
			oos.writeObject(KodeKsBoard.currentPlayer);&#xD;
			oos.writeObject(KodeKsBoard.player1Name);&#xD;
			oos.writeObject(KodeKsBoard.player2Name);&#xD;
			oos.writeObject(GUI.board.boardState);&#xD;
			oos.writeObject(KodeKsBoard.message);&#xD;
			// oos.writeObject(GUI.analysePanel);&#xD;
			// oos.writeObject(GUI.statusPanel);&#xD;
			// oos.writeObject(GUI.board.Player1_Stones);&#xD;
			// oos.writeObject(GUI.board.Player2_Stones);&#xD;
&#xD;
			oos.close();&#xD;
		} catch (Exception es) {&#xD;
			es.printStackTrace();&#xD;
		}&#xD;
		JOptionPane.showMessageDialog(null, &quot;File Name: '&quot; + saveGameTitle + &quot;'&quot;, &quot;Game successfully saved!&quot;, JOptionPane.INFORMATION_MESSAGE);&#xD;
&#xD;
	</body>
      </ownedBehavior>
      <ownedOperation xmi:id="_0GsNpVOqEeSKJZkEFL8Tcg" name="SaveGame" method="_0TjlNFOqEeSKJZkEFL8Tcg">
        <eAnnotations xmi:id="_0GsNplOqEeSKJZkEFL8Tcg" source="http://www.eclipse.org/uml2/2.0.0/UML">
          <details xmi:id="_0GsNp1OqEeSKJZkEFL8Tcg" key="create"/>
        </eAnnotations>
        <ownedParameter xmi:id="_0GsNqFOqEeSKJZkEFL8Tcg" type="_0GsNpFOqEeSKJZkEFL8Tcg" direction="return"/>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_0GsNqVOqEeSKJZkEFL8Tcg" clientDependency="_0Rw1PlOqEeSKJZkEFL8Tcg" name="KodeKsData">
      <ownedComment xmi:id="_0UAQ5FOqEeSKJZkEFL8Tcg">
        <body>An object of this class holds data about a game of KodeKs. It knows what kind of piece is on each square of the KodeKsboard. Methods are provided to return&#xD;
lists of available legal moves.&#xD;
&#xD;
@author K. Vogel &amp; B. Suhr&#xD;
 *</body>
      </ownedComment>
      <generalization xmi:id="_0R6mMlOqEeSKJZkEFL8Tcg" general="_0OCLwFOqEeSKJZkEFL8Tcg"/>
      <ownedAttribute xmi:id="_0TG5BVOqEeSKJZkEFL8Tcg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_0TG5BlOqEeSKJZkEFL8Tcg" value="547642L"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_0TG5B1OqEeSKJZkEFL8Tcg" name="board" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0TG5CFOqEeSKJZkEFL8Tcg" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_0TG5C1OqEeSKJZkEFL8Tcg" name="moves" visibility="package" isStatic="true" type="_0NZSkFOqEeSKJZkEFL8Tcg" association="_0VfeuVOqEeSKJZkEFL8Tcg"/>
      <ownedAttribute xmi:id="_0TG5DlOqEeSKJZkEFL8Tcg" name="threaten" visibility="private" isStatic="true" type="_0NZSkFOqEeSKJZkEFL8Tcg" association="_0VfevFOqEeSKJZkEFL8Tcg"/>
      <ownedAttribute xmi:id="_0TG5EVOqEeSKJZkEFL8Tcg" name="laserFields" visibility="private" isStatic="true" type="_0NZSkFOqEeSKJZkEFL8Tcg" association="_0VookVOqEeSKJZkEFL8Tcg"/>
      <ownedAttribute xmi:id="_0TG5FFOqEeSKJZkEFL8Tcg" name="laserFieldsArray" isStatic="true" type="_0G1-qVOqEeSKJZkEFL8Tcg" association="_0VoolFOqEeSKJZkEFL8Tcg">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0TG5FVOqEeSKJZkEFL8Tcg" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_0TQC_FOqEeSKJZkEFL8Tcg" name="EMPTY" visibility="package" isLeaf="true" isStatic="true" isReadOnly="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_0TQC_VOqEeSKJZkEFL8Tcg" value="0"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_0TQDAFOqEeSKJZkEFL8Tcg" name="fieldvalue" isLeaf="true" isStatic="true" isReadOnly="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0TQDAVOqEeSKJZkEFL8Tcg" value="*"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_0TQDA1OqEeSKJZkEFL8Tcg" value="{ { 2, 3, 4, 1, 2, 3, 1, 4, 3, 2 }, { 3, 1, 2, 3, 4, 1, 3, 2, 1, 3 }, { 4, 2, 1, 4, 1, 4, 2, 1, 2, 4 },&#xD;&#xA;&#x9;&#x9;&#x9;{ 1, 3, 2, 3, 2, 1, 3, 4, 3, 1 }, { 3, 1, 4, 1, 2, 4, 2, 1, 4, 2 }, { 2, 4, 1, 2, 4, 2, 1, 4, 1, 3 }, { 1, 3, 4, 3, 1, 2, 3, 2, 3, 1 },&#xD;&#xA;&#x9;&#x9;&#x9;{ 4, 2, 1, 2, 4, 1, 4, 1, 2, 4 }, { 3, 1, 2, 3, 1, 4, 3, 2, 1, 3 }, { 2, 3, 4, 1, 3, 2, 1, 4, 3, 2 } }"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_0TQDBVOqEeSKJZkEFL8Tcg" name="board_AT_START" isLeaf="true" isStatic="true" isReadOnly="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0TQDBlOqEeSKJZkEFL8Tcg" value="*"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_0TQDCFOqEeSKJZkEFL8Tcg" value="{&#xD;&#xA;&#xD;&#xA;&#x9;{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 0, 2, 1, 2, 1, 2, 1, 2, 1, 0 }, { 0, 1, 0, 0, 0, 0, 0, 0, 2, 0 }, { 0, 2, 0, 0, 0, 0, 0, 0, 1, 0 },&#xD;&#xA;&#x9;&#x9;&#x9;{ 0, 1, 0, 0, 0, 0, 0, 0, 2, 0 }, { 0, 2, 0, 0, 0, 0, 0, 0, 1, 0 }, { 0, 1, 0, 0, 0, 0, 0, 0, 2, 0 }, { 0, 2, 0, 0, 0, 0, 0, 0, 1, 0 },&#xD;&#xA;&#x9;&#x9;&#x9;{ 0, 1, 2, 1, 2, 1, 2, 1, 2, 0 }, { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_0UAQ81OqEeSKJZkEFL8Tcg" name="RED" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_0UAQ9lOqEeSKJZkEFL8Tcg" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_0UAQ91OqEeSKJZkEFL8Tcg" name="BLUE" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_0UAQ-lOqEeSKJZkEFL8Tcg" value="2"/>
      </ownedAttribute>
      <interfaceRealization xmi:id="_0Rw1PlOqEeSKJZkEFL8Tcg" client="_0GsNqVOqEeSKJZkEFL8Tcg" supplier="_0NbHwFOqEeSKJZkEFL8Tcg" contract="_0NbHwFOqEeSKJZkEFL8Tcg"/>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0Tsu6VOqEeSKJZkEFL8Tcg" name="KodeKsData" specification="_0G1-s1OqEeSKJZkEFL8Tcg">
        <ownedParameter xmi:id="_0Tsu6lOqEeSKJZkEFL8Tcg" type="_0GsNqVOqEeSKJZkEFL8Tcg" direction="return"/>
        <language>java</language>
        <body>board = new int[10][10];&#xD;
		setUpGame();&#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0Tsu61OqEeSKJZkEFL8Tcg" name="setUpGame" specification="_0G1-t1OqEeSKJZkEFL8Tcg">
        <language>java</language>
        <body>for (int row = 0; row &lt; 10; row++) {&#xD;
			for (int col = 0; col &lt; 10; col++) {&#xD;
				board[row][col] = board_AT_START[row][col];&#xD;
			}&#xD;
		}&#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0Tsu7FOqEeSKJZkEFL8Tcg" name="pieceAt" specification="_0G1-uFOqEeSKJZkEFL8Tcg">
        <ownedParameter xmi:id="_0Tsu7VOqEeSKJZkEFL8Tcg" name="row">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
        <ownedParameter xmi:id="_0Tsu7lOqEeSKJZkEFL8Tcg" name="col">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
        <ownedParameter xmi:id="_0Tsu71OqEeSKJZkEFL8Tcg" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
        <language>java</language>
        <body>return board[row][col];&#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0Tsu8FOqEeSKJZkEFL8Tcg" name="getNumberOfStones" specification="_0G_IkFOqEeSKJZkEFL8Tcg">
        <ownedParameter xmi:id="_0Tsu8VOqEeSKJZkEFL8Tcg" name="player">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
        <ownedParameter xmi:id="_0Tsu8lOqEeSKJZkEFL8Tcg" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
        <language>java</language>
        <body>int sum = 0;&#xD;
&#xD;
		for (int row = 0; row &lt; 10; row++) {&#xD;
			for (int col = 0; col &lt; 10; col++) {&#xD;
				if (board[row][col] == player) {&#xD;
					sum++;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		return sum;&#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0Tsu81OqEeSKJZkEFL8Tcg" name="onBoard" specification="_0G_Ik1OqEeSKJZkEFL8Tcg">
        <ownedParameter xmi:id="_0Tsu9FOqEeSKJZkEFL8Tcg" name="row">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
        <ownedParameter xmi:id="_0Tsu9VOqEeSKJZkEFL8Tcg" name="col">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
        <ownedParameter xmi:id="_0Tsu9lOqEeSKJZkEFL8Tcg" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedParameter>
        <language>java</language>
        <body>if (row &lt; 0 || row >= 10 || col &lt; 0 || col >= 10)&#xD;
			return false;&#xD;
		else&#xD;
			return true;&#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0Tsu91OqEeSKJZkEFL8Tcg" name="takeStone" specification="_0QaKUFOqEeSKJZkEFL8Tcg">
        <ownedParameter xmi:id="_0Tsu-FOqEeSKJZkEFL8Tcg" name="take" type="_0G1-oFOqEeSKJZkEFL8Tcg"/>
        <language>java</language>
        <body>takeStone(take.threatenRow, take.threatenCol);&#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0Tsu-VOqEeSKJZkEFL8Tcg" name="takeStone" specification="_0G_Il1OqEeSKJZkEFL8Tcg">
        <ownedParameter xmi:id="_0Tsu-lOqEeSKJZkEFL8Tcg" name="row">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
        <ownedParameter xmi:id="_0Tsu-1OqEeSKJZkEFL8Tcg" name="col">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
        <language>java</language>
        <body>if (board[row][col] != EMPTY) {&#xD;
			board[row][col] = EMPTY;&#xD;
&#xD;
			JLabel point = new JLabel(&quot;&quot;); // puts the taken stone into the panel on the side&#xD;
&#xD;
			point.setAlignmentX(CENTER_ALIGNMENT);&#xD;
			if (KodeKsBoard.currentPlayer == RED) {&#xD;
				ImageIcon iconP1 = new ImageIcon(getClass().getClassLoader().getResource(&quot;blueStone.png&quot;));&#xD;
				point.setIcon(iconP1);&#xD;
				GUI.board.player1_Stones.add(point);&#xD;
			} else {&#xD;
				ImageIcon iconP2 = new ImageIcon(getClass().getClassLoader().getResource(&quot;redStone.png&quot;));&#xD;
				point.setIcon(iconP2);&#xD;
				GUI.board.player2_Stones.add(point);&#xD;
			}&#xD;
			try {&#xD;
				AudioInputStream audioInputStream = AudioSystem.getAudioInputStream(getClass().getResourceAsStream(&quot;Glass_break.wav&quot;));&#xD;
				AudioFormat af = audioInputStream.getFormat();&#xD;
				int size = (int) (af.getFrameSize() * audioInputStream.getFrameLength());&#xD;
				byte[] audio = new byte[size];&#xD;
				DataLine.Info info = new DataLine.Info(Clip.class, af, size);&#xD;
				audioInputStream.read(audio, 0, size);&#xD;
&#xD;
				Clip clip = (Clip) AudioSystem.getLine(info);&#xD;
				clip.open(af, audio, 0, size);&#xD;
				clip.start();&#xD;
&#xD;
			} catch (Exception e) {&#xD;
				e.printStackTrace();&#xD;
			}&#xD;
			// recount the remaining pieces for each player&#xD;
			KodeKsBoard.numberOfRedStones = GUI.board.getNumberOfStones(RED);&#xD;
			KodeKsBoard.numberOfBlueStones = GUI.board.getNumberOfStones(BLUE);&#xD;
		}&#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0Tsu_FOqEeSKJZkEFL8Tcg" name="getLaserFields" specification="_0G_ImlOqEeSKJZkEFL8Tcg">
        <ownedParameter xmi:id="_0Tsu_VOqEeSKJZkEFL8Tcg" type="_0G1-qVOqEeSKJZkEFL8Tcg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0Tsu_lOqEeSKJZkEFL8Tcg" value="*"/>
        </ownedParameter>
        <language>java</language>
        <body>return laserFieldsArray;&#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0Tsu_1OqEeSKJZkEFL8Tcg" name="getThreatenStone" specification="_0G_InlOqEeSKJZkEFL8Tcg">
        <ownedParameter xmi:id="_0TsvAFOqEeSKJZkEFL8Tcg" name="player">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
        <ownedParameter xmi:id="_0TsvAVOqEeSKJZkEFL8Tcg" type="_0G1-oFOqEeSKJZkEFL8Tcg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0TsvAlOqEeSKJZkEFL8Tcg" value="*"/>
        </ownedParameter>
        <language>java</language>
        <body>if (player != RED &amp;&amp; player != BLUE)&#xD;
			return null;&#xD;
&#xD;
		// reset list of threatened stones&#xD;
		threaten = new ArrayList&lt;ThreatenStone>();&#xD;
		// reset list of fields filled with lasers&#xD;
		laserFields = new ArrayList&lt;LaserField>();&#xD;
&#xD;
		/*&#xD;
		 * If that square contains one of the player's pieces, look at a possible move in each of the four directions from that square. If there is a legal move&#xD;
		 * in that direction, put it in the moves ArrayList.&#xD;
		 */&#xD;
&#xD;
		// hold lasers for fields that may or may not actually be full of lasers&#xD;
		ArrayList&lt;LaserField> potentialLaserFields;&#xD;
		// termination variable for each analysis of threatened stones&#xD;
		boolean laserEndpointFound = false;&#xD;
		// range variable for laser&#xD;
		int range = 0;&#xD;
&#xD;
		// for every stone on the board&#xD;
		for (int row = 0; row &lt; 10; row++) {&#xD;
			for (int col = 0; col &lt; 10; col++) {&#xD;
				// that belongs to the current player&#xD;
				if (board[row][col] == player) {&#xD;
					// reset laser range for every new stone&#xD;
					range = 0;&#xD;
					// reset final laser position for every new stone&#xD;
					laserEndpointFound = false;&#xD;
					// reset list of potential laser for each new stone&#xD;
					potentialLaserFields = new ArrayList&lt;LaserField>();&#xD;
&#xD;
					// if there is stone below this one owned by the player in question (to form a combo with)&#xD;
					if (row + 1 &lt; 10 &amp;&amp; pieceAt(row + 1, col) == player) {&#xD;
						// evaluate the combo's threat&#xD;
						range = ((fieldvalue[row][col]) + (fieldvalue[row + 1][col]));&#xD;
						// go all the way to maximum range, unless end point is found&#xD;
						for (int i = 1; i &lt;= range &amp;&amp; laserEndpointFound == false; i++) {&#xD;
							// if this is still on the board&#xD;
							if (onBoard((row + 1) + i, col)) {&#xD;
								// and there is no stone here&#xD;
								if (pieceAt((row + 1) + i, col) == EMPTY) {&#xD;
									// then add this field to potential lasers&#xD;
									potentialLaserFields.add(new LaserField((row + 1 + i), col, &quot;vertical&quot;));&#xD;
									// if there is a piece there, though&#xD;
								} else if (pieceAt((row + 1) + i, col) != EMPTY) {&#xD;
									// then this is where we stop looking&#xD;
									laserEndpointFound = true;&#xD;
									// if that piece belongs to the other player&#xD;
									if (canTakeThreatenStone(player, (row + 1) + i, col)) {&#xD;
										// then add it to the list of threatened stones&#xD;
										threaten.add(new ThreatenStone((row + 1) + i, col));&#xD;
										// and add all potential lasers to the list of definite lasers&#xD;
										laserFields.addAll(potentialLaserFields);&#xD;
									}&#xD;
&#xD;
								}&#xD;
							}&#xD;
						}&#xD;
					}&#xD;
					// same as above but for horizontal to the right&#xD;
					if (col + 1 &lt; 10 &amp;&amp; pieceAt(row, col + 1) == player) {&#xD;
						range = ((fieldvalue[row][col]) + (fieldvalue[row][col + 1]));&#xD;
						for (int i = 1; i &lt;= range &amp;&amp; laserEndpointFound == false; i++) {&#xD;
							if (onBoard(row, (col + 1) + i)) {&#xD;
								if (pieceAt(row, (col + 1) + i) == EMPTY) {&#xD;
									potentialLaserFields.add(new LaserField(row, (col + i + 1), &quot;horizontal&quot;));&#xD;
								} else if (pieceAt(row, (col + 1) + i) != EMPTY) {&#xD;
									laserEndpointFound = true;&#xD;
&#xD;
									if (canTakeThreatenStone(player, row, (col + 1) + i)) {&#xD;
										threaten.add(new ThreatenStone(row, (col + 1) + i));&#xD;
										laserFields.addAll(potentialLaserFields);&#xD;
									}&#xD;
								}&#xD;
&#xD;
							}&#xD;
						}&#xD;
					}&#xD;
					// same as above but for diagonal from top left to bottom right&#xD;
					if (row + 1 &lt; 10 &amp;&amp; col + 1 &lt; 10 &amp;&amp; pieceAt(row + 1, col + 1) == player) {&#xD;
						range = ((fieldvalue[row][col]) + (fieldvalue[row + 1][col + 1]));&#xD;
						for (int i = 1; i &lt;= range &amp;&amp; laserEndpointFound == false; i++) {&#xD;
							if (onBoard((row + 1) + i, (col + 1) + i)) {&#xD;
								if (pieceAt((row + 1) + i, (col + 1) + i) == EMPTY) {&#xD;
									potentialLaserFields.add(new LaserField((row + 1 + i), (col + i + 1), &quot;diagonalNW&quot;));&#xD;
								} else if (pieceAt((row + 1) + i, (col + 1) + i) != EMPTY) {&#xD;
									laserEndpointFound = true;&#xD;
									if (canTakeThreatenStone(player, (row + 1) + i, (col + 1) + i)) {&#xD;
										threaten.add(new ThreatenStone((row + 1) + i, (col + 1) + i));&#xD;
										laserFields.addAll(potentialLaserFields);&#xD;
									}&#xD;
&#xD;
								}&#xD;
							}&#xD;
						}&#xD;
					}&#xD;
					// same as above but for NE diagonal&#xD;
					if (row + 1 &lt; 10 &amp;&amp; col - 1 >= 0 &amp;&amp; pieceAt(row + 1, col - 1) == player) {&#xD;
						range = ((fieldvalue[row][col]) + (fieldvalue[row + 1][col - 1]));&#xD;
						for (int i = 1; i &lt;= range &amp;&amp; laserEndpointFound == false; i++) {&#xD;
							if (onBoard((row + 1) + i, (col - 1) - i)) {&#xD;
								if (pieceAt((row + 1) + i, (col - 1) - i) == EMPTY) {&#xD;
									potentialLaserFields.add(new LaserField((row + 1 + i), (col - i - 1), &quot;diagonalNE&quot;));&#xD;
								} else if (pieceAt((row + 1) + i, (col - 1) - i) != EMPTY) {&#xD;
									laserEndpointFound = true;&#xD;
									if (canTakeThreatenStone(player, (row + 1) + i, (col - 1) - i)) {&#xD;
										threaten.add(new ThreatenStone((row + 1) + i, (col - 1) - i));&#xD;
										laserFields.addAll(potentialLaserFields);&#xD;
									}&#xD;
								}&#xD;
							}&#xD;
						}&#xD;
					}&#xD;
					// NE diagonal in the other direction&#xD;
					if (row - 1 >= 0 &amp;&amp; col + 1 &lt; 10 &amp;&amp; pieceAt((row - 1), (col + 1)) == player) {&#xD;
						range = ((fieldvalue[row][col]) + (fieldvalue[row - 1][col + 1]));&#xD;
						for (int i = 1; i &lt;= range &amp;&amp; laserEndpointFound == false; i++) {&#xD;
							if (onBoard((row - 1) - i, (col + 1) + i)) {&#xD;
								if (pieceAt((row - 1) - i, (col + 1) + i) == EMPTY) {&#xD;
									potentialLaserFields.add(new LaserField((row - 1 - i), (col + i + 1), &quot;diagonalNE&quot;));&#xD;
								} else if (pieceAt((row - 1) - i, (col + 1) + i) != EMPTY) {&#xD;
									laserEndpointFound = true;&#xD;
									if (canTakeThreatenStone(player, (row - 1) - i, (col + 1) + i)) {&#xD;
										threaten.add(new ThreatenStone((row - 1) - i, (col + 1) + i));&#xD;
										laserFields.addAll(potentialLaserFields);&#xD;
									}&#xD;
&#xD;
								}&#xD;
							}&#xD;
						}&#xD;
					}&#xD;
					// same as above but vertically upwards&#xD;
					if (row - 1 >= 0 &amp;&amp; pieceAt(row - 1, col) == player) {&#xD;
						range = ((fieldvalue[row][col]) + (fieldvalue[row - 1][col]));&#xD;
						for (int i = 1; i &lt;= range &amp;&amp; laserEndpointFound == false; i++) {&#xD;
							if (onBoard((row - 1) - i, col)) {&#xD;
								if (pieceAt((row - 1) - i, col) == EMPTY) {&#xD;
									potentialLaserFields.add(new LaserField((row - 1 - i), col, &quot;vertical&quot;));&#xD;
								} else if (pieceAt((row - 1) - i, col) != EMPTY) {&#xD;
									laserEndpointFound = true;&#xD;
									if (canTakeThreatenStone(player, (row - 1) - i, col)) {&#xD;
										threaten.add(new ThreatenStone((row - 1) - i, col));&#xD;
										laserFields.addAll(potentialLaserFields);&#xD;
									}&#xD;
&#xD;
								}&#xD;
							}&#xD;
						}&#xD;
					}&#xD;
					// same as above but horizontally to the left&#xD;
					if (col - 1 >= 0 &amp;&amp; pieceAt(row, col - 1) == player) {&#xD;
						range = ((fieldvalue[row][col]) + (fieldvalue[row][col - 1]));&#xD;
						for (int i = 1; i &lt;= range &amp;&amp; laserEndpointFound == false; i++) {&#xD;
							if (onBoard(row, (col - 1) - i)) {&#xD;
								if (pieceAt(row, (col - 1) - i) == EMPTY) {&#xD;
									potentialLaserFields.add(new LaserField(row, (col - 1 - i), &quot;horizontal&quot;));&#xD;
								} else if (pieceAt(row, (col - 1) - i) != EMPTY) {&#xD;
									laserEndpointFound = true;&#xD;
									if (canTakeThreatenStone(player, row, (col - 1) - i)) {&#xD;
										threaten.add(new ThreatenStone(row, (col - 1) - i));&#xD;
										laserFields.addAll(potentialLaserFields);&#xD;
									}&#xD;
&#xD;
								}&#xD;
							}&#xD;
						}&#xD;
					}&#xD;
					// same as above but diagonally from bottom right to top left&#xD;
					if (row - 1 >= 0 &amp;&amp; col - 1 >= 0 &amp;&amp; pieceAt(row - 1, col - 1) == player) {&#xD;
						range = ((fieldvalue[row][col]) + (fieldvalue[row - 1][col - 1]));&#xD;
						for (int i = 1; i &lt;= range &amp;&amp; laserEndpointFound == false; i++) {&#xD;
							if (onBoard((row - 1) - i, (col - 1) - i)) {&#xD;
								if (pieceAt((row - 1) - i, (col - 1) - i) == EMPTY) {&#xD;
									potentialLaserFields.add(new LaserField((row - 1 - i), (col - 1 - i), &quot;diagonalNW&quot;));&#xD;
								} else if (pieceAt((row - 1) - i, (col - 1) - i) != EMPTY) {&#xD;
									laserEndpointFound = true;&#xD;
									if (canTakeThreatenStone(player, (row - 1) - i, (col - 1) - i)) {&#xD;
										threaten.add(new ThreatenStone((row - 1) - i, (col - 1) - i));&#xD;
										laserFields.addAll(potentialLaserFields);&#xD;
									}&#xD;
&#xD;
								}&#xD;
							}&#xD;
						}&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
&#xD;
		// check for overloaded stones&#xD;
		// a stone is overloaded, when it is part of more than one potentially threatening combination&#xD;
&#xD;
		// for every position on the board&#xD;
		for (int row = 0; row &lt; 10; row++) {&#xD;
			for (int col = 0; col &lt; 10; col++) {&#xD;
				// if there is a stone there that belongs to the other play&#xD;
				if (board[row][col] != player &amp;&amp; board[row][col] != EMPTY) {&#xD;
					// reset counter for amount of stones nearby&#xD;
					int stonesOwnedInProximity = 0;&#xD;
					// check top left position for a stone of the same kind&#xD;
					if (onBoard(row - 1, col - 1) &amp;&amp; board[row - 1][col - 1] != player &amp;&amp; board[row - 1][col - 1] != EMPTY) {&#xD;
						// increment counter for nearby stones&#xD;
						stonesOwnedInProximity++;&#xD;
					}&#xD;
					// top&#xD;
					if (onBoard(row - 1, col) &amp;&amp; board[row - 1][col] != player &amp;&amp; board[row - 1][col] != EMPTY) {&#xD;
						stonesOwnedInProximity++;&#xD;
					}&#xD;
					// top right&#xD;
					if (onBoard(row - 1, col + 1) &amp;&amp; board[row - 1][col + 1] != player &amp;&amp; board[row - 1][col + 1] != EMPTY) {&#xD;
						stonesOwnedInProximity++;&#xD;
					}&#xD;
					// left&#xD;
					if (onBoard(row, col - 1) &amp;&amp; board[row][col - 1] != player &amp;&amp; board[row][col - 1] != EMPTY) {&#xD;
						stonesOwnedInProximity++;&#xD;
					}&#xD;
					// right&#xD;
					if (onBoard(row, col + 1) &amp;&amp; board[row][col + 1] != player &amp;&amp; board[row][col + 1] != EMPTY) {&#xD;
						stonesOwnedInProximity++;&#xD;
					}&#xD;
					// bottom left&#xD;
					if (onBoard(row + 1, col - 1) &amp;&amp; board[row + 1][col - 1] != player &amp;&amp; board[row + 1][col - 1] != EMPTY) {&#xD;
						stonesOwnedInProximity++;&#xD;
					}&#xD;
					// bottom&#xD;
					if (onBoard(row + 1, col) &amp;&amp; board[row + 1][col] != player &amp;&amp; board[row + 1][col] != EMPTY) {&#xD;
						stonesOwnedInProximity++;&#xD;
					}&#xD;
					// bottom right&#xD;
					if (onBoard(row + 1, col + 1) &amp;&amp; board[row + 1][col + 1] != player &amp;&amp; board[row + 1][col + 1] != EMPTY) {&#xD;
						stonesOwnedInProximity++;&#xD;
					}&#xD;
					// if there are too many nearby stones, IE two overlapping combos&#xD;
					if (stonesOwnedInProximity > 1) {&#xD;
						// make this stone removable&#xD;
						threaten.add(new ThreatenStone((row), (col)));&#xD;
&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
&#xD;
		// fill laserFieldsArray with content.&#xD;
		// because this is done here, make sure to call getThreatenStone before getLaserFields&#xD;
&#xD;
		// if there are no lasers in the list&#xD;
		if (laserFields.size() == 0)&#xD;
			// remove the whole array&#xD;
			laserFieldsArray = null;&#xD;
		// if we do have lasers, however&#xD;
		else {&#xD;
			// write the whole list of lasers into the array&#xD;
			laserFieldsArray = new LaserField[laserFields.size()];&#xD;
			for (int i = 0; i &lt; laserFields.size(); i++) {&#xD;
				laserFieldsArray[i] = laserFields.get(i);&#xD;
			}&#xD;
		}&#xD;
&#xD;
		/*&#xD;
		 * If no threatened pieces have been found, return null. Otherwise, create an array just big enough to hold all the threatened pieces, copy these from&#xD;
		 * the ArrayList into the array, and return the array.&#xD;
		 */&#xD;
&#xD;
		// just as above, transfer the arraylist into an array&#xD;
		if (threaten.size() == 0)&#xD;
			return null;&#xD;
		else {&#xD;
			ThreatenStone[] threatenArray = new ThreatenStone[threaten.size()];&#xD;
			for (int i = 0; i &lt; threaten.size(); i++) {&#xD;
				threatenArray[i] = threaten.get(i);&#xD;
&#xD;
			}&#xD;
			return threatenArray;&#xD;
		}&#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0TsvA1OqEeSKJZkEFL8Tcg" name="canTakeThreatenStone" specification="_0G_Io1OqEeSKJZkEFL8Tcg">
        <ownedParameter xmi:id="_0TsvBFOqEeSKJZkEFL8Tcg" name="player">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
        <ownedParameter xmi:id="_0TsvBVOqEeSKJZkEFL8Tcg" name="row">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
        <ownedParameter xmi:id="_0TsvBlOqEeSKJZkEFL8Tcg" name="col">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
        <ownedParameter xmi:id="_0TsvB1OqEeSKJZkEFL8Tcg" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedParameter>
        <language>java</language>
        <body>if (board[row][col] != player)&#xD;
			return true; // board[row][col] contains an opponents piece.&#xD;
&#xD;
		return false; // The take is illegal.&#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0TsvCFOqEeSKJZkEFL8Tcg" name="makeMove" specification="_0QbYcFOqEeSKJZkEFL8Tcg">
        <ownedParameter xmi:id="_0TsvCVOqEeSKJZkEFL8Tcg" name="move" type="_0GsNqlOqEeSKJZkEFL8Tcg"/>
        <language>java</language>
        <body>makeMove(move.fromRow, move.fromCol, move.toRow, move.toCol);&#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0TsvClOqEeSKJZkEFL8Tcg" name="makeMove" specification="_0G_IqFOqEeSKJZkEFL8Tcg">
        <ownedParameter xmi:id="_0TsvC1OqEeSKJZkEFL8Tcg" name="fromRow">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
        <ownedParameter xmi:id="_0TsvDFOqEeSKJZkEFL8Tcg" name="fromCol">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
        <ownedParameter xmi:id="_0TsvDVOqEeSKJZkEFL8Tcg" name="toRow">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
        <ownedParameter xmi:id="_0TsvDlOqEeSKJZkEFL8Tcg" name="toCol">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
        <language>java</language>
        <body>board[toRow][toCol] = board[fromRow][fromCol];&#xD;
		board[fromRow][fromCol] = EMPTY;&#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0TsvD1OqEeSKJZkEFL8Tcg" name="getLegalMoves" specification="_0G_IrVOqEeSKJZkEFL8Tcg">
        <ownedParameter xmi:id="_0TsvEFOqEeSKJZkEFL8Tcg" name="player">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
        <ownedParameter xmi:id="_0TsvEVOqEeSKJZkEFL8Tcg" type="_0GsNqlOqEeSKJZkEFL8Tcg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0TsvElOqEeSKJZkEFL8Tcg" value="*"/>
        </ownedParameter>
        <language>java</language>
        <body>if (player != RED &amp;&amp; player != BLUE)&#xD;
			return null;&#xD;
&#xD;
		moves = new ArrayList&lt;KodeKsMove>(); // Moves will be stored in this&#xD;
		// list.&#xD;
&#xD;
		/*&#xD;
		 * If that square contains one of the player's pieces, look at a possible move in each of the four directions from that square. If there is a legal move&#xD;
		 * in that direction, put it in the moves ArrayList.&#xD;
		 */&#xD;
&#xD;
		if (moves.size() == 0) {&#xD;
			for (int row = 0; row &lt; 10; row++) {&#xD;
				for (int col = 0; col &lt; 10; col++) {&#xD;
					if (board[row][col] == player) {&#xD;
						if (canMove(player, row, col, row + (fieldvalue[row][col]), col + (fieldvalue[row][col])))&#xD;
							moves.add(new KodeKsMove(row, col, row + (fieldvalue[row][col]), col + (fieldvalue[row][col])));&#xD;
						if (canMove(player, row, col, row - (fieldvalue[row][col]), col + (fieldvalue[row][col])))&#xD;
							moves.add(new KodeKsMove(row, col, row - (fieldvalue[row][col]), col + (fieldvalue[row][col])));&#xD;
						if (canMove(player, row, col, row + (fieldvalue[row][col]), col - (fieldvalue[row][col])))&#xD;
							moves.add(new KodeKsMove(row, col, row + (fieldvalue[row][col]), col - (fieldvalue[row][col])));&#xD;
						if (canMove(player, row, col, row - (fieldvalue[row][col]), col - (fieldvalue[row][col])))&#xD;
							moves.add(new KodeKsMove(row, col, (row - fieldvalue[row][col]), (col - fieldvalue[row][col])));&#xD;
						if (canMove(player, row, col, (row + fieldvalue[row][col]), col))&#xD;
							moves.add(new KodeKsMove(row, col, row + (fieldvalue[row][col]), col));&#xD;
						if (canMove(player, row, col, row, col + (fieldvalue[row][col])))&#xD;
							moves.add(new KodeKsMove(row, col, row, col + (fieldvalue[row][col])));&#xD;
						if (canMove(player, row, col, row - (fieldvalue[row][col]), col))&#xD;
							moves.add(new KodeKsMove(row, col, row - (fieldvalue[row][col]), col));&#xD;
						if (canMove(player, row, col, row, col - (fieldvalue[row][col])))&#xD;
							moves.add(new KodeKsMove(row, col, row, col - (fieldvalue[row][col])));&#xD;
						if (fieldvalue[row][col] == 4)&#xD;
							for (int i = 1; i &lt; 4; i++) {&#xD;
								if (canMove(player, row, col, row + ((fieldvalue[row][col]) - i), col + ((fieldvalue[row][col]) - i)))&#xD;
									moves.add(new KodeKsMove(row, col, row + (fieldvalue[row][col]) - i, col + ((fieldvalue[row][col]) - i)));&#xD;
								if (canMove(player, row, col, row - ((fieldvalue[row][col]) - i), col + ((fieldvalue[row][col]) - i)))&#xD;
									moves.add(new KodeKsMove(row, col, row - ((fieldvalue[row][col]) - i), col + ((fieldvalue[row][col]) - i)));&#xD;
								if (canMove(player, row, col, row + ((fieldvalue[row][col]) - i), col - ((fieldvalue[row][col]) - i)))&#xD;
									moves.add(new KodeKsMove(row, col, row + ((fieldvalue[row][col]) - i), col - ((fieldvalue[row][col]) - i)));&#xD;
								if (canMove(player, row, col, row - ((fieldvalue[row][col]) - i), col - ((fieldvalue[row][col]) - i)))&#xD;
									moves.add(new KodeKsMove(row, col, row - ((fieldvalue[row][col]) - i), col - ((fieldvalue[row][col]) - i)));&#xD;
								if (canMove(player, row, col, row + ((fieldvalue[row][col]) - i), col))&#xD;
									moves.add(new KodeKsMove(row, col, row + ((fieldvalue[row][col]) - i), col));&#xD;
								if (canMove(player, row, col, row, col + ((fieldvalue[row][col]) - i)))&#xD;
									moves.add(new KodeKsMove(row, col, row, col + ((fieldvalue[row][col]) - i)));&#xD;
								if (canMove(player, row, col, row - ((fieldvalue[row][col]) - i), col))&#xD;
									moves.add(new KodeKsMove(row, col, row - ((fieldvalue[row][col]) - i), col));&#xD;
								if (canMove(player, row, col, row, col - ((fieldvalue[row][col]) - i)))&#xD;
									moves.add(new KodeKsMove(row, col, row, col - ((fieldvalue[row][col]) - i)));&#xD;
							}&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
&#xD;
		/*&#xD;
		 * If no legal moves have been found, return null. Otherwise, create an array just big enough to hold all the legal moves, copy the legal moves from the&#xD;
		 * ArrayList into the array, and return the array.&#xD;
		 */&#xD;
&#xD;
		if (moves.size() == 0)&#xD;
			return null;&#xD;
		else {&#xD;
			KodeKsMove[] moveArray = new KodeKsMove[moves.size()];&#xD;
			for (int i = 0; i &lt; moves.size(); i++)&#xD;
				moveArray[i] = moves.get(i);&#xD;
			return moveArray;&#xD;
		}&#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0TsvE1OqEeSKJZkEFL8Tcg" name="canMove" specification="_0HI5kFOqEeSKJZkEFL8Tcg">
        <ownedParameter xmi:id="_0TsvFFOqEeSKJZkEFL8Tcg" name="player">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
        <ownedParameter xmi:id="_0TsvFVOqEeSKJZkEFL8Tcg" name="r1">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
        <ownedParameter xmi:id="_0TsvFlOqEeSKJZkEFL8Tcg" name="c1">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
        <ownedParameter xmi:id="_0TsvF1OqEeSKJZkEFL8Tcg" name="r2">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
        <ownedParameter xmi:id="_0TsvGFOqEeSKJZkEFL8Tcg" name="c2">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
        <ownedParameter xmi:id="_0TsvGVOqEeSKJZkEFL8Tcg" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedParameter>
        <language>java</language>
        <body>if (r2 &lt; 0 || r2 >= 10 || c2 &lt; 0 || c2 >= 10)&#xD;
			return false; // (r2,c2) is off the board.&#xD;
&#xD;
		if (board[r2][c2] != EMPTY)&#xD;
			return false; // (r2,c2) already contains a piece.&#xD;
&#xD;
		return true; // The move is legal.&#xD;
	</body>
      </ownedBehavior>
      <ownedOperation xmi:id="_0G1-s1OqEeSKJZkEFL8Tcg" name="KodeKsData" method="_0Tsu6VOqEeSKJZkEFL8Tcg">
        <eAnnotations xmi:id="_0G1-tFOqEeSKJZkEFL8Tcg" source="http://www.eclipse.org/uml2/2.0.0/UML">
          <details xmi:id="_0G1-tVOqEeSKJZkEFL8Tcg" key="create"/>
        </eAnnotations>
        <ownedComment xmi:id="_0UAQ-1OqEeSKJZkEFL8Tcg">
          <body>Constructor. Create the board and set it up for a new game.</body>
        </ownedComment>
        <ownedParameter xmi:id="_0G1-tlOqEeSKJZkEFL8Tcg" type="_0GsNqVOqEeSKJZkEFL8Tcg" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_0G1-t1OqEeSKJZkEFL8Tcg" name="setUpGame" visibility="package" method="_0Tsu61OqEeSKJZkEFL8Tcg">
        <ownedComment xmi:id="_0UAQ_FOqEeSKJZkEFL8Tcg">
          <body>Set up the board with KodeKs in position for the beginning of a game.</body>
        </ownedComment>
      </ownedOperation>
      <ownedOperation xmi:id="_0G1-uFOqEeSKJZkEFL8Tcg" name="pieceAt" visibility="package" method="_0Tsu7FOqEeSKJZkEFL8Tcg">
        <ownedComment xmi:id="_0UAQ_VOqEeSKJZkEFL8Tcg">
          <body>Return the contents of the square in the specified row and column.&#xD;
	 * &#xD;
	 * @param row&#xD;
	 *            - int&#xD;
	 * @param col&#xD;
	 *            - int&#xD;
	 * @return</body>
        </ownedComment>
        <ownedParameter xmi:id="_0G1-uVOqEeSKJZkEFL8Tcg" name="row">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
        <ownedParameter xmi:id="_0G1-ulOqEeSKJZkEFL8Tcg" name="col">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
        <ownedParameter xmi:id="_0G1-u1OqEeSKJZkEFL8Tcg" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_0G_IkFOqEeSKJZkEFL8Tcg" name="getNumberOfStones" visibility="package" method="_0Tsu8FOqEeSKJZkEFL8Tcg">
        <ownedComment xmi:id="_0UAQ_lOqEeSKJZkEFL8Tcg">
          <body>Returns the number of left pieces of the player on the current board.&#xD;
	 * &#xD;
	 * @param player&#xD;
	 *            - int&#xD;
	 * @return sum of left pieces on the board</body>
        </ownedComment>
        <ownedParameter xmi:id="_0G_IkVOqEeSKJZkEFL8Tcg" name="player">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
        <ownedParameter xmi:id="_0G_IklOqEeSKJZkEFL8Tcg" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_0G_Ik1OqEeSKJZkEFL8Tcg" name="onBoard" method="_0Tsu81OqEeSKJZkEFL8Tcg">
        <ownedComment xmi:id="_0UAQ_1OqEeSKJZkEFL8Tcg">
          <body>Method to check if a position is on or beside the board&#xD;
	 * &#xD;
	 * @param row&#xD;
	 *            - int&#xD;
	 * @param col&#xD;
	 *            - int&#xD;
	 * @return boolean - true or false</body>
        </ownedComment>
        <ownedParameter xmi:id="_0G_IlFOqEeSKJZkEFL8Tcg" name="row">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
        <ownedParameter xmi:id="_0G_IlVOqEeSKJZkEFL8Tcg" name="col">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
        <ownedParameter xmi:id="_0G_IllOqEeSKJZkEFL8Tcg" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_0G_Il1OqEeSKJZkEFL8Tcg" name="takeStone" visibility="package" method="_0Tsu-VOqEeSKJZkEFL8Tcg">
        <ownedComment xmi:id="_0UARAVOqEeSKJZkEFL8Tcg">
          <body>Take the opponents stone. It is assumed that the stone can be taken. and put it on the panel beside the board&#xD;
	 * &#xD;
	 * @param row&#xD;
	 *            - int&#xD;
	 * @param col&#xD;
	 *            - int</body>
        </ownedComment>
        <ownedParameter xmi:id="_0G_ImFOqEeSKJZkEFL8Tcg" name="row">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
        <ownedParameter xmi:id="_0G_ImVOqEeSKJZkEFL8Tcg" name="col">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_0G_ImlOqEeSKJZkEFL8Tcg" name="getLaserFields" visibility="package" method="_0Tsu_FOqEeSKJZkEFL8Tcg">
        <ownedParameter xmi:id="_0G_Im1OqEeSKJZkEFL8Tcg" type="_0G1-qVOqEeSKJZkEFL8Tcg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0G_InFOqEeSKJZkEFL8Tcg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_0G_InlOqEeSKJZkEFL8Tcg" name="getThreatenStone" visibility="package" method="_0Tsu_1OqEeSKJZkEFL8Tcg">
        <ownedComment xmi:id="_0UARAlOqEeSKJZkEFL8Tcg">
          <body>Return an array containing all the threaten stones for the opponent player on the current board. If the player isn't threatening an opponents piece, null&#xD;
	 * is returned.&#xD;
	 * &#xD;
	 * @param player&#xD;
	 *            - int The value of player should be one of the constants RED or BLUE&#xD;
	 * @return ArrayList of threatened pieces of the other player</body>
        </ownedComment>
        <ownedParameter xmi:id="_0G_In1OqEeSKJZkEFL8Tcg" name="player">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
        <ownedParameter xmi:id="_0G_IoFOqEeSKJZkEFL8Tcg" type="_0G1-oFOqEeSKJZkEFL8Tcg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0G_IoVOqEeSKJZkEFL8Tcg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_0G_Io1OqEeSKJZkEFL8Tcg" name="canTakeThreatenStone" visibility="private" method="_0TsvA1OqEeSKJZkEFL8Tcg">
        <ownedComment xmi:id="_0UARA1OqEeSKJZkEFL8Tcg">
          <body>This is called by the getThreatenStone() method to determine whether the player can take an opponents stone from (row,col). It is assumed that (row,col)&#xD;
	 * contains a stone. So if the stone is an enemy's, it can be taken.&#xD;
	 * &#xD;
	 * @param player&#xD;
	 *            - int&#xD;
	 * @param row&#xD;
	 *            - int&#xD;
	 * @param col&#xD;
	 *            - int</body>
        </ownedComment>
        <ownedParameter xmi:id="_0G_IpFOqEeSKJZkEFL8Tcg" name="player">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
        <ownedParameter xmi:id="_0G_IpVOqEeSKJZkEFL8Tcg" name="row">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
        <ownedParameter xmi:id="_0G_IplOqEeSKJZkEFL8Tcg" name="col">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
        <ownedParameter xmi:id="_0G_Ip1OqEeSKJZkEFL8Tcg" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_0G_IqFOqEeSKJZkEFL8Tcg" name="makeMove" visibility="package" method="_0TsvClOqEeSKJZkEFL8Tcg">
        <ownedComment xmi:id="_0UARBVOqEeSKJZkEFL8Tcg">
          <body>Make the move from (fromRow,fromCol) to (toRow,toCol). It is assumed that this move is legal.&#xD;
	 * &#xD;
	 * @param fromRow&#xD;
	 *            - int&#xD;
	 * @param fromCol&#xD;
	 *            - int&#xD;
	 * @param toRow&#xD;
	 *            - int&#xD;
	 * @param toCol&#xD;
	 *            - int</body>
        </ownedComment>
        <ownedParameter xmi:id="_0G_IqVOqEeSKJZkEFL8Tcg" name="fromRow">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
        <ownedParameter xmi:id="_0G_IqlOqEeSKJZkEFL8Tcg" name="fromCol">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
        <ownedParameter xmi:id="_0G_Iq1OqEeSKJZkEFL8Tcg" name="toRow">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
        <ownedParameter xmi:id="_0G_IrFOqEeSKJZkEFL8Tcg" name="toCol">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_0G_IrVOqEeSKJZkEFL8Tcg" name="getLegalMoves" visibility="package" method="_0TsvD1OqEeSKJZkEFL8Tcg">
        <ownedComment xmi:id="_0UARBlOqEeSKJZkEFL8Tcg">
          <body>Return an array containing all the legal KodeKsMoves for the specified player on the current board. If the player has no legal moves, null is returned.&#xD;
	 * &#xD;
	 * @param player&#xD;
	 *            - int The value of player should be one of the constants RED or BLUE&#xD;
	 * @return ArrayList of legal moves of the current player</body>
        </ownedComment>
        <ownedParameter xmi:id="_0G_IrlOqEeSKJZkEFL8Tcg" name="player">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
        <ownedParameter xmi:id="_0G_Ir1OqEeSKJZkEFL8Tcg" type="_0GsNqlOqEeSKJZkEFL8Tcg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0G_IsFOqEeSKJZkEFL8Tcg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_0HI5kFOqEeSKJZkEFL8Tcg" name="canMove" visibility="private" method="_0TsvE1OqEeSKJZkEFL8Tcg">
        <ownedComment xmi:id="_0UARB1OqEeSKJZkEFL8Tcg">
          <body>* This is called by the getLegalMoves() method to determine whether the player can legally move from (r1,c1) to (r2,c2). It is assumed that (r1,r2)&#xD;
	 * contains one of the player's pieces and that (r2,c2) is a neighboring square.&#xD;
	 * &#xD;
	 * @param player&#xD;
	 *            - int&#xD;
	 * @param r1&#xD;
	 *            - int&#xD;
	 * @param c1&#xD;
	 *            - int&#xD;
	 * @param r2&#xD;
	 *            - int&#xD;
	 * @param c2&#xD;
	 *            - int&#xD;
	 * @return</body>
        </ownedComment>
        <ownedParameter xmi:id="_0HI5kVOqEeSKJZkEFL8Tcg" name="player">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
        <ownedParameter xmi:id="_0HI5klOqEeSKJZkEFL8Tcg" name="r1">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
        <ownedParameter xmi:id="_0HI5k1OqEeSKJZkEFL8Tcg" name="c1">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
        <ownedParameter xmi:id="_0HI5lFOqEeSKJZkEFL8Tcg" name="r2">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
        <ownedParameter xmi:id="_0HI5lVOqEeSKJZkEFL8Tcg" name="c2">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
        <ownedParameter xmi:id="_0HI5llOqEeSKJZkEFL8Tcg" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_0QaKUFOqEeSKJZkEFL8Tcg" name="takeStone" visibility="package" method="_0Tsu91OqEeSKJZkEFL8Tcg">
        <ownedComment xmi:id="_0UARAFOqEeSKJZkEFL8Tcg">
          <body>* Take a specified threaten Stone of the opponent&#xD;
	 * &#xD;
	 * @param take&#xD;
	 *            - ThreatenStone</body>
        </ownedComment>
        <ownedParameter xmi:id="_0QaxYFOqEeSKJZkEFL8Tcg" name="take" type="_0G1-oFOqEeSKJZkEFL8Tcg"/>
      </ownedOperation>
      <ownedOperation xmi:id="_0QbYcFOqEeSKJZkEFL8Tcg" name="makeMove" visibility="package" method="_0TsvCFOqEeSKJZkEFL8Tcg">
        <ownedComment xmi:id="_0UARBFOqEeSKJZkEFL8Tcg">
          <body>Make the specified move. It is assumed that move is non-null and that the move it represents is legal.&#xD;
	 * &#xD;
	 * @param move&#xD;
	 *            - KodeKsMove</body>
        </ownedComment>
        <ownedParameter xmi:id="_0QbYcVOqEeSKJZkEFL8Tcg" name="move" type="_0GsNqlOqEeSKJZkEFL8Tcg"/>
      </ownedOperation>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_0GsNqlOqEeSKJZkEFL8Tcg" clientDependency="_0Rw1P1OqEeSKJZkEFL8Tcg" name="KodeKsMove">
        <eAnnotations xmi:id="_0GsNq1OqEeSKJZkEFL8Tcg" source="http://www.eclipse.org/uml2/2.0.0/UML">
          <details xmi:id="_0GsNrFOqEeSKJZkEFL8Tcg" key="static"/>
        </eAnnotations>
        <ownedComment xmi:id="_0UAQ5VOqEeSKJZkEFL8Tcg">
          <body>A KodeKsMove object represents a move in the game of KodeKs. It holds the row and column of the piece that is to be moved and the row and column of the&#xD;
	 * square to which it is to be moved. (This class makes no guarantee that the move is legal.)&#xD;
	 *</body>
        </ownedComment>
        <ownedAttribute xmi:id="_0TG5GFOqEeSKJZkEFL8Tcg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_0TG5GVOqEeSKJZkEFL8Tcg" value="1L"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_0TG5GlOqEeSKJZkEFL8Tcg" name="fromRow" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_0TG5HVOqEeSKJZkEFL8Tcg" name="toRow" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_0UAQ5lOqEeSKJZkEFL8Tcg" name="fromCol" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_0UAQ6VOqEeSKJZkEFL8Tcg" name="toCol" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <interfaceRealization xmi:id="_0Rw1P1OqEeSKJZkEFL8Tcg" client="_0GsNqlOqEeSKJZkEFL8Tcg" supplier="_0NbHwFOqEeSKJZkEFL8Tcg" contract="_0NbHwFOqEeSKJZkEFL8Tcg"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0TjlNlOqEeSKJZkEFL8Tcg" name="KodeKsMove" specification="_0GsNrVOqEeSKJZkEFL8Tcg">
          <ownedParameter xmi:id="_0TjlN1OqEeSKJZkEFL8Tcg" name="r1">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_0TjlOFOqEeSKJZkEFL8Tcg" name="c1">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_0TjlOVOqEeSKJZkEFL8Tcg" name="r2">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_0TjlOlOqEeSKJZkEFL8Tcg" name="c2">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_0TjlO1OqEeSKJZkEFL8Tcg" type="_0GsNqlOqEeSKJZkEFL8Tcg" direction="return"/>
          <language>java</language>
          <body>// Constructor. Just set the values of the instance variables.&#xD;
			fromRow = r1;&#xD;
			fromCol = c1;&#xD;
			toRow = r2;&#xD;
			toCol = c2;&#xD;
		</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_0GsNrVOqEeSKJZkEFL8Tcg" name="KodeKsMove" visibility="package" method="_0TjlNlOqEeSKJZkEFL8Tcg">
          <eAnnotations xmi:id="_0GsNslOqEeSKJZkEFL8Tcg" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_0GsNs1OqEeSKJZkEFL8Tcg" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_0GsNrlOqEeSKJZkEFL8Tcg" name="r1">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_0GsNr1OqEeSKJZkEFL8Tcg" name="c1">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_0GsNsFOqEeSKJZkEFL8Tcg" name="r2">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_0GsNsVOqEeSKJZkEFL8Tcg" name="c2">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_0GsNtFOqEeSKJZkEFL8Tcg" type="_0GsNqlOqEeSKJZkEFL8Tcg" direction="return"/>
        </ownedOperation>
      </nestedClassifier>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_0G1-oFOqEeSKJZkEFL8Tcg" clientDependency="_0R6mMFOqEeSKJZkEFL8Tcg" name="ThreatenStone">
        <eAnnotations xmi:id="_0G1-oVOqEeSKJZkEFL8Tcg" source="http://www.eclipse.org/uml2/2.0.0/UML">
          <details xmi:id="_0G1-olOqEeSKJZkEFL8Tcg" key="static"/>
        </eAnnotations>
        <ownedComment xmi:id="_0UAQ7FOqEeSKJZkEFL8Tcg">
          <body>A ThreatenStone object represents an opponents piece which can be taken. It holds the row and column of that piece that can be taken by the current&#xD;
	 * player.</body>
        </ownedComment>
        <ownedAttribute xmi:id="_0TQC8FOqEeSKJZkEFL8Tcg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_0TQC8VOqEeSKJZkEFL8Tcg" value="1L"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_0TQC8lOqEeSKJZkEFL8Tcg" name="threatenRow" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_0UAQ7VOqEeSKJZkEFL8Tcg" name="threatenCol" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <interfaceRealization xmi:id="_0R6mMFOqEeSKJZkEFL8Tcg" client="_0G1-oFOqEeSKJZkEFL8Tcg" supplier="_0NbHwFOqEeSKJZkEFL8Tcg" contract="_0NbHwFOqEeSKJZkEFL8Tcg"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0Tsu4FOqEeSKJZkEFL8Tcg" name="ThreatenStone" specification="_0G1-o1OqEeSKJZkEFL8Tcg">
          <ownedParameter xmi:id="_0Tsu4VOqEeSKJZkEFL8Tcg" name="row">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_0Tsu4lOqEeSKJZkEFL8Tcg" name="col">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_0Tsu41OqEeSKJZkEFL8Tcg" type="_0G1-oFOqEeSKJZkEFL8Tcg" direction="return"/>
          <language>java</language>
          <body>// Constructor. Just set the values of the instance variables.&#xD;
			threatenRow = row;&#xD;
			threatenCol = col;&#xD;
		</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_0G1-o1OqEeSKJZkEFL8Tcg" name="ThreatenStone" visibility="package" method="_0Tsu4FOqEeSKJZkEFL8Tcg">
          <eAnnotations xmi:id="_0G1-plOqEeSKJZkEFL8Tcg" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_0G1-p1OqEeSKJZkEFL8Tcg" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_0G1-pFOqEeSKJZkEFL8Tcg" name="row">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_0G1-pVOqEeSKJZkEFL8Tcg" name="col">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_0G1-qFOqEeSKJZkEFL8Tcg" type="_0G1-oFOqEeSKJZkEFL8Tcg" direction="return"/>
        </ownedOperation>
      </nestedClassifier>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_0G1-qVOqEeSKJZkEFL8Tcg" clientDependency="_0R6mMVOqEeSKJZkEFL8Tcg" name="LaserField">
        <eAnnotations xmi:id="_0G1-qlOqEeSKJZkEFL8Tcg" source="http://www.eclipse.org/uml2/2.0.0/UML">
          <details xmi:id="_0G1-q1OqEeSKJZkEFL8Tcg" key="static"/>
        </eAnnotations>
        <ownedAttribute xmi:id="_0TQC9VOqEeSKJZkEFL8Tcg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_0TQC9lOqEeSKJZkEFL8Tcg" value="1L"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_0TQC91OqEeSKJZkEFL8Tcg" name="row" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_0TQC-lOqEeSKJZkEFL8Tcg" name="orientation" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_0UAQ8FOqEeSKJZkEFL8Tcg" name="column" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <interfaceRealization xmi:id="_0R6mMVOqEeSKJZkEFL8Tcg" client="_0G1-qVOqEeSKJZkEFL8Tcg" supplier="_0NbHwFOqEeSKJZkEFL8Tcg" contract="_0NbHwFOqEeSKJZkEFL8Tcg"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0Tsu5FOqEeSKJZkEFL8Tcg" name="LaserField" specification="_0G1-rFOqEeSKJZkEFL8Tcg">
          <ownedParameter xmi:id="_0Tsu5VOqEeSKJZkEFL8Tcg" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_0Tsu5lOqEeSKJZkEFL8Tcg" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_0Tsu51OqEeSKJZkEFL8Tcg" name="z">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_0Tsu6FOqEeSKJZkEFL8Tcg" type="_0G1-qVOqEeSKJZkEFL8Tcg" direction="return"/>
          <language>java</language>
          <body>row = x;&#xD;
			column = y;&#xD;
			orientation = z;&#xD;
		</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_0G1-rFOqEeSKJZkEFL8Tcg" name="LaserField" visibility="package" method="_0Tsu5FOqEeSKJZkEFL8Tcg">
          <eAnnotations xmi:id="_0G1-sFOqEeSKJZkEFL8Tcg" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_0G1-sVOqEeSKJZkEFL8Tcg" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_0G1-rVOqEeSKJZkEFL8Tcg" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_0G1-rlOqEeSKJZkEFL8Tcg" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_0G1-r1OqEeSKJZkEFL8Tcg" name="z">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_0G1-slOqEeSKJZkEFL8Tcg" type="_0G1-qVOqEeSKJZkEFL8Tcg" direction="return"/>
        </ownedOperation>
      </nestedClassifier>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_0UcVwFOqEeSKJZkEFL8Tcg" name="" memberEnd="_0UcVwVOqEeSKJZkEFL8Tcg _0SDwIlOqEeSKJZkEFL8Tcg">
      <ownedEnd xmi:id="_0UcVwVOqEeSKJZkEFL8Tcg" name="" type="_0EwT8FOqEeSKJZkEFL8Tcg" association="_0UcVwFOqEeSKJZkEFL8Tcg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_0UcVw1OqEeSKJZkEFL8Tcg" name="" memberEnd="_0UcVxFOqEeSKJZkEFL8Tcg _0SDwJVOqEeSKJZkEFL8Tcg">
      <ownedEnd xmi:id="_0UcVxFOqEeSKJZkEFL8Tcg" name="" type="_0EwT8FOqEeSKJZkEFL8Tcg" association="_0UcVw1OqEeSKJZkEFL8Tcg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_0UcVxlOqEeSKJZkEFL8Tcg" name="" memberEnd="_0UcVx1OqEeSKJZkEFL8Tcg _0SDwKFOqEeSKJZkEFL8Tcg">
      <ownedEnd xmi:id="_0UcVx1OqEeSKJZkEFL8Tcg" name="" type="_0EwT8FOqEeSKJZkEFL8Tcg" association="_0UcVxlOqEeSKJZkEFL8Tcg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_0UcVyVOqEeSKJZkEFL8Tcg" name="" memberEnd="_0UcVylOqEeSKJZkEFL8Tcg _0SDwK1OqEeSKJZkEFL8Tcg">
      <ownedEnd xmi:id="_0UcVylOqEeSKJZkEFL8Tcg" name="" type="_0EwT8FOqEeSKJZkEFL8Tcg" association="_0UcVyVOqEeSKJZkEFL8Tcg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_0UmGwVOqEeSKJZkEFL8Tcg" name="" memberEnd="_0UmGwlOqEeSKJZkEFL8Tcg _0SDwLlOqEeSKJZkEFL8Tcg">
      <ownedEnd xmi:id="_0UmGwlOqEeSKJZkEFL8Tcg" name="" type="_0EwT8FOqEeSKJZkEFL8Tcg" association="_0UmGwVOqEeSKJZkEFL8Tcg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_0UmGxFOqEeSKJZkEFL8Tcg" name="" memberEnd="_0UmGxVOqEeSKJZkEFL8Tcg _0SDwMVOqEeSKJZkEFL8Tcg">
      <ownedEnd xmi:id="_0UmGxVOqEeSKJZkEFL8Tcg" name="" type="_0EwT8FOqEeSKJZkEFL8Tcg" association="_0UmGxFOqEeSKJZkEFL8Tcg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_0UmGx1OqEeSKJZkEFL8Tcg" name="" memberEnd="_0UmGyFOqEeSKJZkEFL8Tcg _0SDwNFOqEeSKJZkEFL8Tcg">
      <ownedEnd xmi:id="_0UmGyFOqEeSKJZkEFL8Tcg" name="" type="_0EwT8FOqEeSKJZkEFL8Tcg" association="_0UmGx1OqEeSKJZkEFL8Tcg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_0UmGylOqEeSKJZkEFL8Tcg" name="" memberEnd="_0UmGy1OqEeSKJZkEFL8Tcg _0SDwN1OqEeSKJZkEFL8Tcg">
      <ownedEnd xmi:id="_0UmGy1OqEeSKJZkEFL8Tcg" name="" type="_0EwT8FOqEeSKJZkEFL8Tcg" association="_0UmGylOqEeSKJZkEFL8Tcg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_0UmGzVOqEeSKJZkEFL8Tcg" name="" memberEnd="_0UmGzlOqEeSKJZkEFL8Tcg _0SDwOlOqEeSKJZkEFL8Tcg">
      <ownedEnd xmi:id="_0UmGzlOqEeSKJZkEFL8Tcg" name="" type="_0EwT8FOqEeSKJZkEFL8Tcg" association="_0UmGzVOqEeSKJZkEFL8Tcg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_0UmG0FOqEeSKJZkEFL8Tcg" name="" memberEnd="_0UmG0VOqEeSKJZkEFL8Tcg _0SNhIlOqEeSKJZkEFL8Tcg">
      <ownedEnd xmi:id="_0UmG0VOqEeSKJZkEFL8Tcg" name="" type="_0EwT8FOqEeSKJZkEFL8Tcg" association="_0UmG0FOqEeSKJZkEFL8Tcg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_0Uv3wVOqEeSKJZkEFL8Tcg" name="" memberEnd="_0Uv3wlOqEeSKJZkEFL8Tcg _0SNhJVOqEeSKJZkEFL8Tcg">
      <ownedEnd xmi:id="_0Uv3wlOqEeSKJZkEFL8Tcg" name="" type="_0EwT8FOqEeSKJZkEFL8Tcg" association="_0Uv3wVOqEeSKJZkEFL8Tcg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_0Uv3xFOqEeSKJZkEFL8Tcg" name="" memberEnd="_0Uv3xVOqEeSKJZkEFL8Tcg _0SNhKFOqEeSKJZkEFL8Tcg">
      <ownedEnd xmi:id="_0Uv3xVOqEeSKJZkEFL8Tcg" name="" type="_0EwT8FOqEeSKJZkEFL8Tcg" association="_0Uv3xFOqEeSKJZkEFL8Tcg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_0Uv3x1OqEeSKJZkEFL8Tcg" name="" memberEnd="_0Uv3yFOqEeSKJZkEFL8Tcg _0SNhK1OqEeSKJZkEFL8Tcg">
      <ownedEnd xmi:id="_0Uv3yFOqEeSKJZkEFL8Tcg" name="" type="_0EwT8FOqEeSKJZkEFL8Tcg" association="_0Uv3x1OqEeSKJZkEFL8Tcg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_0Uv3ylOqEeSKJZkEFL8Tcg" name="" memberEnd="_0Uv3y1OqEeSKJZkEFL8Tcg _0SNhLlOqEeSKJZkEFL8Tcg">
      <ownedEnd xmi:id="_0Uv3y1OqEeSKJZkEFL8Tcg" name="" type="_0EwT8FOqEeSKJZkEFL8Tcg" association="_0Uv3ylOqEeSKJZkEFL8Tcg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_0Uv3zVOqEeSKJZkEFL8Tcg" name="" memberEnd="_0Uv3zlOqEeSKJZkEFL8Tcg _0SXSI1OqEeSKJZkEFL8Tcg">
      <ownedEnd xmi:id="_0Uv3zlOqEeSKJZkEFL8Tcg" name="" type="_0EwT8FOqEeSKJZkEFL8Tcg" association="_0Uv3zVOqEeSKJZkEFL8Tcg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_0Uv30FOqEeSKJZkEFL8Tcg" name="" memberEnd="_0Uv30VOqEeSKJZkEFL8Tcg _0SXSKFOqEeSKJZkEFL8Tcg">
      <ownedEnd xmi:id="_0Uv30VOqEeSKJZkEFL8Tcg" name="" type="_0E6E8FOqEeSKJZkEFL8Tcg" association="_0Uv30FOqEeSKJZkEFL8Tcg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_0U5BsFOqEeSKJZkEFL8Tcg" name="" memberEnd="_0U5BsVOqEeSKJZkEFL8Tcg _0SXSKlOqEeSKJZkEFL8Tcg">
      <ownedEnd xmi:id="_0U5BsVOqEeSKJZkEFL8Tcg" name="" type="_0E6E8FOqEeSKJZkEFL8Tcg" association="_0U5BsFOqEeSKJZkEFL8Tcg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_0U5Bs1OqEeSKJZkEFL8Tcg" name="" memberEnd="_0U5BtFOqEeSKJZkEFL8Tcg _0SXSLVOqEeSKJZkEFL8Tcg">
      <ownedEnd xmi:id="_0U5BtFOqEeSKJZkEFL8Tcg" name="" type="_0E6E8FOqEeSKJZkEFL8Tcg" association="_0U5Bs1OqEeSKJZkEFL8Tcg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_0U5BtlOqEeSKJZkEFL8Tcg" name="" memberEnd="_0U5Bt1OqEeSKJZkEFL8Tcg _0SXSL1OqEeSKJZkEFL8Tcg">
      <ownedEnd xmi:id="_0U5Bt1OqEeSKJZkEFL8Tcg" name="" type="_0E6E8FOqEeSKJZkEFL8Tcg" association="_0U5BtlOqEeSKJZkEFL8Tcg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_0U5BuVOqEeSKJZkEFL8Tcg" name="" memberEnd="_0U5BulOqEeSKJZkEFL8Tcg _0SXSMVOqEeSKJZkEFL8Tcg">
      <ownedEnd xmi:id="_0U5BulOqEeSKJZkEFL8Tcg" name="" type="_0E6E8FOqEeSKJZkEFL8Tcg" association="_0U5BuVOqEeSKJZkEFL8Tcg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_0U5BvFOqEeSKJZkEFL8Tcg" name="" memberEnd="_0U5BvVOqEeSKJZkEFL8Tcg _0SXSM1OqEeSKJZkEFL8Tcg">
      <ownedEnd xmi:id="_0U5BvVOqEeSKJZkEFL8Tcg" name="" type="_0E6E8FOqEeSKJZkEFL8Tcg" association="_0U5BvFOqEeSKJZkEFL8Tcg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_0U5Bv1OqEeSKJZkEFL8Tcg" name="" memberEnd="_0U5BwFOqEeSKJZkEFL8Tcg _0SXSN1OqEeSKJZkEFL8Tcg">
      <ownedEnd xmi:id="_0U5BwFOqEeSKJZkEFL8Tcg" name="" type="_0FDO5FOqEeSKJZkEFL8Tcg" association="_0U5Bv1OqEeSKJZkEFL8Tcg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_0U5BwlOqEeSKJZkEFL8Tcg" name="" memberEnd="_0U5Bw1OqEeSKJZkEFL8Tcg _0SXSOVOqEeSKJZkEFL8Tcg">
      <ownedEnd xmi:id="_0U5Bw1OqEeSKJZkEFL8Tcg" name="" type="_0FDO5FOqEeSKJZkEFL8Tcg" association="_0U5BwlOqEeSKJZkEFL8Tcg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_0U5BxVOqEeSKJZkEFL8Tcg" name="" memberEnd="_0U5BxlOqEeSKJZkEFL8Tcg _0SXSO1OqEeSKJZkEFL8Tcg">
      <ownedEnd xmi:id="_0U5BxlOqEeSKJZkEFL8Tcg" name="" type="_0FDO5FOqEeSKJZkEFL8Tcg" association="_0U5BxVOqEeSKJZkEFL8Tcg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_0U5ByFOqEeSKJZkEFL8Tcg" name="" memberEnd="_0U5ByVOqEeSKJZkEFL8Tcg _0SXSPVOqEeSKJZkEFL8Tcg">
      <ownedEnd xmi:id="_0U5ByVOqEeSKJZkEFL8Tcg" name="" type="_0FDO5FOqEeSKJZkEFL8Tcg" association="_0U5ByFOqEeSKJZkEFL8Tcg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_0U5By1OqEeSKJZkEFL8Tcg" name="" memberEnd="_0U5BzFOqEeSKJZkEFL8Tcg _0SgcEVOqEeSKJZkEFL8Tcg">
      <ownedEnd xmi:id="_0U5BzFOqEeSKJZkEFL8Tcg" name="" type="_0FDO5FOqEeSKJZkEFL8Tcg" association="_0U5By1OqEeSKJZkEFL8Tcg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_0U5BzlOqEeSKJZkEFL8Tcg" name="" memberEnd="_0U5Bz1OqEeSKJZkEFL8Tcg _0SgcE1OqEeSKJZkEFL8Tcg">
      <ownedEnd xmi:id="_0U5Bz1OqEeSKJZkEFL8Tcg" name="" type="_0FDO5FOqEeSKJZkEFL8Tcg" association="_0U5BzlOqEeSKJZkEFL8Tcg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_0U5B0VOqEeSKJZkEFL8Tcg" name="" memberEnd="_0U5B0lOqEeSKJZkEFL8Tcg _0SgcFVOqEeSKJZkEFL8Tcg">
      <ownedEnd xmi:id="_0U5B0lOqEeSKJZkEFL8Tcg" name="" type="_0FDO5FOqEeSKJZkEFL8Tcg" association="_0U5B0VOqEeSKJZkEFL8Tcg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_0VCysVOqEeSKJZkEFL8Tcg" name="" memberEnd="_0VCyslOqEeSKJZkEFL8Tcg _0SgcGVOqEeSKJZkEFL8Tcg">
      <ownedEnd xmi:id="_0VCyslOqEeSKJZkEFL8Tcg" name="" type="_0FWw4FOqEeSKJZkEFL8Tcg" association="_0VCysVOqEeSKJZkEFL8Tcg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_0VCytFOqEeSKJZkEFL8Tcg" name="" memberEnd="_0VCytVOqEeSKJZkEFL8Tcg _0SgcG1OqEeSKJZkEFL8Tcg">
      <ownedEnd xmi:id="_0VCytVOqEeSKJZkEFL8Tcg" name="" type="_0FWw4FOqEeSKJZkEFL8Tcg" association="_0VCytFOqEeSKJZkEFL8Tcg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_0VCyt1OqEeSKJZkEFL8Tcg" name="" memberEnd="_0VCyuFOqEeSKJZkEFL8Tcg _0SgcIlOqEeSKJZkEFL8Tcg">
      <ownedEnd xmi:id="_0VCyuFOqEeSKJZkEFL8Tcg" name="" type="_0Ff61VOqEeSKJZkEFL8Tcg" association="_0VCyt1OqEeSKJZkEFL8Tcg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_0VCyulOqEeSKJZkEFL8Tcg" name="" memberEnd="_0VCyu1OqEeSKJZkEFL8Tcg _0SgcJFOqEeSKJZkEFL8Tcg">
      <ownedEnd xmi:id="_0VCyu1OqEeSKJZkEFL8Tcg" name="" type="_0Ff61VOqEeSKJZkEFL8Tcg" association="_0VCyulOqEeSKJZkEFL8Tcg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_0VCyvVOqEeSKJZkEFL8Tcg" name="" memberEnd="_0VCyvlOqEeSKJZkEFL8Tcg _0SgcJlOqEeSKJZkEFL8Tcg">
      <ownedEnd xmi:id="_0VCyvlOqEeSKJZkEFL8Tcg" name="" type="_0Ff61VOqEeSKJZkEFL8Tcg" association="_0VCyvVOqEeSKJZkEFL8Tcg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_0VCywFOqEeSKJZkEFL8Tcg" name="" memberEnd="_0VCywVOqEeSKJZkEFL8Tcg _0SgcKFOqEeSKJZkEFL8Tcg">
      <ownedEnd xmi:id="_0VCywVOqEeSKJZkEFL8Tcg" name="" type="_0Ff61VOqEeSKJZkEFL8Tcg" association="_0VCywFOqEeSKJZkEFL8Tcg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_0VCyw1OqEeSKJZkEFL8Tcg" name="" memberEnd="_0VCyxFOqEeSKJZkEFL8Tcg _0SgcKlOqEeSKJZkEFL8Tcg">
      <ownedEnd xmi:id="_0VCyxFOqEeSKJZkEFL8Tcg" name="" type="_0Ff61VOqEeSKJZkEFL8Tcg" association="_0VCyw1OqEeSKJZkEFL8Tcg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_0VCyxlOqEeSKJZkEFL8Tcg" name="" memberEnd="_0VCyx1OqEeSKJZkEFL8Tcg _0SgcLFOqEeSKJZkEFL8Tcg">
      <ownedEnd xmi:id="_0VCyx1OqEeSKJZkEFL8Tcg" name="" type="_0Ff61VOqEeSKJZkEFL8Tcg" association="_0VCyxlOqEeSKJZkEFL8Tcg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_0VCyyVOqEeSKJZkEFL8Tcg" name="" memberEnd="_0VCyylOqEeSKJZkEFL8Tcg _0SqNFFOqEeSKJZkEFL8Tcg">
      <ownedEnd xmi:id="_0VCyylOqEeSKJZkEFL8Tcg" name="" type="_0Ff61VOqEeSKJZkEFL8Tcg" association="_0VCyyVOqEeSKJZkEFL8Tcg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_0VCyzFOqEeSKJZkEFL8Tcg" name="" memberEnd="_0VCyzVOqEeSKJZkEFL8Tcg _0SqNHVOqEeSKJZkEFL8Tcg">
      <ownedEnd xmi:id="_0VCyzVOqEeSKJZkEFL8Tcg" name="" type="_0Ff61VOqEeSKJZkEFL8Tcg" association="_0VCyzFOqEeSKJZkEFL8Tcg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_0VCyz1OqEeSKJZkEFL8Tcg" name="" memberEnd="_0VCy0FOqEeSKJZkEFL8Tcg _0SqNIVOqEeSKJZkEFL8Tcg">
      <ownedEnd xmi:id="_0VCy0FOqEeSKJZkEFL8Tcg" name="" type="_0Ff61VOqEeSKJZkEFL8Tcg" association="_0VCyz1OqEeSKJZkEFL8Tcg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_0VL8oFOqEeSKJZkEFL8Tcg" name="" memberEnd="_0VL8oVOqEeSKJZkEFL8Tcg _0SqNJ1OqEeSKJZkEFL8Tcg">
      <ownedEnd xmi:id="_0VL8oVOqEeSKJZkEFL8Tcg" name="" type="_0Fy1wFOqEeSKJZkEFL8Tcg" association="_0VL8oFOqEeSKJZkEFL8Tcg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_0VL8o1OqEeSKJZkEFL8Tcg" name="" memberEnd="_0VL8pFOqEeSKJZkEFL8Tcg _0SqNKVOqEeSKJZkEFL8Tcg">
      <ownedEnd xmi:id="_0VL8pFOqEeSKJZkEFL8Tcg" name="" type="_0Fy1wFOqEeSKJZkEFL8Tcg" association="_0VL8o1OqEeSKJZkEFL8Tcg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_0VL8plOqEeSKJZkEFL8Tcg" name="" memberEnd="_0VL8p1OqEeSKJZkEFL8Tcg _0SqNK1OqEeSKJZkEFL8Tcg">
      <ownedEnd xmi:id="_0VL8p1OqEeSKJZkEFL8Tcg" name="" type="_0Fy1wFOqEeSKJZkEFL8Tcg" association="_0VL8plOqEeSKJZkEFL8Tcg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_0VL8qVOqEeSKJZkEFL8Tcg" name="" memberEnd="_0VL8qlOqEeSKJZkEFL8Tcg _0SzXAVOqEeSKJZkEFL8Tcg">
      <ownedEnd xmi:id="_0VL8qlOqEeSKJZkEFL8Tcg" name="" type="_0Fy1wFOqEeSKJZkEFL8Tcg" association="_0VL8qVOqEeSKJZkEFL8Tcg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_0VL8rFOqEeSKJZkEFL8Tcg" name="" memberEnd="_0VL8rVOqEeSKJZkEFL8Tcg _0SzXEVOqEeSKJZkEFL8Tcg">
      <ownedEnd xmi:id="_0VL8rVOqEeSKJZkEFL8Tcg" name="" type="_0GGXz1OqEeSKJZkEFL8Tcg" association="_0VL8rFOqEeSKJZkEFL8Tcg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_0VL8r1OqEeSKJZkEFL8Tcg" name="" memberEnd="_0VL8sFOqEeSKJZkEFL8Tcg _0SzXE1OqEeSKJZkEFL8Tcg">
      <ownedEnd xmi:id="_0VL8sFOqEeSKJZkEFL8Tcg" name="" type="_0GGXz1OqEeSKJZkEFL8Tcg" association="_0VL8r1OqEeSKJZkEFL8Tcg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_0VVtoVOqEeSKJZkEFL8Tcg" name="" memberEnd="_0VVtolOqEeSKJZkEFL8Tcg _0SzXFVOqEeSKJZkEFL8Tcg">
      <ownedEnd xmi:id="_0VVtolOqEeSKJZkEFL8Tcg" name="" type="_0GGXz1OqEeSKJZkEFL8Tcg" association="_0VVtoVOqEeSKJZkEFL8Tcg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_0VVtpFOqEeSKJZkEFL8Tcg" name="" memberEnd="_0VVtpVOqEeSKJZkEFL8Tcg _0SzXF1OqEeSKJZkEFL8Tcg">
      <ownedEnd xmi:id="_0VVtpVOqEeSKJZkEFL8Tcg" name="" type="_0GGXz1OqEeSKJZkEFL8Tcg" association="_0VVtpFOqEeSKJZkEFL8Tcg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_0VfeoVOqEeSKJZkEFL8Tcg" name="" memberEnd="_0VfeolOqEeSKJZkEFL8Tcg _0S9IBVOqEeSKJZkEFL8Tcg">
      <ownedEnd xmi:id="_0VfeolOqEeSKJZkEFL8Tcg" name="" type="_0GZStVOqEeSKJZkEFL8Tcg" association="_0VfeoVOqEeSKJZkEFL8Tcg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_0VfepFOqEeSKJZkEFL8Tcg" name="" memberEnd="_0VfepVOqEeSKJZkEFL8Tcg _0S9IB1OqEeSKJZkEFL8Tcg">
      <ownedEnd xmi:id="_0VfepVOqEeSKJZkEFL8Tcg" name="" type="_0GZStVOqEeSKJZkEFL8Tcg" association="_0VfepFOqEeSKJZkEFL8Tcg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_0Vfep1OqEeSKJZkEFL8Tcg" name="" memberEnd="_0VfeqFOqEeSKJZkEFL8Tcg _0S9IC1OqEeSKJZkEFL8Tcg">
      <ownedEnd xmi:id="_0VfeqFOqEeSKJZkEFL8Tcg" name="" type="_0GZSt1OqEeSKJZkEFL8Tcg" association="_0Vfep1OqEeSKJZkEFL8Tcg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_0VfeqlOqEeSKJZkEFL8Tcg" name="" memberEnd="_0Vfeq1OqEeSKJZkEFL8Tcg _0S9IDVOqEeSKJZkEFL8Tcg">
      <ownedEnd xmi:id="_0Vfeq1OqEeSKJZkEFL8Tcg" name="" type="_0GZSt1OqEeSKJZkEFL8Tcg" association="_0VfeqlOqEeSKJZkEFL8Tcg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_0VferVOqEeSKJZkEFL8Tcg" name="" memberEnd="_0VferlOqEeSKJZkEFL8Tcg _0S9IEFOqEeSKJZkEFL8Tcg">
      <ownedEnd xmi:id="_0VferlOqEeSKJZkEFL8Tcg" name="" type="_0GjDsFOqEeSKJZkEFL8Tcg" association="_0VferVOqEeSKJZkEFL8Tcg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_0VfesFOqEeSKJZkEFL8Tcg" name="" memberEnd="_0VfesVOqEeSKJZkEFL8Tcg _0S9IE1OqEeSKJZkEFL8Tcg">
      <ownedEnd xmi:id="_0VfesVOqEeSKJZkEFL8Tcg" name="" type="_0GjDsFOqEeSKJZkEFL8Tcg" association="_0VfesFOqEeSKJZkEFL8Tcg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_0Vfes1OqEeSKJZkEFL8Tcg" name="" memberEnd="_0VfetFOqEeSKJZkEFL8Tcg _0S9IFVOqEeSKJZkEFL8Tcg">
      <ownedEnd xmi:id="_0VfetFOqEeSKJZkEFL8Tcg" name="" type="_0GjDsFOqEeSKJZkEFL8Tcg" association="_0Vfes1OqEeSKJZkEFL8Tcg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_0VfetlOqEeSKJZkEFL8Tcg" name="" memberEnd="_0Vfet1OqEeSKJZkEFL8Tcg _0S9IGlOqEeSKJZkEFL8Tcg">
      <ownedEnd xmi:id="_0Vfet1OqEeSKJZkEFL8Tcg" name="" type="_0GjDuFOqEeSKJZkEFL8Tcg" association="_0VfetlOqEeSKJZkEFL8Tcg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_0VfeuVOqEeSKJZkEFL8Tcg" name="" memberEnd="_0VfeulOqEeSKJZkEFL8Tcg _0TG5C1OqEeSKJZkEFL8Tcg">
      <ownedEnd xmi:id="_0VfeulOqEeSKJZkEFL8Tcg" name="" type="_0GsNqVOqEeSKJZkEFL8Tcg" association="_0VfeuVOqEeSKJZkEFL8Tcg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_0VfevFOqEeSKJZkEFL8Tcg" name="" memberEnd="_0VfevVOqEeSKJZkEFL8Tcg _0TG5DlOqEeSKJZkEFL8Tcg">
      <ownedEnd xmi:id="_0VfevVOqEeSKJZkEFL8Tcg" name="" type="_0GsNqVOqEeSKJZkEFL8Tcg" association="_0VfevFOqEeSKJZkEFL8Tcg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_0VookVOqEeSKJZkEFL8Tcg" name="" memberEnd="_0VooklOqEeSKJZkEFL8Tcg _0TG5EVOqEeSKJZkEFL8Tcg">
      <ownedEnd xmi:id="_0VooklOqEeSKJZkEFL8Tcg" name="" type="_0GsNqVOqEeSKJZkEFL8Tcg" association="_0VookVOqEeSKJZkEFL8Tcg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_0VoolFOqEeSKJZkEFL8Tcg" name="" memberEnd="_0VoolVOqEeSKJZkEFL8Tcg _0TG5FFOqEeSKJZkEFL8Tcg">
      <ownedEnd xmi:id="_0VoolVOqEeSKJZkEFL8Tcg" name="" type="_0GsNqVOqEeSKJZkEFL8Tcg" association="_0VoolFOqEeSKJZkEFL8Tcg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_0Vool1OqEeSKJZkEFL8Tcg" name="" memberEnd="_0VoomFOqEeSKJZkEFL8Tcg _0T2f5lOqEeSKJZkEFL8Tcg">
      <ownedEnd xmi:id="_0VoomFOqEeSKJZkEFL8Tcg" name="" type="_0FWw4FOqEeSKJZkEFL8Tcg" association="_0Vool1OqEeSKJZkEFL8Tcg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_0VoomlOqEeSKJZkEFL8Tcg" name="" memberEnd="_0Voom1OqEeSKJZkEFL8Tcg _0T2gBFOqEeSKJZkEFL8Tcg">
      <ownedEnd xmi:id="_0Voom1OqEeSKJZkEFL8Tcg" name="" type="_0GZSt1OqEeSKJZkEFL8Tcg" association="_0VoomlOqEeSKJZkEFL8Tcg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_0VoonVOqEeSKJZkEFL8Tcg" name="" memberEnd="_0VoonlOqEeSKJZkEFL8Tcg _0T2gCVOqEeSKJZkEFL8Tcg">
      <ownedEnd xmi:id="_0VoonlOqEeSKJZkEFL8Tcg" name="" type="_0GjDsFOqEeSKJZkEFL8Tcg" association="_0VoonVOqEeSKJZkEFL8Tcg"/>
    </packagedElement>
    <profileApplication xmi:id="_zesZg1OqEeSKJZkEFL8Tcg">
      <eAnnotations xmi:id="_zesZhFOqEeSKJZkEFL8Tcg" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile"/>
    </profileApplication>
  </uml:Model>
  <UMLLabProfile:TargetLanguage xmi:id="_zesZhVOqEeSKJZkEFL8Tcg" base_Package="_zRuUgFOqEeSKJZkEFL8Tcg">
    <languageName>java</languageName>
  </UMLLabProfile:TargetLanguage>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0GGXwlOqEeSKJZkEFL8Tcg" base_Element="_0GGXwFOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Annotations xmi:id="_0GGXw1OqEeSKJZkEFL8Tcg" base_Element="_0GGXwFOqEeSKJZkEFL8Tcg">
    <annotations xmi:id="_0GGXxFOqEeSKJZkEFL8Tcg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0GGXx1OqEeSKJZkEFL8Tcg" base_Element="_0GGXxVOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Annotations xmi:id="_0GGXyFOqEeSKJZkEFL8Tcg" base_Element="_0GGXxVOqEeSKJZkEFL8Tcg">
    <annotations xmi:id="_0GGXyVOqEeSKJZkEFL8Tcg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0GGXzFOqEeSKJZkEFL8Tcg" base_Element="_0GGXylOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Annotations xmi:id="_0GGXzVOqEeSKJZkEFL8Tcg" base_Element="_0GGXylOqEeSKJZkEFL8Tcg">
    <annotations xmi:id="_0GGXzlOqEeSKJZkEFL8Tcg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0GPhs1OqEeSKJZkEFL8Tcg" base_Element="_0GPhsFOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Annotations xmi:id="_0GPhtVOqEeSKJZkEFL8Tcg" base_Element="_0GPhsFOqEeSKJZkEFL8Tcg">
    <annotations xmi:id="_0GPhtlOqEeSKJZkEFL8Tcg" name="SuppressWarnings">
      <annotationParameters xmi:id="_0GPht1OqEeSKJZkEFL8Tcg" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_0T2f9lOqEeSKJZkEFL8Tcg" value="&quot;static-access&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_0GsNo1OqEeSKJZkEFL8Tcg" base_Element="_0GsNoVOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Array xmi:id="_0G_InVOqEeSKJZkEFL8Tcg" dimensions="1" base_Element="_0G_ImlOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Array xmi:id="_0G_IolOqEeSKJZkEFL8Tcg" dimensions="1" base_Element="_0G_InlOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Array xmi:id="_0G_IsVOqEeSKJZkEFL8Tcg" dimensions="1" base_Element="_0G_IrVOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0NIz4FOqEeSKJZkEFL8Tcg" base_Element="_0NHlwFOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0NJa8FOqEeSKJZkEFL8Tcg" base_Element="_0NIz4VOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0NKpEFOqEeSKJZkEFL8Tcg" base_Element="_0NKCAFOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0NVoMFOqEeSKJZkEFL8Tcg" base_Element="_0NUaEFOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0NWPQFOqEeSKJZkEFL8Tcg" base_Element="_0NVoMVOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0NXdYFOqEeSKJZkEFL8Tcg" base_Element="_0NW2UFOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0NYrgFOqEeSKJZkEFL8Tcg" base_Element="_0NXdYVOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0NagsFOqEeSKJZkEFL8Tcg" base_Element="_0NZSkFOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0Nbu0FOqEeSKJZkEFL8Tcg" base_Element="_0NbHwFOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0NmG4FOqEeSKJZkEFL8Tcg" base_Element="_0NkRsFOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0NnVAFOqEeSKJZkEFL8Tcg" base_Element="_0Nmt8FOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0NpKMFOqEeSKJZkEFL8Tcg" base_Element="_0Nn8EFOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0NqYUFOqEeSKJZkEFL8Tcg" base_Element="_0NpxQFOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0OBksFOqEeSKJZkEFL8Tcg" base_Element="_0N96UFOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0ODZ4FOqEeSKJZkEFL8Tcg" base_Element="_0OCLwFOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0OEoAFOqEeSKJZkEFL8Tcg" base_Element="_0OEA8FOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0OF2IFOqEeSKJZkEFL8Tcg" base_Element="_0OFPEFOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0OHEQFOqEeSKJZkEFL8Tcg" base_Element="_0OGdMFOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0OISYFOqEeSKJZkEFL8Tcg" base_Element="_0OHrUFOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0OJggFOqEeSKJZkEFL8Tcg" base_Element="_0OISYVOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0OKHkFOqEeSKJZkEFL8Tcg" base_Element="_0OJggVOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0OKuoFOqEeSKJZkEFL8Tcg" base_Element="_0OKHkVOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0OL8wFOqEeSKJZkEFL8Tcg" base_Element="_0OLVsFOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0OMj0FOqEeSKJZkEFL8Tcg" base_Element="_0OL8wVOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0OPnIFOqEeSKJZkEFL8Tcg" base_Element="_0OPAEFOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0OQOMFOqEeSKJZkEFL8Tcg" base_Element="_0OPnIVOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0ORcUFOqEeSKJZkEFL8Tcg" base_Element="_0OQ1QFOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0OSqcFOqEeSKJZkEFL8Tcg" base_Element="_0OSDYFOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0OnakFOqEeSKJZkEFL8Tcg" base_Element="_0OmMcFOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0OoosFOqEeSKJZkEFL8Tcg" base_Element="_0OoBoFOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0Oqd4FOqEeSKJZkEFL8Tcg" base_Element="_0OpPwFOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0OsTEFOqEeSKJZkEFL8Tcg" base_Element="_0OrsAFOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0OuvUFOqEeSKJZkEFL8Tcg" base_Element="_0OthMFOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0O1dAFOqEeSKJZkEFL8Tcg" base_Element="_0O0O4FOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0O3SMFOqEeSKJZkEFL8Tcg" base_Element="_0O2EEFOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0O4gUFOqEeSKJZkEFL8Tcg" base_Element="_0O3SMVOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0O5HYFOqEeSKJZkEFL8Tcg" base_Element="_0O4gUVOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0O6VgFOqEeSKJZkEFL8Tcg" base_Element="_0O5HYVOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0O68kFOqEeSKJZkEFL8Tcg" base_Element="_0O6VgVOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0O8KsFOqEeSKJZkEFL8Tcg" base_Element="_0O7joFOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0O9Y0FOqEeSKJZkEFL8Tcg" base_Element="_0O8xwFOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0PC4YFOqEeSKJZkEFL8Tcg" base_Element="_0PBqQFOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0PF7sFOqEeSKJZkEFL8Tcg" base_Element="_0PFUoFOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0PI_AFOqEeSKJZkEFL8Tcg" base_Element="_0PIX8FOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0PK0MFOqEeSKJZkEFL8Tcg" base_Element="_0PJmEFOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0PMCUFOqEeSKJZkEFL8Tcg" base_Element="_0PK0MVOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0PMpYFOqEeSKJZkEFL8Tcg" base_Element="_0PMCUVOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0POekFOqEeSKJZkEFL8Tcg" base_Element="_0PNQcFOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0PaEwFOqEeSKJZkEFL8Tcg" base_Element="_0PZdsFOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0QMu8FOqEeSKJZkEFL8Tcg" base_Element="_0PeWMFOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0QPLMFOqEeSKJZkEFL8Tcg" base_Element="_0QN9EFOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0QPyQFOqEeSKJZkEFL8Tcg" base_Element="_0QPLMVOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0QQZUFOqEeSKJZkEFL8Tcg" base_Element="_0QPyQVOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0QRncFOqEeSKJZkEFL8Tcg" base_Element="_0QRAYFOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0QTcoFOqEeSKJZkEFL8Tcg" base_Element="_0QS1kFOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0QUqwFOqEeSKJZkEFL8Tcg" base_Element="_0QUDsFOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0QV44FOqEeSKJZkEFL8Tcg" base_Element="_0QUqwVOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0QXHAFOqEeSKJZkEFL8Tcg" base_Element="_0QWf8FOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0QXuEFOqEeSKJZkEFL8Tcg" base_Element="_0QXHAVOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0QuTY1OqEeSKJZkEFL8Tcg" base_Element="_0QuTYlOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0Q3dW1OqEeSKJZkEFL8Tcg" base_Element="_0Q3dWlOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0Q3dXlOqEeSKJZkEFL8Tcg" base_Element="_0Q3dXFOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Annotations xmi:id="_0Q3dX1OqEeSKJZkEFL8Tcg" base_Element="_0Q3dXFOqEeSKJZkEFL8Tcg">
    <annotations xmi:id="_0Q3dYFOqEeSKJZkEFL8Tcg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0Q3dY1OqEeSKJZkEFL8Tcg" base_Element="_0Q3dYVOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Annotations xmi:id="_0RBOUFOqEeSKJZkEFL8Tcg" base_Element="_0Q3dYVOqEeSKJZkEFL8Tcg">
    <annotations xmi:id="_0RBOUVOqEeSKJZkEFL8Tcg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0RBOVFOqEeSKJZkEFL8Tcg" base_Element="_0RBOUlOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Annotations xmi:id="_0RBOVVOqEeSKJZkEFL8Tcg" base_Element="_0RBOUlOqEeSKJZkEFL8Tcg">
    <annotations xmi:id="_0RBOVlOqEeSKJZkEFL8Tcg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0RBOWVOqEeSKJZkEFL8Tcg" base_Element="_0RBOV1OqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Annotations xmi:id="_0RBOWlOqEeSKJZkEFL8Tcg" base_Element="_0RBOV1OqEeSKJZkEFL8Tcg">
    <annotations xmi:id="_0RBOW1OqEeSKJZkEFL8Tcg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0RBOXlOqEeSKJZkEFL8Tcg" base_Element="_0RBOXFOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Annotations xmi:id="_0RBOX1OqEeSKJZkEFL8Tcg" base_Element="_0RBOXFOqEeSKJZkEFL8Tcg">
    <annotations xmi:id="_0RBOYFOqEeSKJZkEFL8Tcg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0RBOY1OqEeSKJZkEFL8Tcg" base_Element="_0RBOYVOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Annotations xmi:id="_0RBOZFOqEeSKJZkEFL8Tcg" base_Element="_0RBOYVOqEeSKJZkEFL8Tcg">
    <annotations xmi:id="_0RBOZVOqEeSKJZkEFL8Tcg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0RBOalOqEeSKJZkEFL8Tcg" base_Element="_0RBOaFOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Annotations xmi:id="_0RBOa1OqEeSKJZkEFL8Tcg" base_Element="_0RBOaFOqEeSKJZkEFL8Tcg">
    <annotations xmi:id="_0RBObFOqEeSKJZkEFL8Tcg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0RK_ZFOqEeSKJZkEFL8Tcg" base_Element="_0RK_YlOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0RK_Z1OqEeSKJZkEFL8Tcg" base_Element="_0RK_ZVOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0RUJQFOqEeSKJZkEFL8Tcg" base_Element="_0RK_aFOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0RUJQ1OqEeSKJZkEFL8Tcg" base_Element="_0RUJQVOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0RUJRlOqEeSKJZkEFL8Tcg" base_Element="_0RUJRFOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0Rd6TFOqEeSKJZkEFL8Tcg" base_Element="_0Rd6SlOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Annotations xmi:id="_0Rd6TVOqEeSKJZkEFL8Tcg" base_Element="_0Rd6SlOqEeSKJZkEFL8Tcg">
    <annotations xmi:id="_0Rd6TlOqEeSKJZkEFL8Tcg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_0Rd6UFOqEeSKJZkEFL8Tcg" base_Element="_0Rd6T1OqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0RnrRFOqEeSKJZkEFL8Tcg" base_Element="_0RnrQVOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Annotations xmi:id="_0RnrRVOqEeSKJZkEFL8Tcg" base_Element="_0RnrQVOqEeSKJZkEFL8Tcg">
    <annotations xmi:id="_0RnrRlOqEeSKJZkEFL8Tcg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0RnrSVOqEeSKJZkEFL8Tcg" base_Element="_0RnrR1OqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Annotations xmi:id="_0RnrSlOqEeSKJZkEFL8Tcg" base_Element="_0RnrR1OqEeSKJZkEFL8Tcg">
    <annotations xmi:id="_0RnrS1OqEeSKJZkEFL8Tcg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0RnrUVOqEeSKJZkEFL8Tcg" base_Element="_0RnrT1OqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0RnrU1OqEeSKJZkEFL8Tcg" base_Element="_0RnrUlOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0Rw1NFOqEeSKJZkEFL8Tcg" base_Element="_0Rw1MlOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Annotations xmi:id="_0Rw1NVOqEeSKJZkEFL8Tcg" base_Element="_0Rw1MlOqEeSKJZkEFL8Tcg">
    <annotations xmi:id="_0Rw1NlOqEeSKJZkEFL8Tcg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0Rw1OlOqEeSKJZkEFL8Tcg" base_Element="_0Rw1OFOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Annotations xmi:id="_0Rw1O1OqEeSKJZkEFL8Tcg" base_Element="_0Rw1OFOqEeSKJZkEFL8Tcg">
    <annotations xmi:id="_0Rw1PFOqEeSKJZkEFL8Tcg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0SDwJFOqEeSKJZkEFL8Tcg" base_Element="_0SDwIlOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0SDwJ1OqEeSKJZkEFL8Tcg" base_Element="_0SDwJVOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0SDwKlOqEeSKJZkEFL8Tcg" base_Element="_0SDwKFOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0SDwLVOqEeSKJZkEFL8Tcg" base_Element="_0SDwK1OqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0SDwMFOqEeSKJZkEFL8Tcg" base_Element="_0SDwLlOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0SDwM1OqEeSKJZkEFL8Tcg" base_Element="_0SDwMVOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0SDwNlOqEeSKJZkEFL8Tcg" base_Element="_0SDwNFOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0SDwOVOqEeSKJZkEFL8Tcg" base_Element="_0SDwN1OqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0SNhIVOqEeSKJZkEFL8Tcg" base_Element="_0SDwOlOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0SNhJFOqEeSKJZkEFL8Tcg" base_Element="_0SNhIlOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0SNhJ1OqEeSKJZkEFL8Tcg" base_Element="_0SNhJVOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0SNhKlOqEeSKJZkEFL8Tcg" base_Element="_0SNhKFOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0SNhLVOqEeSKJZkEFL8Tcg" base_Element="_0SNhK1OqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0SNhMFOqEeSKJZkEFL8Tcg" base_Element="_0SNhLlOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0SNhM1OqEeSKJZkEFL8Tcg" base_Element="_0SNhMVOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0SNhNlOqEeSKJZkEFL8Tcg" base_Element="_0SNhNFOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0SNhOVOqEeSKJZkEFL8Tcg" base_Element="_0SNhN1OqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0SNhPFOqEeSKJZkEFL8Tcg" base_Element="_0SNhOlOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0SXSIlOqEeSKJZkEFL8Tcg" base_Element="_0SXSIFOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0SXSJVOqEeSKJZkEFL8Tcg" base_Element="_0SXSI1OqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0SXSKVOqEeSKJZkEFL8Tcg" base_Element="_0SXSKFOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Generics xmi:id="_0SXSK1OqEeSKJZkEFL8Tcg" genericsValue="JLabel" base_Element="_0SXSKlOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0SXSLFOqEeSKJZkEFL8Tcg" base_Element="_0SXSKlOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0SXSLlOqEeSKJZkEFL8Tcg" base_Element="_0SXSLVOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0SXSMFOqEeSKJZkEFL8Tcg" base_Element="_0SXSL1OqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0SXSMlOqEeSKJZkEFL8Tcg" base_Element="_0SXSMVOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0SXSNFOqEeSKJZkEFL8Tcg" base_Element="_0SXSM1OqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0SXSOFOqEeSKJZkEFL8Tcg" base_Element="_0SXSN1OqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0SXSOlOqEeSKJZkEFL8Tcg" base_Element="_0SXSOVOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0SXSPFOqEeSKJZkEFL8Tcg" base_Element="_0SXSO1OqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0SgcEFOqEeSKJZkEFL8Tcg" base_Element="_0SXSPVOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0SgcElOqEeSKJZkEFL8Tcg" base_Element="_0SgcEVOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0SgcFFOqEeSKJZkEFL8Tcg" base_Element="_0SgcE1OqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0SgcFlOqEeSKJZkEFL8Tcg" base_Element="_0SgcFVOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0SgcGlOqEeSKJZkEFL8Tcg" base_Element="_0SgcGVOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_0SgcHFOqEeSKJZkEFL8Tcg" base_Property="_0SgcG1OqEeSKJZkEFL8Tcg" siblings="_0T2f5lOqEeSKJZkEFL8Tcg" root="true"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0SgcHVOqEeSKJZkEFL8Tcg" base_Element="_0SgcG1OqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0SgcI1OqEeSKJZkEFL8Tcg" base_Element="_0SgcIlOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0SgcJVOqEeSKJZkEFL8Tcg" base_Element="_0SgcJFOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0SgcJ1OqEeSKJZkEFL8Tcg" base_Element="_0SgcJlOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0SgcKVOqEeSKJZkEFL8Tcg" base_Element="_0SgcKFOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0SgcK1OqEeSKJZkEFL8Tcg" base_Element="_0SgcKlOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0SgcLVOqEeSKJZkEFL8Tcg" base_Element="_0SgcLFOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0SqNEFOqEeSKJZkEFL8Tcg" base_Element="_0SgcLlOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0SqNE1OqEeSKJZkEFL8Tcg" base_Element="_0SqNEVOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0SqNFVOqEeSKJZkEFL8Tcg" base_Element="_0SqNFFOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0SqNF1OqEeSKJZkEFL8Tcg" base_Element="_0SqNFlOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0SqNGVOqEeSKJZkEFL8Tcg" base_Element="_0SqNGFOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_0SqNG1OqEeSKJZkEFL8Tcg" base_Property="_0SqNGlOqEeSKJZkEFL8Tcg" siblings="_0T2f7FOqEeSKJZkEFL8Tcg" root="true"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0SqNHFOqEeSKJZkEFL8Tcg" base_Element="_0SqNGlOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Array xmi:id="_0SqNH1OqEeSKJZkEFL8Tcg" base_Element="_0SqNHVOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0SqNIFOqEeSKJZkEFL8Tcg" base_Element="_0SqNHVOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Array xmi:id="_0SqNI1OqEeSKJZkEFL8Tcg" base_Element="_0SqNIVOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0SqNJFOqEeSKJZkEFL8Tcg" base_Element="_0SqNIVOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0SqNKFOqEeSKJZkEFL8Tcg" base_Element="_0SqNJ1OqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0SqNKlOqEeSKJZkEFL8Tcg" base_Element="_0SqNKVOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0SzXAFOqEeSKJZkEFL8Tcg" base_Element="_0SqNK1OqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0SzXAlOqEeSKJZkEFL8Tcg" base_Element="_0SzXAVOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0SzXBVOqEeSKJZkEFL8Tcg" base_Element="_0SzXA1OqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0SzXCFOqEeSKJZkEFL8Tcg" base_Element="_0SzXBlOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0SzXEFOqEeSKJZkEFL8Tcg" base_Element="_0SzXD1OqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0SzXElOqEeSKJZkEFL8Tcg" base_Element="_0SzXEVOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0SzXFFOqEeSKJZkEFL8Tcg" base_Element="_0SzXE1OqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0SzXFlOqEeSKJZkEFL8Tcg" base_Element="_0SzXFVOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0SzXGFOqEeSKJZkEFL8Tcg" base_Element="_0SzXF1OqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0SzXHFOqEeSKJZkEFL8Tcg" base_Element="_0SzXG1OqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0SzXHlOqEeSKJZkEFL8Tcg" base_Element="_0SzXHVOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0S9IAFOqEeSKJZkEFL8Tcg" base_Element="_0SzXH1OqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0S9IAlOqEeSKJZkEFL8Tcg" base_Element="_0S9IAVOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0S9IBlOqEeSKJZkEFL8Tcg" base_Element="_0S9IBVOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0S9ICFOqEeSKJZkEFL8Tcg" base_Element="_0S9IB1OqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0S9IDFOqEeSKJZkEFL8Tcg" base_Element="_0S9IC1OqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_0S9IDlOqEeSKJZkEFL8Tcg" base_Property="_0S9IDVOqEeSKJZkEFL8Tcg" siblings="_0T2gBFOqEeSKJZkEFL8Tcg" root="true"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0S9ID1OqEeSKJZkEFL8Tcg" base_Element="_0S9IDVOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0S9IElOqEeSKJZkEFL8Tcg" base_Element="_0S9IEFOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0S9IFFOqEeSKJZkEFL8Tcg" base_Element="_0S9IE1OqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_0S9IFlOqEeSKJZkEFL8Tcg" base_Property="_0S9IFVOqEeSKJZkEFL8Tcg" siblings="_0T2gCVOqEeSKJZkEFL8Tcg" root="true"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0S9IF1OqEeSKJZkEFL8Tcg" base_Element="_0S9IFVOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0S9IG1OqEeSKJZkEFL8Tcg" base_Element="_0S9IGlOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0TG5AFOqEeSKJZkEFL8Tcg" base_Element="_0S9IHFOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0TG5AlOqEeSKJZkEFL8Tcg" base_Element="_0TG5AVOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0TG5BFOqEeSKJZkEFL8Tcg" base_Element="_0TG5A1OqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Array xmi:id="_0TG5CVOqEeSKJZkEFL8Tcg" dimensions="2" base_Element="_0TG5B1OqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0TG5ClOqEeSKJZkEFL8Tcg" base_Element="_0TG5B1OqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Generics xmi:id="_0TG5DFOqEeSKJZkEFL8Tcg" genericsValue="KodeKsMove" base_Element="_0TG5C1OqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0TG5DVOqEeSKJZkEFL8Tcg" base_Element="_0TG5C1OqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Generics xmi:id="_0TG5D1OqEeSKJZkEFL8Tcg" genericsValue="ThreatenStone" base_Element="_0TG5DlOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0TG5EFOqEeSKJZkEFL8Tcg" base_Element="_0TG5DlOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Generics xmi:id="_0TG5ElOqEeSKJZkEFL8Tcg" genericsValue="LaserField" base_Element="_0TG5EVOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0TG5E1OqEeSKJZkEFL8Tcg" base_Element="_0TG5EVOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Array xmi:id="_0TG5FlOqEeSKJZkEFL8Tcg" base_Element="_0TG5FFOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0TG5F1OqEeSKJZkEFL8Tcg" base_Element="_0TG5FFOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_0TG5G1OqEeSKJZkEFL8Tcg" base_Property="_0TG5GlOqEeSKJZkEFL8Tcg" siblings="_0UAQ5lOqEeSKJZkEFL8Tcg" root="true"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0TG5HFOqEeSKJZkEFL8Tcg" base_Element="_0TG5GlOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_0TG5HlOqEeSKJZkEFL8Tcg" base_Property="_0TG5HVOqEeSKJZkEFL8Tcg" siblings="_0UAQ6VOqEeSKJZkEFL8Tcg" root="true"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0TG5H1OqEeSKJZkEFL8Tcg" base_Element="_0TG5HVOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_0TQC81OqEeSKJZkEFL8Tcg" base_Property="_0TQC8lOqEeSKJZkEFL8Tcg" siblings="_0UAQ7VOqEeSKJZkEFL8Tcg" root="true"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0TQC9FOqEeSKJZkEFL8Tcg" base_Element="_0TQC8lOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_0TQC-FOqEeSKJZkEFL8Tcg" base_Property="_0TQC91OqEeSKJZkEFL8Tcg" siblings="_0UAQ8FOqEeSKJZkEFL8Tcg" root="true"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0TQC-VOqEeSKJZkEFL8Tcg" base_Element="_0TQC91OqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0TQC-1OqEeSKJZkEFL8Tcg" base_Element="_0TQC-lOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_0TQC_lOqEeSKJZkEFL8Tcg" base_Property="_0TQC_FOqEeSKJZkEFL8Tcg" siblings="_0UAQ81OqEeSKJZkEFL8Tcg _0UAQ91OqEeSKJZkEFL8Tcg" root="true"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0TQC_1OqEeSKJZkEFL8Tcg" base_Element="_0TQC_FOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Array xmi:id="_0TQDAlOqEeSKJZkEFL8Tcg" dimensions="2" base_Element="_0TQDAFOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0TQDBFOqEeSKJZkEFL8Tcg" base_Element="_0TQDAFOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Array xmi:id="_0TQDB1OqEeSKJZkEFL8Tcg" dimensions="2" base_Element="_0TQDBVOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0TQDCVOqEeSKJZkEFL8Tcg" base_Element="_0TQDBVOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_0T2f51OqEeSKJZkEFL8Tcg" base_Property="_0T2f5lOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0T2f6FOqEeSKJZkEFL8Tcg" base_Element="_0T2f5lOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_0T2f7VOqEeSKJZkEFL8Tcg" base_Property="_0T2f7FOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0T2f7lOqEeSKJZkEFL8Tcg" base_Element="_0T2f7FOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_0T2gBVOqEeSKJZkEFL8Tcg" base_Property="_0T2gBFOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0T2gBlOqEeSKJZkEFL8Tcg" base_Element="_0T2gBFOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_0UAQ4FOqEeSKJZkEFL8Tcg" base_Property="_0T2gCVOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0UAQ4VOqEeSKJZkEFL8Tcg" base_Element="_0T2gCVOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_0UAQ51OqEeSKJZkEFL8Tcg" base_Property="_0UAQ5lOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0UAQ6FOqEeSKJZkEFL8Tcg" base_Element="_0UAQ5lOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_0UAQ6lOqEeSKJZkEFL8Tcg" base_Property="_0UAQ6VOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0UAQ61OqEeSKJZkEFL8Tcg" base_Element="_0UAQ6VOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_0UAQ7lOqEeSKJZkEFL8Tcg" base_Property="_0UAQ7VOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0UAQ71OqEeSKJZkEFL8Tcg" base_Element="_0UAQ7VOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_0UAQ8VOqEeSKJZkEFL8Tcg" base_Property="_0UAQ8FOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0UAQ8lOqEeSKJZkEFL8Tcg" base_Element="_0UAQ8FOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_0UAQ9FOqEeSKJZkEFL8Tcg" base_Property="_0UAQ81OqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0UAQ9VOqEeSKJZkEFL8Tcg" base_Element="_0UAQ81OqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_0UAQ-FOqEeSKJZkEFL8Tcg" base_Property="_0UAQ91OqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_0UAQ-VOqEeSKJZkEFL8Tcg" base_Element="_0UAQ91OqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0UcVwlOqEeSKJZkEFL8Tcg" base_Element="_0UcVwFOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0UcVxVOqEeSKJZkEFL8Tcg" base_Element="_0UcVw1OqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0UcVyFOqEeSKJZkEFL8Tcg" base_Element="_0UcVxlOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0UmGwFOqEeSKJZkEFL8Tcg" base_Element="_0UcVyVOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0UmGw1OqEeSKJZkEFL8Tcg" base_Element="_0UmGwVOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0UmGxlOqEeSKJZkEFL8Tcg" base_Element="_0UmGxFOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0UmGyVOqEeSKJZkEFL8Tcg" base_Element="_0UmGx1OqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0UmGzFOqEeSKJZkEFL8Tcg" base_Element="_0UmGylOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0UmGz1OqEeSKJZkEFL8Tcg" base_Element="_0UmGzVOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0Uv3wFOqEeSKJZkEFL8Tcg" base_Element="_0UmG0FOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0Uv3w1OqEeSKJZkEFL8Tcg" base_Element="_0Uv3wVOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0Uv3xlOqEeSKJZkEFL8Tcg" base_Element="_0Uv3xFOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0Uv3yVOqEeSKJZkEFL8Tcg" base_Element="_0Uv3x1OqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0Uv3zFOqEeSKJZkEFL8Tcg" base_Element="_0Uv3ylOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0Uv3z1OqEeSKJZkEFL8Tcg" base_Element="_0Uv3zVOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0Uv30lOqEeSKJZkEFL8Tcg" base_Element="_0Uv30FOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0U5BslOqEeSKJZkEFL8Tcg" base_Element="_0U5BsFOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0U5BtVOqEeSKJZkEFL8Tcg" base_Element="_0U5Bs1OqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0U5BuFOqEeSKJZkEFL8Tcg" base_Element="_0U5BtlOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0U5Bu1OqEeSKJZkEFL8Tcg" base_Element="_0U5BuVOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0U5BvlOqEeSKJZkEFL8Tcg" base_Element="_0U5BvFOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0U5BwVOqEeSKJZkEFL8Tcg" base_Element="_0U5Bv1OqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0U5BxFOqEeSKJZkEFL8Tcg" base_Element="_0U5BwlOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0U5Bx1OqEeSKJZkEFL8Tcg" base_Element="_0U5BxVOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0U5BylOqEeSKJZkEFL8Tcg" base_Element="_0U5ByFOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0U5BzVOqEeSKJZkEFL8Tcg" base_Element="_0U5By1OqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0U5B0FOqEeSKJZkEFL8Tcg" base_Element="_0U5BzlOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0VCysFOqEeSKJZkEFL8Tcg" base_Element="_0U5B0VOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0VCys1OqEeSKJZkEFL8Tcg" base_Element="_0VCysVOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0VCytlOqEeSKJZkEFL8Tcg" base_Element="_0VCytFOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0VCyuVOqEeSKJZkEFL8Tcg" base_Element="_0VCyt1OqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0VCyvFOqEeSKJZkEFL8Tcg" base_Element="_0VCyulOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0VCyv1OqEeSKJZkEFL8Tcg" base_Element="_0VCyvVOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0VCywlOqEeSKJZkEFL8Tcg" base_Element="_0VCywFOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0VCyxVOqEeSKJZkEFL8Tcg" base_Element="_0VCyw1OqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0VCyyFOqEeSKJZkEFL8Tcg" base_Element="_0VCyxlOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0VCyy1OqEeSKJZkEFL8Tcg" base_Element="_0VCyyVOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0VCyzlOqEeSKJZkEFL8Tcg" base_Element="_0VCyzFOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0VCy0VOqEeSKJZkEFL8Tcg" base_Element="_0VCyz1OqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0VL8olOqEeSKJZkEFL8Tcg" base_Element="_0VL8oFOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0VL8pVOqEeSKJZkEFL8Tcg" base_Element="_0VL8o1OqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0VL8qFOqEeSKJZkEFL8Tcg" base_Element="_0VL8plOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0VL8q1OqEeSKJZkEFL8Tcg" base_Element="_0VL8qVOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0VL8rlOqEeSKJZkEFL8Tcg" base_Element="_0VL8rFOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0VVtoFOqEeSKJZkEFL8Tcg" base_Element="_0VL8r1OqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0VVto1OqEeSKJZkEFL8Tcg" base_Element="_0VVtoVOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0VfeoFOqEeSKJZkEFL8Tcg" base_Element="_0VVtpFOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0Vfeo1OqEeSKJZkEFL8Tcg" base_Element="_0VfeoVOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0VfeplOqEeSKJZkEFL8Tcg" base_Element="_0VfepFOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0VfeqVOqEeSKJZkEFL8Tcg" base_Element="_0Vfep1OqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0VferFOqEeSKJZkEFL8Tcg" base_Element="_0VfeqlOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0Vfer1OqEeSKJZkEFL8Tcg" base_Element="_0VferVOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0VfeslOqEeSKJZkEFL8Tcg" base_Element="_0VfesFOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0VfetVOqEeSKJZkEFL8Tcg" base_Element="_0Vfes1OqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0VfeuFOqEeSKJZkEFL8Tcg" base_Element="_0VfetlOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0Vfeu1OqEeSKJZkEFL8Tcg" base_Element="_0VfeuVOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0VookFOqEeSKJZkEFL8Tcg" base_Element="_0VfevFOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0Vook1OqEeSKJZkEFL8Tcg" base_Element="_0VookVOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0VoollOqEeSKJZkEFL8Tcg" base_Element="_0VoolFOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0VoomVOqEeSKJZkEFL8Tcg" base_Element="_0Vool1OqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0VoonFOqEeSKJZkEFL8Tcg" base_Element="_0VoomlOqEeSKJZkEFL8Tcg"/>
  <UMLLabProfile:Reference xmi:id="_0Voon1OqEeSKJZkEFL8Tcg" base_Element="_0VoonVOqEeSKJZkEFL8Tcg"/>
</xmi:XMI>
